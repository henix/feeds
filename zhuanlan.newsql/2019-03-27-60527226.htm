<div class="title-image"><img src="https://pic3.zhimg.com/v2-2f3762375ddada5da16c1bd2edd24aa9_b.jpg" alt=""></div><blockquote>2019 年 03 月 26 日，TiDB 发布 3.0.0 Beta.1 版，对应的 TiDB-Ansible 版本为 3.0.0 Beta。相比 3.0.0 Beta 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。</blockquote><h2><b>TiDB</b></h2><h3><b>SQL 优化器</b></h3><ul><li>支持使用 Sort Merge Join 计算笛卡尔积 </li><li>支持 Skyline Pruning，用一些规则来防止执行计划过于依赖统计信息</li><li>支持 Window Functions</li><ul><li><code>NTILE</code> </li><li><code>LEAD</code> 和 <code>LAG</code> </li><li><code>PERCENT_RANK</code> </li><li><code>NTH_VALUE</code> </li><li><code>CUME_DIST</code> </li><li><code>FIRST_VALUE</code> 和 <code>LAST_VALUE</code> </li><li><code>RANK</code> 和 <code>DENSE_RANK</code> </li><li><code>RANGE FRAMED</code> </li><li><code>ROW FRAMED</code> </li><li><code>ROW NUMBER</code> </li></ul><li>增加了一类统计信息，表示列和 handle 列之间顺序的相关性 </li></ul><h3><b>SQL 执行引擎</b></h3><ul><li>增加内建函数</li><ul><li><code>JSON_QUOTE</code> </li><li><code>JSON_ARRAY_APPEND</code> </li><li><code>JSON_MERGE_PRESERVE</code> </li><li><code>BENCHMARK</code> </li><li><code>COALESCE</code> </li><li><code>NAME_CONST</code> </li></ul><li>根据查询上下文优化 Chunk 大小，降低 SQL 执行时间和集群的资源消耗 </li></ul><h3><b>权限管理</b></h3><ul><li>支持 <code>SET ROLE</code> 和 <code>CURRENT_ROLE</code> </li><li>支持 <code>DROP ROLE</code> </li><li>支持 <code>CREATE ROLE</code> </li></ul><h3><b>Server</b></h3><ul><li>新增 <code>/debug/zip</code> HTTP 接口，获取当前 TiDB 实例的信息 </li><li>支持使用 <code>show pump status</code>/<code>show drainer status</code> 语句查看 Pump/Drainer 状态 </li><li>支持使用 SQL 语句在线修改 Pump/Drainer 状态 </li><li>支持给 SQL 文本加上 HASH 指纹，方便追查慢 SQL </li><li>新增 <code>log_bin</code> 系统变量，默认：0，管理 binlog 开启状态，当前仅支持查看状态 </li><li>支持通过配置文件管理发送 binlog 策略 </li><li>支持通过内存表 <code>INFORMATION_SCHEMA.SLOW_QUERY</code> 查询慢日志 </li><li>将 TiDB 显示的 MySQL Version 从 5.7.10 变更为 5.7.25 </li><li>统一<a href="https://link.zhihu.com/?target=https%3A//github.com/tikv/rfcs/blob/master/text/2018-12-19-unified-log-format.md" class=" wrap external" target="_blank" rel="nofollow noreferrer">日志格式规范</a>，利于工具收集分析</li><li>增加监控项 <code>high_error_rate_feedback_total</code>，记录实际数据量与统计信息估算数据量差距情况 </li><li>新增 Database 维度的 QPS 监控项 , 可以通过配置项开启 </li></ul><h3><b>DDL</b></h3><ul><li>增加<code>ddl_error_count_limit</code>全局变量，默认值：512，限制 DDL 任务重试次数，超过限制次数会取消出错的 DDL </li><li>支持 ALTER ALGORITHM <code>INPLACE</code>/<code>INSTANT</code> </li><li>支持 <code>SHOW CREATE VIEW</code> 语句 </li><li>支持 <code>SHOW CREATE USER</code> 语句 </li></ul><h2>PD</h2><ul><li>统一<a href="https://link.zhihu.com/?target=https%3A//github.com/tikv/rfcs/blob/master/text/2018-12-19-unified-log-format.md" class=" wrap external" target="_blank" rel="nofollow noreferrer">日志格式规范</a>，利于工具收集分析</li><li>模拟器</li><ul><li>支持不同 store 可采用不同的心跳间隔时间 </li><li>添加导入数据的场景 </li></ul><li>热点调度可配置化 </li><li>增加 store 地址为维度的监控项，代替原有的 Store ID </li><li>优化 <code>GetStores</code> 开销，加快 Region 巡检周期 </li><li>新增删除 Tombstone Store 的接口 </li></ul><h2>TiKV</h2><ul><li>优化 Coprocessor 计算执行框架，完成 TableScan 算子，单 TableScan 即扫表操作性能提升 5% ~ 30% 实现行 <code>BatchRows</code> 和列 <code>BatchColumn</code> 的定义 </li><ul><li>实现 <code>VectorLike</code> 使得编码和解码的数据能够用统一的方式访问 </li><li>定义 <code>BatchExecutor</code> 接口，实现将请求转化为 <code>BatchExecutor</code> 的方法 </li><li>实现将表达式树转化成 RPN 格式 </li><li>TableScan 算子实现为 Batch 方式，通过向量化计算加速计算 </li></ul><li>统一<a href="https://link.zhihu.com/?target=https%3A//github.com/tikv/rfcs/blob/master/text/2018-12-19-unified-log-format.md" class=" wrap external" target="_blank" rel="nofollow noreferrer">日志格式规范</a>，利于工具收集分析</li><li>支持 Raw Read 接口使用 Local Reader 进行读 </li><li>新增配置信息的 Metrics </li><li>新增 Key 越界的 Metrics </li><li>新增碰到扫越界错误时 Panic 或者报错选项 </li><li>增加 Insert 语义，只有在 Key 不存在的时候 Prewrite 才成功，消除 Batch Get </li><li>Batch System 使用更加公平的 batch 策略 </li><li>tikv-ctl 支持 Raw scan </li></ul><h2>Tools</h2><h3><b>TiDB-Binlog</b></h3><ul><li>新增 Arbiter 工具支持从 Kafka 读取 binlog 同步到 MySQL</li><li>Reparo 支持过滤不需要同步的文件</li><li>支持同步 generated column</li></ul><h3><b>Lightning</b></h3><ul><li>支持禁用 TiKV periodic Level-1 compaction，当 TiKV 集群为 2.1.4 或更高时，在导入模式下会自动执行 Level-1 compaction </li><li>根据 <code>table_concurrency</code> 配置项限制 import engines 数量，默认值：16，防止过多占用 importer 磁盘空间 </li><li>支持保存中间状态的 SST 到磁盘，减少内存使用 </li><li>优化 TiKV-Importer 导入性能，支持将大表的数据和索引分离导入 </li><li>支持 CSV 文件导入 </li></ul><h3><b>数据同步对比工具 (sync-diff-inspector)</b></h3><ul><li>支持使用 TiDB 统计信息来划分对比的 chunk </li><li>支持使用多个 column 来划分对比的 chunk </li></ul><h2><b>Ansible</b></h2><ul><li>N/A</li></ul>