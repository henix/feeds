<div class="title-image"><img src="https://pic1.zhimg.com/v2-3ebd004a6c299b615d2ff5782ae68d89_b.jpg" alt=""></div><blockquote>看到《Rust编程之道》读者群里有人咨询actix相关的学习资源，我就顺手做了一个简单的学习路线分享给需要的人。</blockquote><hr/><h2><b>学习要求：</b></h2><ol><li>有Rust基础</li><li>有Web基础</li></ol><h2><b>建议学习顺序：</b></h2><p>一、首先，从我这次RustConAsia大会的<a href="https://link.zhihu.com/?target=https%3A//github.com/ZhangHanDong/actix-workshop-rustconasia2019" class=" wrap external" target="_blank" rel="nofollow noreferrer">Workshop</a>  入手</p><p>1  你先看 concept_to_guide里面的概念导读，概念导读是一个脑图，其中记录了actix相关的关键概念。可以按其自行搜索相关概念的更详细的内容学习。 2   然后再看看代码。代码很简单，就是一个个简单的api。这个workshop的重点是想让大家系统理解actix和actix-web （1.0 ）。 </p><p>二、然后，再结合 PingCAP的<a href="https://link.zhihu.com/?target=https%3A//github.com/ZhangHanDong/rust-prometheus-workshop" class=" wrap external" target="_blank" rel="nofollow noreferrer">Workshop</a>  继续训练，这个workshop是给actix-web的应用（内存数据库demo）加个promeheus metrix 接口。  我fork过来一份，加了一个p8模块，实现了一个宏，重构代码（那个宏没有考虑性能，Just for Fun）。 按p1 -  p8顺序实践就好了。</p><p>学习完这两个workshop，应该差不多可以上手写一个actix-web的简单微服务了。</p><h2><b>如何进阶</b></h2><p>actix-web进阶的话，可以参考一些开源项目：</p><ol><li><a href="https://link.zhihu.com/?target=https%3A//github.com/Aardwolf-Social/aardwolf" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/Aardwolf-Soc</span><span class="invisible">ial/aardwolf</span><span class="ellipsis"></span></a>  ，推荐该项目的理由， 是因为它的一些实践非常好： 项目结构组织、代码复用抽象（泛型、trait和宏）都值得学习</li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/dessalines/lemmy" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/dessalines/l</span><span class="invisible">emmy</span><span class="ellipsis"></span></a> ，使用actix-web和TypeScript仿reddit站点，推荐理由，它的功能比较完善，还包括websocket。 </li></ol><p>但它们目前都是actix 0.7的，建议，可以帮助lemmy升级到actix 1.0 来实践。</p><p></p>