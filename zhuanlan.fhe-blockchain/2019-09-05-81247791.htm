<p><b>本文由陈智罡博士撰写</b></p><p>格上加密方案是一种噪音加密方案，这种方案与直觉非常吻合。</p><p class="ztext-empty-paragraph"><br/></p><p>例如，你给一个非专业人士解释格加密的本质，就是往消息里添加一些噪音作为扰动。我相信对于非专业人士一定能够理解。因为这很形象。</p><p class="ztext-empty-paragraph"><br/></p><p>但是你如果解释RSA，我相信一般人是很难想象出大整数分解的样子。所以格加密的几何特征非常明显。这也导致格加密本身与传统加密（RSA，离散对数，ECC）具有截然不同的性质。很多密码算法是无法直接从传统密码体质对到格加密体质上的。</p><p class="ztext-empty-paragraph"><br/></p><p><b>更令人惊讶的是，全同态加密竟然能够在格加密上构造出来。</b></p><p class="ztext-empty-paragraph"><br/></p><p>事实上，经过研究我们发现，（环）LWE加密本身就具有同态性，不但是加法，乘法也是，只不过只能进行有限次乘法。所以我们经常说一句，对于格加密上的全同态加密是：</p><p><b>同态本天成，妙手偶得之</b>。</p><p class="ztext-empty-paragraph"><br/></p><p><b>同态性在格密码中是天然存在的，只不过被发现了</b>。这和牛顿发现了宇宙的运动规律是一样的，宇宙本来就具有，只不过我们不知道罢了。</p><p class="ztext-empty-paragraph"><br/></p><p>此外，（环）LWE加密的同态性会受到噪音的“淹没”。如果噪音大了，将无法获得同态性。因此，研究<b>解密结构与噪音之间的关系就非常重要</b>。</p><h2><b>一、解密结构与噪音增长依赖主要项</b></h2><p class="ztext-empty-paragraph"><br/></p><p>不同的解密结构，其密文计算的噪音增长形式不同，可以通过噪音增长依赖主要项来刻画。</p><p class="ztext-empty-paragraph"><br/></p><ul><li>如果从</li></ul><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-25892a36065f89410cbd0c09b0f6f489_b.jpg" data-caption="" data-size="normal" data-rawwidth="420" data-rawheight="68" class="content_image" width="420"/></noscript><img src="https://pic2.zhimg.com/v2-25892a36065f89410cbd0c09b0f6f489_b.jpg" data-caption="" data-size="normal" data-rawwidth="420" data-rawheight="68" class="content_image lazy" width="420" data-actualsrc="https://pic2.zhimg.com/v2-25892a36065f89410cbd0c09b0f6f489_b.jpg"/></figure><p>形式构造密文乘法的同态性，则第1种解密结构噪音增长依赖的主要项是<b>密钥的长度</b>，第2种解密结构和第3种解密结构噪音增长依赖的主要项都是<b>密文噪音的乘积</b>。</p><p class="ztext-empty-paragraph"><br/></p><ul><li>如果从</li></ul><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-ed142637e79aa6fd8c420adc42701473_b.jpg" data-caption="" data-size="normal" data-rawwidth="196" data-rawheight="64" class="content_image" width="196"/></noscript><img src="https://pic4.zhimg.com/v2-ed142637e79aa6fd8c420adc42701473_b.jpg" data-caption="" data-size="normal" data-rawwidth="196" data-rawheight="64" class="content_image lazy" width="196" data-actualsrc="https://pic4.zhimg.com/v2-ed142637e79aa6fd8c420adc42701473_b.jpg"/></figure><p>形式构造密文乘法的同态性，则其噪音增长依赖的主要项是<b>密文的长度</b>。</p><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><p>以上分析给出了密文乘积噪音增长的主要来源，因此对噪音依赖的主要项进行约减，可以降低密文乘积的噪音增长。</p><p class="ztext-empty-paragraph"><br/></p><p>例如，噪音增长依赖的主要项是密钥的长度，则可将密钥表示为<i>BitDecomp</i>(<i>s</i>)，即将密钥按位展开，例如Bra12方案。</p><p class="ztext-empty-paragraph"><br/></p><p>对于噪音增长依赖的主要项是密文噪音的乘积，则可使用模交换，例如BGV方案。</p><p class="ztext-empty-paragraph"><br/></p><p>对于噪音增长依赖的主要项是密文的长度，则可将密文表示为<i>BitDecomp</i>(<i>c</i>1)，例如GSW方案。</p><p class="ztext-empty-paragraph"><br/></p><p>注意，约减噪音的同时还需要满足期盼解密结构，否则同态性将丧失。</p><p class="ztext-empty-paragraph"><br/></p><p>上面是将同态性与噪音分开讨论的，下面将其合在一起讨论，因为只有这样才能获得真正的密文计算的同态性。那么这样的解密结构具有什么形式呢？下面引出<b>最终解密结构</b>的概念。</p><h2><b>二、最终解密结构</b></h2><p>如果该解密结构在某种密文乘法计算形式下，能够获得密文乘法期盼解密结构，并且密文的噪音增长是小的，则称之为<b>最终解密结构</b>。</p><p class="ztext-empty-paragraph"><br/></p><p>从定义可知，最终解密结构包含两个核心部分：一是解密结构，二是密文乘法计算形式。其意义为：该解密结构在该密文乘法计算形式下，具有潜在的同态性，并且能够正确解密。从而获得同态性。</p><p class="ztext-empty-paragraph"><br/></p><p>注意噪音约减技术与同态性都隐含在最终密文乘法计算形式中。所以具有最终解密结构的密文具有密文计算同态性，而且密文计算的噪音是小的，所以能够进行下一次同态计算。</p><p class="ztext-empty-paragraph"><br/></p><p>最终解密结构同时解决了密文计算的同态性和噪音增长问题。但是有些全同态加密在密文计算的过程中密钥的长度是增长的（相应密文长度也增长）。因此在具体的全同态加密方案中，还需要额外通过密钥交换技术解决密文计算过程中的密钥长度增长问题。由此得到下面的结论。</p><p class="ztext-empty-paragraph"><br/></p><ul><li>如果密文在计算过程中始终保持最终解密结构，并且能够保持密钥长度（对应于密文长度）不变，则对应加密方案具有全同态加密的特性。</li></ul><p class="ztext-empty-paragraph"><br/></p><p>上述结论刻画了要想获得全同态加密，需要解决密文计算的同态性、密文计算中噪音增长以及密钥长度增长的问题。</p><p class="ztext-empty-paragraph"><br/></p><p>而密文计算的同态性与密文计算中噪音增长的问题，可以通过构造最终解密结构来解决。</p><p class="ztext-empty-paragraph"><br/></p><p>密钥长度增长问题是由密文乘法的期盼解密结构的构造形式决定的，可以通过密钥交换技术解决。</p><p class="ztext-empty-paragraph"><br/></p><p>此外，如果密文计算的电路深度很浅（即密文乘法次数很小），为了提高效率可以不进行密钥交换，此时的加密方案称为有限同态加密（Somewhat同态加密）。</p><p class="ztext-empty-paragraph"><br/></p><p>采用</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-6cf05e104b14d7dd36ade7d498dcdc9e_b.jpg" data-caption="" data-size="normal" data-rawwidth="419" data-rawheight="58" class="content_image" width="419"/></noscript><img src="https://pic3.zhimg.com/v2-6cf05e104b14d7dd36ade7d498dcdc9e_b.jpg" data-caption="" data-size="normal" data-rawwidth="419" data-rawheight="58" class="content_image lazy" width="419" data-actualsrc="https://pic3.zhimg.com/v2-6cf05e104b14d7dd36ade7d498dcdc9e_b.jpg"/></figure><p>形式构造全同态加密时，第1种解密结构</p><figure data-size="small"><noscript><img src="https://pic4.zhimg.com/v2-e7770541076a8fc94c5ecc7e18d862c3_b.jpg" data-caption="" data-size="small" data-rawwidth="739" data-rawheight="71" class="origin_image zh-lightbox-thumb" width="739" data-original="https://pic4.zhimg.com/v2-e7770541076a8fc94c5ecc7e18d862c3_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-e7770541076a8fc94c5ecc7e18d862c3_b.jpg" data-caption="" data-size="small" data-rawwidth="739" data-rawheight="71" class="origin_image zh-lightbox-thumb lazy" width="739" data-original="https://pic4.zhimg.com/v2-e7770541076a8fc94c5ecc7e18d862c3_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-e7770541076a8fc94c5ecc7e18d862c3_b.jpg"/></figure><p>的最终解密结构中的解密结构是</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-c3d4d8c455f51e98db07ee0eec8c9f6e_b.jpg" data-caption="" data-size="normal" data-rawwidth="1080" data-rawheight="49" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic3.zhimg.com/v2-c3d4d8c455f51e98db07ee0eec8c9f6e_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-c3d4d8c455f51e98db07ee0eec8c9f6e_b.jpg" data-caption="" data-size="normal" data-rawwidth="1080" data-rawheight="49" class="origin_image zh-lightbox-thumb lazy" width="1080" data-original="https://pic3.zhimg.com/v2-c3d4d8c455f51e98db07ee0eec8c9f6e_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-c3d4d8c455f51e98db07ee0eec8c9f6e_b.jpg"/></figure><p class="ztext-empty-paragraph"><br/></p><p>该形式将同态性与噪音约减形成一个完整的形式描述。密文乘法同态的计算形式是</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-c029218f72c1ae71be2b19a19628b161_b.jpg" data-caption="" data-size="normal" data-rawwidth="1076" data-rawheight="140" class="origin_image zh-lightbox-thumb" width="1076" data-original="https://pic2.zhimg.com/v2-c029218f72c1ae71be2b19a19628b161_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-c029218f72c1ae71be2b19a19628b161_b.jpg" data-caption="" data-size="normal" data-rawwidth="1076" data-rawheight="140" class="origin_image zh-lightbox-thumb lazy" width="1076" data-original="https://pic2.zhimg.com/v2-c029218f72c1ae71be2b19a19628b161_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-c029218f72c1ae71be2b19a19628b161_b.jpg"/></figure><p class="ztext-empty-paragraph"><br/></p><p>对应的密钥是</p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-18d4a4e5ed4cc237e7e2901defa9ab4d_b.jpg" data-caption="" data-size="normal" data-rawwidth="938" data-rawheight="72" class="origin_image zh-lightbox-thumb" width="938" data-original="https://pic2.zhimg.com/v2-18d4a4e5ed4cc237e7e2901defa9ab4d_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-18d4a4e5ed4cc237e7e2901defa9ab4d_b.jpg" data-caption="" data-size="normal" data-rawwidth="938" data-rawheight="72" class="origin_image zh-lightbox-thumb lazy" width="938" data-original="https://pic2.zhimg.com/v2-18d4a4e5ed4cc237e7e2901defa9ab4d_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-18d4a4e5ed4cc237e7e2901defa9ab4d_b.jpg"/></figure><p>。</p><p>第2种解密结构</p><figure data-size="small"><noscript><img src="https://pic4.zhimg.com/v2-9c7f53bb6946dbc4de467cef67f7671b_b.jpg" data-caption="" data-size="small" data-rawwidth="606" data-rawheight="58" class="origin_image zh-lightbox-thumb" width="606" data-original="https://pic4.zhimg.com/v2-9c7f53bb6946dbc4de467cef67f7671b_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-9c7f53bb6946dbc4de467cef67f7671b_b.jpg" data-caption="" data-size="small" data-rawwidth="606" data-rawheight="58" class="origin_image zh-lightbox-thumb lazy" width="606" data-original="https://pic4.zhimg.com/v2-9c7f53bb6946dbc4de467cef67f7671b_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-9c7f53bb6946dbc4de467cef67f7671b_b.jpg"/></figure><p>，其最终解密结构中的解密结构还是</p><figure data-size="small"><noscript><img src="https://pic4.zhimg.com/v2-9f6a1d4efe44921e93803b7ce81b6b93_b.jpg" data-caption="" data-size="small" data-rawwidth="614" data-rawheight="64" class="origin_image zh-lightbox-thumb" width="614" data-original="https://pic4.zhimg.com/v2-9f6a1d4efe44921e93803b7ce81b6b93_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-9f6a1d4efe44921e93803b7ce81b6b93_b.jpg" data-caption="" data-size="small" data-rawwidth="614" data-rawheight="64" class="origin_image zh-lightbox-thumb lazy" width="614" data-original="https://pic4.zhimg.com/v2-9f6a1d4efe44921e93803b7ce81b6b93_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-9f6a1d4efe44921e93803b7ce81b6b93_b.jpg"/></figure><p>。采用的噪音约减技术是模交换，密文乘法同态的计算形式是</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-689728288eeb1f2d83560ee7739ef21e_b.jpg" data-caption="" data-size="normal" data-rawwidth="316" data-rawheight="151" class="content_image" width="316"/></noscript><img src="https://pic3.zhimg.com/v2-689728288eeb1f2d83560ee7739ef21e_b.jpg" data-caption="" data-size="normal" data-rawwidth="316" data-rawheight="151" class="content_image lazy" width="316" data-actualsrc="https://pic3.zhimg.com/v2-689728288eeb1f2d83560ee7739ef21e_b.jpg"/></figure><p class="ztext-empty-paragraph"><br/></p><p>对应的密钥是</p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-fce8fb37135decec0960726ea98e5dad_b.jpg" data-caption="" data-size="normal" data-rawwidth="347" data-rawheight="60" class="content_image" width="347"/></noscript><img src="https://pic2.zhimg.com/v2-fce8fb37135decec0960726ea98e5dad_b.jpg" data-caption="" data-size="normal" data-rawwidth="347" data-rawheight="60" class="content_image lazy" width="347" data-actualsrc="https://pic2.zhimg.com/v2-fce8fb37135decec0960726ea98e5dad_b.jpg"/></figure><p>，其中<i>q</i>* 是用于模交换的模。</p><p class="ztext-empty-paragraph"><br/></p><p>第3种解密结构与第2种解密结构一样。 </p><p class="ztext-empty-paragraph"><br/></p><p>采用</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-3eb91bbc9b62feddbf962e8b591ee68c_b.jpg" data-caption="" data-size="normal" data-rawwidth="425" data-rawheight="61" class="origin_image zh-lightbox-thumb" width="425" data-original="https://pic1.zhimg.com/v2-3eb91bbc9b62feddbf962e8b591ee68c_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-3eb91bbc9b62feddbf962e8b591ee68c_b.jpg" data-caption="" data-size="normal" data-rawwidth="425" data-rawheight="61" class="origin_image zh-lightbox-thumb lazy" width="425" data-original="https://pic1.zhimg.com/v2-3eb91bbc9b62feddbf962e8b591ee68c_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-3eb91bbc9b62feddbf962e8b591ee68c_b.jpg"/></figure><p>形式构造全同态加密，<b>能够应用于全部3种解密结构</b>，其构造方法通过上述结论已经刻画的非常清晰。</p><p class="ztext-empty-paragraph"><br/></p><p>注意，密文的加密形式在该形式构造全同态加密的过程中并没有改变，仍然使用基本加密形式。其原因是最终解密结构中的解密结构与最初的解密结构形式一样，所以加密形式也不变。</p><p class="ztext-empty-paragraph"><br/></p><p>由于基本加密形式具有期盼解密结构（即潜在的同态性），主要面临的问题是控制密文计算过程中的噪音增长。因此为了获得同态性，在密文计算过程中加入了噪音约减技术。</p><p class="ztext-empty-paragraph"><br/></p><p>但是根据前面结论，采用</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg" data-caption="" data-size="normal" data-rawwidth="195" data-rawheight="57" class="content_image" width="195"/></noscript><img src="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg" data-caption="" data-size="normal" data-rawwidth="195" data-rawheight="57" class="content_image lazy" width="195" data-actualsrc="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg"/></figure><p>形式构造全同态加密只能应用于第3种解密结构。此外</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg" data-caption="" data-size="normal" data-rawwidth="195" data-rawheight="57" class="content_image" width="195"/></noscript><img src="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg" data-caption="" data-size="normal" data-rawwidth="195" data-rawheight="57" class="content_image lazy" width="195" data-actualsrc="https://pic4.zhimg.com/v2-12255d621c90f0ba478128ec1e10c3e3_b.jpg"/></figure><p>形式构造密文乘法的期盼解密结构，具有保证密钥长度不变的良好性质。而GSW方案恰好就是这种类型。</p><p class="ztext-empty-paragraph"><br/></p><p>顺着这条线索追问下去，就可以得到GSW方案通用性的原因。</p><p>感兴趣的朋友可以参考陈智罡博士的论文：</p><p class="ztext-empty-paragraph"><br/></p><p>论文长文版：</p><p><a href="https://link.zhihu.com/?target=https%3A//share.weiyun.com/5Qb4cyd" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">share.weiyun.com/5Qb4cy</span><span class="invisible">d</span><span class="ellipsis"></span></a></p><p class="ztext-empty-paragraph"><br/></p><p>1.A General Design Method of Constructing Fully Homomorphic Encryption with Ciphertext Matrix. <i>KSII Transactions on Internet and Information Systems</i>, 2019,Vol.13(5)：2629-2650.</p><p>2.基于抽象解密结构的全同态加密构造方法分析[J]. 电子与信息学报, 2018, 40(7): 1669-1675.</p><a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485243%26idx%3D1%26sn%3De6b1d922406d77a16ea7d371deabee12%26chksm%3Dfcdc789acbabf18c821e072544ef6a2a037d286b5b6e27a463127238cb55ee0f92f300070aa9%26token%3D1497792187%26lang%3Dzh_CN%23rd" data-draft-node="block" data-draft-type="link-card" data-image="https://pic3.zhimg.com/v2-31e5cb3140e4f8529efb4a7590515ace_180x120.jpg" data-image-width="534" data-image-height="226" class=" wrap external" target="_blank" rel="nofollow noreferrer">为什么格上能够构造全同态加密-3</a><p class="ztext-empty-paragraph"><br/></p><hr/><p><b>文章首发在微信公众号：btc201800</b><br/><b>知识星球ID：28018093</b><br/><br/><b>音频发布在喜马拉雅上“区块链杂谈 (第2季)”</b> <b><u><a href="https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/Bjq4se</span><span class="invisible"></span></a></u></b><br/><b>解读区块链白皮书</b> <u><a href="https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/RNU1Q8</span><span class="invisible"></span></a></u><br/><br/><b>宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。</b></p>