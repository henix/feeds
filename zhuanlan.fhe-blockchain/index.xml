<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>全同态加密与区块链</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/</link>
<description>区块链与密文计算让数据可以自由的分享 全同态加密具有神奇的功能，在不解密的情况下能够对密文进行任意计算。区块链能够在去中心化的环境下，保证数据的不可篡改、可追溯等。区块链+全同态加密=让我的数据属于我掌控。</description>
<language>zh-cn</language>
<lastBuildDate>Mon, 02 Sep 2019 07:19:06 +0800</lastBuildDate>
<item>
<title>为什么格上能够构造全同态加密-1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-09-01-80657537.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80657537&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;本文由陈智罡博士撰写&lt;/b&gt;&lt;/p&gt;&lt;p&gt;目前只有在格上能够构造全同态加密方案。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为什么呢？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;早在2015年，这个问题就萦绕在我脑海。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当时对GSW这个方案很感兴趣，GSW方案中密文被表达成了一个矩阵，矩阵与矩阵的乘积不会导致密文维数的增长，所以不需要使用密钥交换来约减密文的维数。此外，对噪音的约减也包含在了GSW密文的乘法中，使得GSW方案非常简洁。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最重要的是该方案具有通用性。你把（环）LWE加密方案，NTRU加密方案，整数上的加密方案直接带进去，就可以得到一个GSW风格的全同态加密方案。这种通用性是来自于什么呢？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;学术界最大的特征是对问题的追问。工业界最大的特征是对应用场景的追问。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;抽象解密结构&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;通过对GSW方案的分析，发现GSW在解密过程中的结构是：sm+e mod q，其中s是密钥，m是消息，e是噪音，q是模。&lt;/p&gt;&lt;p&gt;这种结构不是GSW独有的，而是在格上NTRU加密方案中就是这样的结构。于是我们的目光转向了解密过程。&lt;/p&gt;&lt;p&gt;在全同态加密中分析同态性时，都是从解密作为出发点。这是为什么呢？&lt;/p&gt;&lt;p&gt;以LWE加密方案的解密为例：&amp;lt;c, s&amp;gt;=(q/2)m+e mod q，其中c是密文，s是密钥，m是消息，e是噪音，q是模。&lt;/p&gt;&lt;p&gt;仔细观察解密式子，会发现这里面把密文、明文、噪音以及密钥的关系都呈现出来了。&lt;/p&gt;&lt;p&gt;而全同态加密的本质就是密文计算对应于明文计算，所以密文和明文之间的关系很重要。它们之间的关系是能否获得同态性的关键。&lt;/p&gt;&lt;p&gt;除了上述解密形式，格上加密方案还有其它解密形式吗？&lt;/p&gt;&lt;p&gt;有的，格上NTRU加密方案的解密形式是：cs=sm+e mod q。&lt;/p&gt;&lt;p&gt;LWE加密方案还有一种变种，其解密形式是：&amp;lt;c, s&amp;gt;=m+2e mod q。&lt;/p&gt;&lt;p&gt;此外，你也可以把整数加密方案上的解密形式拿来，是类似的。&lt;/p&gt;&lt;p&gt;为了研究如何获得同态性，我们定义了一个结构：抽象解密结构。如下所示：&lt;/p&gt;&lt;p&gt;c⊙s=xm+e mod q；&lt;/p&gt;&lt;p&gt;其中是⊙抽象计算符号，x是常数。该等式称为密文 c 与密钥 s &lt;b&gt;计算结果的抽象解密结构&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;由于每次加密时密文、明文和噪音都是变化的，而密钥是不变的，可将 c、 m 和 e视为变量， s 视为常量。&lt;/p&gt;&lt;p&gt;从抽象解密结构 c⊙s = x⋅ m + e 可以清楚的看到密文 c、明文 m 和噪音 e &lt;b&gt;三者之间的关系是一次形式，即线性关系。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;这种线性关系直接蕴含了同态性，这也是为什么格上能够构造全同态加密的根本原因&lt;/b&gt;。我们的论文中对其进行了详细论证。&lt;/p&gt;&lt;p&gt;定义这个“抽象解密结构”有什么用呢？&lt;/p&gt;&lt;p&gt;非常有用。通过我们定义的这个工具能够衡量如何获得同态性，分析噪音增长主要项，如何表示全同态加密特性的获得，以及解释GSW为什么具有通用性。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485233%26idx%3D1%26sn%3Dbdcda1f1ad5e8d9fcae69ea746a29053%26chksm%3Dfcdc7890cbabf186a1b022d8eae25d4df16269cb8e704c038b668e33962392a4e0a59ad8602a%26token%3D1789705526%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-ca5cd0a303082bb356717f84bd1e3414_180x120.jpg&quot; data-image-width=&quot;640&quot; data-image-height=&quot;272&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;为什么格上能够构造全同态加密-1&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-09-01-80657537</guid>
<pubDate>Sun, 01 Sep 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>生物特征密文认证系统</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-09-01-80657134.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80657134&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前不久，全球生物特征数据大范围泄露，涉及到83个国家以及2700多个公司与机构，导致许多国家的公司安全信誉岌岌可危。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;生物特征（指纹、虹膜、人脸）作为识别个人身份的一种方式，带来了极大的方便。一方面生物特征对于个人是唯一的，另外一方面个人生物特征便于使用。不像口令与密码还需要记忆。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;然而，这是一把双刃剑&lt;/b&gt;。&lt;b&gt;生物特征一旦丢失将会带来无法挽回的损失。它不像口令和密码可以随时更改&lt;/b&gt;。就像这次大规模生物特征泄露事件，遭泄露的个人很可能将来无法再使用其生物特征作为认证方式。对其个人将来的生活带来极大的影响。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;导致生物特征数据泄露的一个根本原因是&lt;b&gt;没有保护好存储在数据库的中的生物特征模板&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;宁波格密链网络科技有限公司一直致力于全同态加密的应用研究。早在几年前，陈智罡博士团队就意识到生物特征的弱点，开始研究如何在密态下构建生物特征认证系统。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;基于全同态加密技术，陈智罡博士团队相继开发出指纹密文认证系统、虹膜密文认证系统，人脸安全识别系统。得到了业界广泛认可与关注，目前正在开展产业化阶段&lt;/b&gt;。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;1问题的提出与解决&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;全同态加密能够在不解密的情况下，对密文进行任意计算。如果生物特征数据从存储到认证过程都是在密态下完成，即使生物特征数据丢失了，也不会对系统有任何影响。因为生物特征在系统中是加密的，敌手在无法获得密钥的情况下，将无法获得生物特征的明文数据。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这一场景非常适合全同态加密领域的应用。陈智罡博士团队就此展开了研究。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;难点一&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;看似很容易，只要将虹膜或者指纹数据通过全同态加密就可以了。但是在构建整个系统中，陈博士团队发现一个问题，生物特征数据加密后发送给服务端进行虹膜（或者指纹）比对，尽管特征比对本质上是一个海明距离的计算，但是计算后是一个密文，服务器无从知晓比对的结果，也就无法给出通过（或是不通过）的判断。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果将密文比对的结果发送给用户端，用户端再返还给服务端，敌手可能会篡改比对结果，或者发起中间人攻击。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为此我们构建了一个协议，引入一次MAC认证方法。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;消息验证码（MAC）一般是利用可携带密钥的hash函数来检验传输数据的完整性。常用的hash函数有MD5、SHA-2和SHA-3等。我们的虹膜（指纹）特征密文的存储可以使用上述方法将密文进行压缩，然后数据库只需存放密文压缩后的摘要。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但是，我们考虑到最安全的方式是采用云端认证策略，即云服务器对密文同态操作后的结果进行认证，而解密操作只能由用户完成。因此，采用hash函数并不能满足设计的需要，所以我们设计了一种一次性MAC(OTM)认证方式，即MAC方案中的消息密钥算法生成的密钥只能使用一次，同时用户对密文解密后，云服务器可以对解密结果进行认证。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;难点二&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;虹膜或指纹的识别方法是采用海明距离计算来对编码后的特征模板进行比对。它是通过统计两个模板上对应编码不同的个数作为这两个模板之间的距离。距离越小，表明两模板越匹配。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本质上计算海明距离是求两个向量异或的总和。如果虹膜（或指纹）初始模板是长度为n的二进制向量，则计算两个虹膜特征模板间的海明距离至少需要n次乘法。然而，全同态加密的密文乘法是其主要瓶颈。如果模板长度为2048，则需要进行2048次密文乘法。显然，对于实际应用这是不可接受的。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为此，团队采用了密文打包的方法，即将生物特征模板打包到一个密文中。因此，对该打包密文进行一次乘法，相当于原来的2048次乘法。这种并行的思路极大的提高了效率。使之从不可能到可能。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;难点三&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面说过，计算海明距离相当于求两个向量异或的总和。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由于采用了密文打包的方法，导致对密文无法求和。为了求和，采用了自同态计算，对密文中的明文位进行旋转。这样每次加法后，对密文旋转一次，一共需要旋转2013次才能求得最终的结果。这也是影响效率的主要因素。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为此，团队对算法优化，才用了类似于二分法的方法，将加法约减到了log2013次。极大的提高了效率。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除了上述难点外，团队还在工程化的优化方面做出了很多尝试。例如：将模板分段并行处理，用户身份与生物特征模板哈希化保存，注册模块的安全防护等。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;2系统架构&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;系统主要是对验证服务器进行设计，采用一对一的方式来验证每个用户。整个系统由两个参与者组成，即用户和认证服务器。用户U具有从他的虹膜特征中提取的二进制特征模板。服务器S具有丰富的计算资源和存储空间；因此它可以完成同态密文的任意函数计算，但不能解密自己生成的密文以及用户给出的密文。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;系统整体采用C/S架构，客户端的主要功能是为用户提供注册和认证服务，而云服务器端则提供同态运算和认证服务。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9c7d4f5c1474e16436662e049cb46685_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;876&quot; data-rawheight=&quot;667&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;876&quot; data-original=&quot;https://pic2.zhimg.com/v2-9c7d4f5c1474e16436662e049cb46685_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9c7d4f5c1474e16436662e049cb46685_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;876&quot; data-rawheight=&quot;667&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;876&quot; data-original=&quot;https://pic2.zhimg.com/v2-9c7d4f5c1474e16436662e049cb46685_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-9c7d4f5c1474e16436662e049cb46685_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;系统的整体功能分为三个模块，首先是登录模块，当用户输入已经注册的基本信息后即可进入到认证界面，否则需要点击注册链接进入注册界面。其次是注册模块，它的主要功能有生成公钥和密钥、保存密钥到移动存储器中以及加密虹膜信息并将之与用户基本信息一同存放到数据库中；最后是认证模块，它的功能是加密当前虹膜信息并将之发送到服务器端，服务器端完成虹膜认证后，客户端通过密钥解密认证结果并提示用户。&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-09ba6aae852c80f4fb6bea069e3bea46_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;726&quot; data-rawheight=&quot;587&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;726&quot; data-original=&quot;https://pic3.zhimg.com/v2-09ba6aae852c80f4fb6bea069e3bea46_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-09ba6aae852c80f4fb6bea069e3bea46_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;726&quot; data-rawheight=&quot;587&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;726&quot; data-original=&quot;https://pic3.zhimg.com/v2-09ba6aae852c80f4fb6bea069e3bea46_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-09ba6aae852c80f4fb6bea069e3bea46_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;3系统实现与效率&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本系统是使用C#编程语言在Windows10上开发的，系统采用B/S架构。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为了加密一个2048位的二进制向量，多项式次数必须取&lt;i&gt;n&lt;/i&gt;≥2048。但是当参数&lt;i&gt;n&lt;/i&gt;过大时，密文计算时间过长，系统效率极低。于是我们将2048位的二进制向量分段进行研究，下表给出了在不同段数时，完成密文海明距离计算下的log2 &lt;i&gt;q&lt;/i&gt;的最小值。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4d052dd4182dcbaeb0ae723b31961277_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;451&quot; data-rawheight=&quot;246&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;451&quot; data-original=&quot;https://pic4.zhimg.com/v2-4d052dd4182dcbaeb0ae723b31961277_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4d052dd4182dcbaeb0ae723b31961277_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;451&quot; data-rawheight=&quot;246&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;451&quot; data-original=&quot;https://pic4.zhimg.com/v2-4d052dd4182dcbaeb0ae723b31961277_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-4d052dd4182dcbaeb0ae723b31961277_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;数据结果显示，分段后的密文模&lt;i&gt;q&lt;/i&gt;降低的幅度不大，因此分段并不能明显提高系统的效率。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-52fad0d2aca74680cb2e388ef977a881_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;532&quot; data-rawheight=&quot;703&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;532&quot; data-original=&quot;https://pic2.zhimg.com/v2-52fad0d2aca74680cb2e388ef977a881_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-52fad0d2aca74680cb2e388ef977a881_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;532&quot; data-rawheight=&quot;703&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;532&quot; data-original=&quot;https://pic2.zhimg.com/v2-52fad0d2aca74680cb2e388ef977a881_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-52fad0d2aca74680cb2e388ef977a881_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d3dd24f11d0730837d2dbbfc13f0212c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;567&quot; data-rawheight=&quot;586&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;567&quot; data-original=&quot;https://pic1.zhimg.com/v2-d3dd24f11d0730837d2dbbfc13f0212c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d3dd24f11d0730837d2dbbfc13f0212c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;567&quot; data-rawheight=&quot;586&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;567&quot; data-original=&quot;https://pic1.zhimg.com/v2-d3dd24f11d0730837d2dbbfc13f0212c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-d3dd24f11d0730837d2dbbfc13f0212c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;系统测试处理器为Intel Core i5-6200U，在128位安全等级下，认证过程大概需要100毫秒，系统在图形界面载入和通信部分用时最长，因此整个生物特征密文认证系统的效率是非常不错的。该系统设计在2017年已经申请专利。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485229%26idx%3D1%26sn%3D1bd8323b7736c1509378e48d9c35c7c6%26chksm%3Dfcdc788ccbabf19a7dd49393c80ec319fe89e8f1030da721342a90874063c7881ed26977aa40%26token%3D1789705526%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-994adc0d8a536aedee70aa58d1836c59_180x120.jpg&quot; data-image-width=&quot;960&quot; data-image-height=&quot;408&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;生物特征密文认证系统&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-09-01-80657134</guid>
<pubDate>Sun, 01 Sep 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019年IDASH保护隐私安全的基因分析竞赛内容</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-09-01-80656770.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80656770&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019年IDASH 竞赛将于10月26日在美国布印第安纳州卢明顿举行&lt;/p&gt;&lt;p&gt;(&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//www.humangenomeprivacy.org/2019/competition-tasks.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;humangenomeprivacy.org/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;2019/competition-tasks.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;)。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;基因组数据和计算要求的增长已经超出了服务器所能承受的范围。许多机构和NIH正在考虑将云计算服务作为扩大研究的经济有效的替代方案。在部署基于云的数据分析工具时，隐私和安全性是主要问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在过去的几年中，安全计算方法已经有了显着的性能改进，但是它们是否适用于涉及大数据的生物医学挑战仍然不明确。此挑战的目标是评估最先进方法的性能，以确保在云环境中的数据分析期间严格的数据机密性。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;今年有4个比赛项目，分别涉及到区块链、同态加密、SGX以及多方安全计算。内容如下：&lt;/p&gt;&lt;h2&gt;&lt;b&gt;比赛项目1&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;名称：基于区块链和智能合约的分布式基因药物相互作用数据共享&lt;/p&gt;&lt;p&gt;目标：该项目的目标是在区块链网络上开发智能合约，以分布式方式共享基因-药物相互作用数据。&lt;/p&gt;&lt;p&gt;实验环境：给定一组基因 - 药物相互作用结果数据，设计时间/空间有效的数据结构和基于以太坊Solidity共享（即存储和检索）数据的机制。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;比赛项目2&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;名称：使用同态加密的安全基因型插补&lt;/p&gt;&lt;p&gt;目标：该项目目标是开发基于同态加密（HE）的方法，用于执行基因型插补。&lt;/p&gt;&lt;p&gt;实验环境：给定具有缺失条目的变体- 基因型数据集，设计用于输入缺失条目的有效且准确的同态加密方法。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;比赛项目3&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;名称：在SGX上提供保护数据隐私的机器学习服务&lt;/p&gt;&lt;p&gt;目标：可信的执行环境（TEE，例如，英特尔的SGX）提供了一种理想的基础设施，用于托管保护隐私的机器学习服务，其中机器学习模型和输入数据都可以受到保护。&lt;/p&gt;&lt;p&gt;实验环境：我们将提供测试数据集以及训练好的深度学习模型。每个团队都面临着在SGX下实施该模型的挑战。为此目的，团队可以优化模型并对其进行调整，使其可以在系统中工作，只要其准确性得到很大程度的保护并且隐私得到充分保护（侧信道泄漏除外）。测试数据集将用于评估实施的模型。解决方案可以利用系统外的计算资源，包括CPU，内存和硬盘，只要所有数据和模型都受到完全保护（加密）。提交的解决方案不能涉及任何添加方。预计算时间将作为性能开销的一部分进行测量。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;比赛项目4&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;名称：机器学习模型的安全协同训练&lt;/p&gt;&lt;p&gt;目标：训练机器学习模型通常需要大量数据。然而，由于隐私问题，数据所有者通常不愿意共享他们的数据（例如，来自人类受试者的基因组数据），即使他们也希望建立更好的训练模型。因此，允许两个或更多所有者使用诸如安全多方计算（SMC）之类的安全计算协议来构建联合机器学习模型变得非常重要。此任务旨在了解在构建支持安全协作的机器学习模型时可实现的安全多方计算实施的效率。&lt;/p&gt;&lt;p&gt;实验环境：我们将提供两个测试数据集，每个参与团队将提交一个通用训练算法的实现，以便每个测试数据集可用于训练模型。我们将提供直接训练数据的ML模型作为基准。该解决方案不需要使用与基准相同的模型，但它应该具有相似的性能。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485224%26idx%3D1%26sn%3D23dd70e138569b5083e491be6bd4de1a%26chksm%3Dfcdc7889cbabf19fd6d2ce86fb0cf3b6a07f9f48d389ba832734344bf9274451fbfdf3c40dd8%26token%3D1789705526%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-e784a38b43d380460b8c643bed150d67_180x120.jpg&quot; data-image-width=&quot;500&quot; data-image-height=&quot;212&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2019年IDASH保护隐私安全的基因分析竞赛内容&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-09-01-80656770</guid>
<pubDate>Sun, 01 Sep 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>生物特征数据库导致数百万用户的数据泄露</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-09-01-80656370.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80656370&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;出大事了！&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;VpnMentor的团队最近在安全平台BioStar 2中发现了一个巨大的数据泄露事件。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;BioStar 2是一个基于Web的生物识别安全智能锁定平台。它是一个中心化应用程序，允许管理员控制对安全设施区域的访问，管理用户权限，与第三方安全应用程序集成以及记录活动日志。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;作为生物识别软件的一部分，BioStar 2使用面部识别和指纹识别技术来识别用户。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该应用程序由世界50大安全制造商之一Suprema构建，在EMEA地区的生物识别访问控制市场份额最高。Suprema最近与Nedap合作，将BioStar 2整合到他们的AEOS门禁系统中。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;AEOS被83个国家的超过5,700个组织使用，包括一些最大的跨国企业，许多小型本地企业，政府，银行，大到英国大都会警察局。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次事件中泄漏的数据具有高度敏感性。它包括员工详细的个人信息和未加密的用户名和密码，使黑客能够访问使用BioStar 2的设施的用户帐户和权限。通过恶意代理可以利用此功能入侵安全设施并操纵其安全协议进行犯罪活动。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是一个巨大的泄密事件，危及所涉及的企业和组织，以及他们的员工。该团队能够访问超过100万条指纹记录以及面部识别信息。结合个人详细信息，用户名和密码，犯罪活动和欺诈的可能性很大。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一旦指纹和面部识别信息被盗，将导致个人生物特征数据无法使用，可能会影响一个人一辈子的吃穿住行。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;发现的时间线和所有者反应&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在该团队发现BioStar 2数据库中的漏洞后，联系了该公司，提醒他们重视该调查结果。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然而，发现BioStar 2在整个过程中通常非常不合作。该团队多次尝试通过电子邮件与公司联系，但无济于事。最终，决定通过电话联系BioStar 2的办公室。同样，该公司基本上没有反应。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在与他们的德国队成员交谈后，收到了一个回复，“我们不跟vpnMentor说话”。这表明他们了解这个事件，以及试图解决这个问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;团队还试图联系BioStar 2的GDPR合规官，但没有得到回复。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最终，在通过电话与愿意合作的法国分支机构交谈后，该公司采取措施停止违规行为。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;发现日期：2019年8月5日&lt;/p&gt;&lt;p&gt;日期供应商联系：2019年8月7日&lt;/p&gt;&lt;p&gt;行动日期：8月13日，违规行为已经结束&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;数据库中的条目示例&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;作为一个中心化的安全解决方案，BioStar 2的数据库几乎包含了所有可用的敏感数据。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4cc53d8e558792651070c8742cf525f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;543&quot; data-rawheight=&quot;434&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;543&quot; data-original=&quot;https://pic3.zhimg.com/v2-4cc53d8e558792651070c8742cf525f6_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4cc53d8e558792651070c8742cf525f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;543&quot; data-rawheight=&quot;434&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;543&quot; data-original=&quot;https://pic3.zhimg.com/v2-4cc53d8e558792651070c8742cf525f6_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4cc53d8e558792651070c8742cf525f6_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这可以用于各种各样的犯罪活动 ，这些活动对受影响的企业和组织以及其员工或客户都是灾难性的。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;他们的团队能够访问超过2780万条记录，总共23千兆字节的数据，其中包括以下信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;访问客户端管理面板，仪表板，后端控件和权限&lt;/li&gt;&lt;li&gt;指纹数据&lt;/li&gt;&lt;li&gt;面部识别信息和用户图像&lt;/li&gt;&lt;li&gt;未加密的用户名，密码和用户ID&lt;/li&gt;&lt;li&gt;进入和退出安全区域的记录&lt;/li&gt;&lt;li&gt;员工记录包括开始日期&lt;/li&gt;&lt;li&gt;员工安全级别和许可&lt;/li&gt;&lt;li&gt;个人详细信息，包括员工家庭住址和电子邮件&lt;/li&gt;&lt;li&gt;企业的员工结构和层次结构&lt;/li&gt;&lt;li&gt;移动设备和操作系统信息&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这次泄漏的一个更令人惊讶的方面是，访问的帐户密码是如此不安全。很多账户都有简单易懂的密码，比如“password”和“abcd1234”。很难想象人们仍然没有意识到这会让黑客访问他们的帐户变得多么容易。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f95164c16b1f4da5bf4e6ae431379cee_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;577&quot; data-rawheight=&quot;353&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;577&quot; data-original=&quot;https://pic3.zhimg.com/v2-f95164c16b1f4da5bf4e6ae431379cee_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f95164c16b1f4da5bf4e6ae431379cee_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;577&quot; data-rawheight=&quot;353&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;577&quot; data-original=&quot;https://pic3.zhimg.com/v2-f95164c16b1f4da5bf4e6ae431379cee_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f95164c16b1f4da5bf4e6ae431379cee_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当然，许多用户确实创建了通常难以发现或解密的更复杂和有效的密码。但是，&lt;b&gt;可以轻松地在BioStar 2数据库中查看密码，因为它们存储为纯文本文件，而不是安全地进行过哈希处理&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9e81136502b1ff1449d5e2dbf4328252_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;463&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1080&quot; data-original=&quot;https://pic3.zhimg.com/v2-9e81136502b1ff1449d5e2dbf4328252_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9e81136502b1ff1449d5e2dbf4328252_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;463&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1080&quot; data-original=&quot;https://pic3.zhimg.com/v2-9e81136502b1ff1449d5e2dbf4328252_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-9e81136502b1ff1449d5e2dbf4328252_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;受泄漏影响的企业范围在规模，地点，行业和用户方面差异很大。受到此次事件影响的企业包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;美国&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Union Member House - 拥有7,000名用户的Coworking空间和社交俱乐部。&lt;/p&gt;&lt;p&gt;Lits Link - 软件开发咨询。&lt;/p&gt;&lt;p&gt;Phoenix Medical - 医疗产品制造商。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;印度尼西亚&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Uptown - 雅加达的共用空间，拥有123名用户。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;印度和斯里兰卡&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Power World Gyms - 两个国家的分支机构的高级健身房特许经营权。我们访问了113,796个用户记录及其指纹。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;英国&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Associated Polymer Resources - 塑料回收专家。&lt;/p&gt;&lt;p&gt;瓷砖山 - 家居装饰和DIY供应商。 &lt;/p&gt;&lt;p&gt;Farla Medical - 医疗用品商店。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;阿联酋&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;全球村 - 一年一度的文化节，可容纳15,000个指纹。&lt;/p&gt;&lt;p&gt;IFFCO - 消费食品集团。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;芬兰&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Euro Park - 位于芬兰各地的停车场开发商。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;土耳其&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ostim - 工业区建筑开发商。  &lt;/p&gt;&lt;ul&gt;&lt;li&gt;日本&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Inspired.Lab - 东京千代田区的接待和设计空间。 &lt;/p&gt;&lt;ul&gt;&lt;li&gt;比利时&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Adecco Staffing - 我们发现大约2,000个指纹连接到人力资源和人力资源巨头。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;德国&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Identbase -在公开的数据库中也发现了属于这个商业ID和访问卡打印技术供应商的数据。&lt;/p&gt;&lt;p&gt;也许这次泄密最大的担忧是它的大小。BioStar 2的用户遍布全球，潜在的未来用户包括政府，银行，大学，国防承包商，警察和跨国企业。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该平台在全球范围内安装了150多万个，所有这些都可能容易受到这种泄漏的影响。受影响的人口总数可能达到数千万。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;数据违规影响&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;面部识别和指纹信息无法更改。一旦它们被盗，它就无法撤销&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;BioStar 2存储此信息的无担保方式令人担忧，考虑到其重要性，以及BioStar 2由安全公司建造的事实。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;它们不是保存指纹的散列（不能进行逆向工程），而是保存了人们可以为恶意目的复制的实际指纹。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;将泄漏中发现的所有数据放在一起，各种犯罪分子都可以将这些信息用于各种非法和危险的活动。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;账户收购和安全漏洞&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有了这个漏洞，犯罪黑客可以完全访问BioStar 2上的管理员帐户。他们可以使用它来接管具有完整用户权限和安全许可的高级帐户，并更改整个网络中的安全设置。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;他们不仅可以更改用户权限并将人员锁定在某些区域之外，还可以创建新的用户帐户（包括面部识别和指纹），以便自己访问建筑物或设施内的安全区域。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，黑客可以将现有帐户的指纹更改为自己的指纹，并劫持用户帐户以访问未被检测到的受限区域。黑客和其他犯罪分子可能会创建指纹库，以便在他们想要进入某个地方时使用而不被发现。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这使得黑客及其团队可以开放访问受BioStar 2保护的所有受限区域。他们还可以访问活动日志，因此他们可以删除或更改数据以隐藏其活动。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;结果，被黑客入侵的建筑物的整个安全基础设施变得毫无用处。拥有这些数据的任何人都可以自由移动到他们选择的任何地方，未被发现。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;抢劫和欺诈&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;让黑客或犯罪分子完全进入安全建筑物的危害是盗窃。他们可以使用这个数据库完全走进一个房间并带走任何有价值的东西。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;无论建筑的性质如何，无论是小镇健身房还是政府办公室，都是如此。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;泄漏还使黑客能够访问他们可能无法从建筑物外部到达的其他封闭网络。通过这种方式，他们可以窃取有价值的信息，植物病毒，监控和利用系统等等。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;身份盗窃和欺诈&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;BioStar 2泄漏包含大量个人详细信息以及用户名称，指纹和图像。这包括就业记录，电子邮件地址和家庭住址。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除了受影响企业的安全问题之外，员工和客户现在可以成为欺诈和其他犯罪的目标。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;相同的个人详细信息也可用于制作有效的网络钓鱼活动。网络钓鱼活动是使用模仿电子邮件诱骗受害者点击嵌入恶意软件的链接或提供可用于从中窃取的信息。通过此泄漏中提供的个人和专业详细信息，创建有效的网络钓鱼活动并不困难。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;BioStar 2数据为网络犯罪分子提供了利用用户获取非法经济利益的坚实基础。他们还可以将黑暗网络上的信息（包括指纹）出售给其他犯罪分子或恶意代理人。这可能会导致无辜的BioStar 2用户的数据导致许多无法追查，有罪的活动。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;勒索和勒索&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;针对某些员工根据他们在企业中的访问权限进行敲诈勒索或敲诈勒索是全世界犯罪分子使用的一种流行策略。它允许黑客获取有价值的信息或资产，而不会使自己处于身体危险之中。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;BioStar 2数据库中的漏洞允许黑客查看组织内的个人安全许可，并基于此针对高级别个人进行勒索和勒索。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;利用可用的个人详细信息，他们可以通过访问私人信息和利用家庭或人际关系等个人漏洞来使威胁变得非常有效。这使受影响的BioStar 2客户的员工面临很大的潜在危险。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;使用被盗指纹&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;像指纹一样使用生物识别安全性是最近的发展。因此，指纹被盗的全部潜在危险仍然未知。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;但是，要记住的重要一点是，一旦它被盗，与密码不同，您的指纹无法更改&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这使得指纹数据盗窃更加令人担忧。指纹正在取代许多消费品（如手机）上的键入密码。消费品上的大多数指纹扫描仪都是未加密的，因此当黑客开发技术来复制指纹时，他们就可以访问存储在设备上的所有私人信息，如消息，照片和付款方式。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这只是许多人的一个潜在问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于BioStar 2，目前最大的问题之一就是声誉。&lt;/p&gt;&lt;p&gt;在犯罪黑客手中，所有这些数据都可以下载并保存，以便以后用于各种犯罪。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;专家的建议&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果 BioStar 2的制造商采取了一些基本的安全预防措施，那么这种泄漏本可以很容易地避免。虽然我们发现的信息仍然可以让它落入犯罪黑客手中，我们建议BioStar 2和Suprema：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用更好的保护措施保护您的服务器&lt;/li&gt;&lt;li&gt;不要保存用户的实际指纹。保存无法进行逆向工程的哈希版本。&lt;/li&gt;&lt;li&gt;在数据库上实施适当的访问规则。&lt;/li&gt;&lt;li&gt;永远不要将不需要身份验证的系统留在互联网上。&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;他们不是保存指纹的哈希值（不能进行逆向工程），而是保存实际的指纹，然后可以用它来创建用于恶意目的的副本。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;给BioStar 2客户的建议&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果您的企业或组织正在使用BioStar 2，并且您担心自己受到此数据泄露的影响，我们建议您联系Suprema了解更多详情。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们还建议立即更改BioStar 2上的密码，并通知员工更改其个人密码。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，我们建议您与员工一起创建指南或共享工具，以帮助他们生成安全密码。有许多在线密码计可以确保它们得到更好的保护。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有关如何在线保护您的业务的深入指南，请查看如何保护您的网站和在线数据库免受黑客攻击。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;给用户的建议&lt;/b&gt;&lt;/h2&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果您的雇主或您是其客户的企业使用BioStar 2，您的个人信息，指纹和面部识别数据可能已被泄露。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;您应该通知业务或雇主您的疑虑，并确保他们知道数据泄露。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;宁波格密链网络科技有限公司几年前就开始研究密文生物特征识别，并取得了成功，已经开发出相应的产品。后续我们将继续跟踪报道。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485221%26idx%3D1%26sn%3D5393402bd68a814761c6bf37b892dcea%26chksm%3Dfcdc7884cbabf19230fb34e9989aefac93eff6bd92bab884ba941b89e9f271b34b249c238150%26token%3D1789705526%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-523378980d058c7be9d58b156e91067a_180x120.jpg&quot; data-image-width=&quot;604&quot; data-image-height=&quot;256&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;生物特征数据库导致数百万用户的数据泄露&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-09-01-80656370</guid>
<pubDate>Sun, 01 Sep 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>PySEAL：一个全同态加密的Python接口库</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-28-80104578.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80104578&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;宁波格密链网络科技有限公司一直致力于全同态加密的应用研究。最近陈智罡博士的团队开发了一个将SEAL全同态加密库映射到Python上的接口，解决了机器学习库与全同态加密库对接的问题，极大的方便了机器学习领域人员使用全同态加密算法，为其它领域需要用到全同态加密库的人们提供便利的工具。该库已经在GitHub上开源（&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//github.com/Huelse/pyseal&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/Huelse/pysea&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;）。全世界各地的工程技术人员都可以使用该库。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;微软的SEAL全同态加密库包含BFV和CKKS两种全同态加密方案，陈智罡博士团队要做的就是将这个库的所有可用接口都映射到Python上来，并使之在Python上正确运行。显然这是一个全新的项目。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;经过分析讨论，技术路线确定为使用微软最新的SEAL库（3.3版本）做为基础，与Pybind11官方头文件库作为中间件绑定，使用Setuptools或CMake编译生成动态链接库。这样就可供Python上调用SEAL库接口。技术框架如下：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5881828e266162aa164f96f09705056b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;554&quot; data-rawheight=&quot;178&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;554&quot; data-original=&quot;https://pic4.zhimg.com/v2-5881828e266162aa164f96f09705056b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5881828e266162aa164f96f09705056b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;554&quot; data-rawheight=&quot;178&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;554&quot; data-original=&quot;https://pic4.zhimg.com/v2-5881828e266162aa164f96f09705056b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-5881828e266162aa164f96f09705056b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这不是一个简单问题。初期，他们遇到了复杂的环境和标准问题，经过反复确认，团队选择使用是C++17标准和Python3.6.8的稳定版作为开发环境。然而接下来团队碰到了三个棘手问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;第一个问题&lt;/b&gt;，在最新版的SEAL库中，其使用的是一个名为MemoryPoolHandle的类和MemoryManager基类作为计算过程中的指针与内存池管理。因为Python的内存管理是自动化的，所以这个在Python里是无法直接实现。于是团队在wrapper绑定文件中，将其作为一个参数类导入，最终达成了相同的功能。&lt;/p&gt;&lt;p&gt;&lt;b&gt;第二个问题&lt;/b&gt;，SEAL库的Cipertext明文类中有一个关键参数scale，在测试环节中是要做到可自定义修改的，但问题在于这是一个私有变量。在C++中，定义好共有方法后，可通过应用的方式对其赋值，但在Python中因为其语言特性，同样不可能实现对私有变量的直接修改。所以经过研究，团队的解决方法是在Cipertext类中增加一个共有方法set_scale()，该函数方法是整个项目唯一对SEAL库做出修改的地方，也仅应用于测试环节的使用，对全同态加密整体是无影响的。&lt;/p&gt;&lt;p&gt;&lt;b&gt;第三个问题&lt;/b&gt;，出自于Python的内存管理，这是一个技术难点与重点。提前说明一下，Python中假如我们在代码文件里定义一个变量a=0，我们再写一个带参数的函数foo(a)，然后函数里会对a变量进行一系列运算使之改变。当我们将a带入到这个函数并使之运行后我们发现，在该函数里，a这个变量的确被运算过了，但是在这个函数体之外的那个a，它的值并不会变。通过id()方法观察内存，最终确认是这样的。&lt;/p&gt;&lt;p&gt;而在C++里通过指针的方式实现对传入参数的修改，SEAL库多处的encode和decode函数都是这样使用的。要在尽可能不改变SEAL库源码的情况下将其转移到Python上来，且Python不能操控指针，仅这个问题困扰了团队很久。最终团队给出的方案是自定义一个变量类。虽然在Python中单一的变量作为参数不会发生改变，但如果是一个类作为参数传入，那它的改变是全局性的。比如uIntVector类在c++中的原型是std::vector&amp;lt;std::uint64_t&amp;gt;，DoubleVector类其原型是std::vector&amp;lt;double&amp;gt;。团队对类的包装完成了这两者最基本的数据交互，这样CKKS方案就能完美运行。至此陈智罡博士团队的Pyseal项目的主要工作也已完成。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt; 最后，陈智罡博士的团队使用Pyseal将SEAL官方给出的6个样例在Python上全部实现，且运行效率也并未减少。接口已经在Github上开源。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;宁波格密链网络科技有限公司一直致力于全同态加密的研究与开发，希望能给全世界更多的技术工程人员带来便利，更加方便地使用全同态加密库。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3b2cc091ece4706826b28585f4c8237c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1006&quot; data-rawheight=&quot;744&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1006&quot; data-original=&quot;https://pic1.zhimg.com/v2-3b2cc091ece4706826b28585f4c8237c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3b2cc091ece4706826b28585f4c8237c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1006&quot; data-rawheight=&quot;744&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1006&quot; data-original=&quot;https://pic1.zhimg.com/v2-3b2cc091ece4706826b28585f4c8237c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-3b2cc091ece4706826b28585f4c8237c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485218%26idx%3D1%26sn%3D9a4a207067a156183e7d73d01a95b6ba%26chksm%3Dfcdc7883cbabf19591bf5537a2d7728ae1578974c6eb832086b82d1a7cdb7a51725d512c081e%26token%3D5507457%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-4d6f1edad0eef6d3a2cc3874d559d984_180x120.jpg&quot; data-image-width=&quot;1273&quot; data-image-height=&quot;540&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PySEAL：一个全同态加密的Python接口库&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-28-80104578</guid>
<pubDate>Wed, 28 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019年同态加密标准化会议召开</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-28-80102124.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/80102124&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019年同态加密标准化会议在美国加州举行。这已经是第四届同态加密标准化会议。由&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//HomomorphicEncryption.org&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;HomomorphicEncryption.org&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt; 组织主办。赞助商是英特尔AI，微软，以及 Duality Technologies。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;日程表如下：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-086ca1f05c65a55fa9b4dcf30a037518_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1214&quot; data-rawheight=&quot;1404&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1214&quot; data-original=&quot;https://pic1.zhimg.com/v2-086ca1f05c65a55fa9b4dcf30a037518_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-086ca1f05c65a55fa9b4dcf30a037518_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1214&quot; data-rawheight=&quot;1404&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1214&quot; data-original=&quot;https://pic1.zhimg.com/v2-086ca1f05c65a55fa9b4dcf30a037518_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-086ca1f05c65a55fa9b4dcf30a037518_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;宁波格密链网络科技有限公司将参与会议，并且积极推动国内同态密码标准的制定工作。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485214%26idx%3D1%26sn%3D93c7d3dbfccfad63c3086d0e7dbf1e9f%26chksm%3Dfcdc78bfcbabf1a9dd5eb3e8c39a38b27c7baece35347155bcfe80da885672f8994def366386%26token%3D5507457%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-34142914d276710fe05f2a30c1961807_180x120.jpg&quot; data-image-width=&quot;897&quot; data-image-height=&quot;381&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2019年同态加密标准化会议召开&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-28-80102124</guid>
<pubDate>Wed, 28 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>谷歌隐私交集和技术解析2—技术概览</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-24-79643138.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/79643138&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;本文由陈智罡博士撰写&lt;/b&gt;&lt;/p&gt;&lt;p&gt;上一篇文章我们分析了谷歌开源库（Private Join and Compute）的应用场景（&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485202%26idx%3D1%26sn%3Db62c632e5dd24232ca53833e45d50bc6%26chksm%3Dfcdc78b3cbabf1a512e808e72dbdca24fdc8e9838c707ed39c66f1995ab4f10bb8f8da31933d%26token%3D393350469%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;谷歌隐私交集和技术解析1—应用场景分析&lt;/a&gt;），本篇文章对其技术进行分析。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌这个开源库是利用已有的密码技术成果，对已有技术组合从而达到解决问题的目的。有点像比特币（&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247483759%26idx%3D1%26sn%3Df780b496c5961277bb6e5c533e4ca410%26chksm%3Dfcdc7ececbabf7d83d866d7deb01462d2be0df583bafb4242c723030bea95e2760247ed4cbaf%26token%3D322153894%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;比特币白皮书解析链接&lt;/a&gt;），都是站在巨人肩膀上。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌是如何从学术界摘果子来解决工业界实际问题的呢？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌这个开源库的主要工作就是设计一个切实可行的密码学安全计算协议，其目的是为了工业界的使用。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;01问题模型&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;b&gt;该协议解决的主要问题就是计算隐私交集和（Private Intersection-Sum，简称PIS）&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;问题模型可以抽象为：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有两方各自拥有包含用户身份的数据集，其中一方还拥有与用户身份相关的一个整数，例如该整数可以是该用户的交易金额。双方想知道如下内容：&lt;/p&gt;&lt;p&gt;(1) 双方拥有的共同用户数量；&lt;/p&gt;&lt;p&gt;(2) 在不泄露用户输入的任何隐私信息下，这些共同用户所对应的整数之和。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这就是一个&lt;b&gt;隐私交集和（PIS）&lt;/b&gt;问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该问题不是一个空想出来的问题，而是来自于企业的具体需求。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;例如在广告战中，计算具体广告转化率，也就是打广告的效果。有多少人因为广告而购买了商品。在该需求中，可能涉及到多个企业。这是在企业合作中经常会出现的情况。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;这个问题具有重要的实际价值，而且在很多场景下都需要，具有共性&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;02技术框架&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;上述问题咋看起来，很像&lt;b&gt;隐私集合交集问题（Private Set Intersection，简称PSI）&lt;/b&gt;。注意PIS和PSI是两个问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;PIS是一个密码学上的传统问题，即在不泄露交集的情况下，计算集合的交集。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;而谷歌这里定义的PIS是除了PIS所完成的功能外，还能够对交集做聚合计算。显然这会带来额外的计算开销。&lt;/p&gt;&lt;p&gt;注意，聚合就是对同一属性的元素求和。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌开源库做的事就是以PSI方案为基石，对其进行扩展。将其扩展为在不泄露交集的情况下，能够在相应的属性上做聚合计算。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所以该开源库的架构是：&lt;/p&gt;&lt;p&gt;&lt;b&gt;PSI&lt;/b&gt; &lt;b&gt;+&lt;/b&gt; &lt;b&gt;对交集元素求和（在不泄露交集元素的前提下）&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;03技术路线&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;该库的技术路线就是首先根据已有的PSI方案，选择出最有效的方案作为备选。然后通过加法同态加密实现聚合功能。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这些年，密码学界已经有许多PSI的解决方案。谷歌技术路线上选择了两种解决PSI问题的方法。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;一种方法&lt;/b&gt;是基于随机不经意传输（Random Oblivious Transfer），该方法利用了不经意PRF（OPRF）技巧，获得了隐藏交集元素身份的功能。然后利用&lt;b&gt;加法同态加密&lt;/b&gt;，实现了在不泄露交集元素的情况下提供聚合功能。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;第二种方法&lt;/b&gt;是在加法同态加密下，利用加密的Bloom过滤器构造了一个oblivious协议。聚合功能依然通过加法同态加密实现。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除了以上两个协议外，还构造了&lt;b&gt;第三个协议&lt;/b&gt;，称为DDH类型协议。该协议基于传统的集合交集协议，使用Pohlig Hellman 密文（基于判断类DDH问题的困难性）。这种类型协议可以看做是使用共享密钥的不经意PRF。同样，聚合功能也是通过加法同态加密实现。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;04性能&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;以上三个协议都需要加法同态加密。目前有三种加法同态加密方案：&lt;/p&gt;&lt;p&gt;1. Paillier加密方案&lt;/p&gt;&lt;p&gt;2. 指数型ElGamal加密方案&lt;/p&gt;&lt;p&gt;3. 环LWE加密方案&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;从通信效率和计算效率两个角度，谷歌对基于这三个加法同态加密的三个协议进行了详细分析。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;数据显示，第三个协议--DDH类型协议获得了最好的通信效率。在输入集合元素是10万个元素情况下，只需要9.28M的通信量。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，在计算效率方面，基于环LWE加密方案的DDH类型协议也依然获得了最佳性能。在输入集合含有10万个元素，以及相关整数是32位的情况下，计算PIS问题仅需395.78秒。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于其它两个协议，尽管做了计算上的优化，但是其计算瓶颈主要花在了同态操作上。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485206%26idx%3D1%26sn%3Dc13cc75c644d9b4f7ea1c62f490f939f%26chksm%3Dfcdc78b7cbabf1a1320d4cf918da8a610b66a1731153c5c1190956189d15c52a365dddf7bd47%26token%3D1203348933%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-b129227c86c62a3591d6707026a377ef_180x120.jpg&quot; data-image-width=&quot;900&quot; data-image-height=&quot;382&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;谷歌隐私交集和技术解析2—技术概览&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-24-79643138</guid>
<pubDate>Sat, 24 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>谷歌隐私交集和技术解析1—应用场景分析</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-23-79519818.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/79519818&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;本文由陈智罡博士撰写&lt;/b&gt;&lt;/p&gt;&lt;p&gt;在多方协作的过程中，涉及到隐私的问题已被关注已久。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如何解决呢？密码学界提出了不少解决方案，例如全同态加密，多方计算。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这些技术都是通用的，放在任何一个需要的地方都可以。但是由于技术本身的特性，放在任何一个地方都会有或多或少的缺点。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌发布的隐私交集开源库(Private Join and Compute)，展示了一个如何从学术界摘果子的范例。它是解决一个具体场景下的问题。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;学术界、工业界以及商业界，是一个生物链。看似是做的不同的事情，但是互相之间是供给的关系。这就是我们常说的“产、学、研”。但是我们经常搞乱了角色，没把自己的角色做好，反而要担当多角色。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌是一家愿意尝鲜的公司。我记得几年前，格加密算法在理论界因为其抗量子特性火了的时候，谷歌率先在自己的服务器上部署了基于环LWE的密钥交换协议，以测试其性能，为抗量子时代准备。不知为什么，几个月后就恢复成原来的协议。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;隐私交集和技术&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;随着大数据的兴起，机器学习无处不见，数据的隐私安全备受关注。例如，谷歌今年早期就开发出“密码检查器”，用户可以提交自己的用户名和口令进行查询，系统通过与已经泄露的口令数据集对比，从而判定用户口令的安全性。然而这一切都不会泄露用户的隐私（包括用户的口令）。该系统使用的是一种基于&lt;b&gt;隐私交集&lt;/b&gt;(Private Set-Intersection)的安全多方计算技术，这项密码学技术保障了多方协作却不泄露用户隐私。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;谷歌这次发布的隐私交集开源库，基于的是一种称为“&lt;b&gt;隐私交集和&lt;/b&gt;(Private Intersection-Sum)”的技术。该技术能够隐藏两个数据集的交集，但是却能显示对其交集的汇总计算结果，例如统计交集中元素的数量等。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在某些场景下，这项技术非常有用。例如两家公司，一家是广告商，一家是销售商。如果想知道有多少用户是通过广告商的广告点击，进入到销售商家进行购买的，而且销售额一共是多少。那么只要两家公司分别提供两个数据集，然后求交集，再求交集中用户的数量以及交易额即可。但是，这两家公司都不会愿意分享给对方自己的数据集。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;怎么办呢？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;先看传统解决方法。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;传统解决方法依赖于法律。这两家公司先签一个法律协议，协议中规定双发分享各自的数据集，得到汇总数据后将数据集销毁。如果不销毁，导致数据泄露，将受到法律制裁。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然而，通过密码学手段，可以无需依赖于法律。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过&lt;b&gt;隐私交集和&lt;/b&gt;技术可以对交集进行汇总，从而在不泄露双方数据集的前提下，提供对交集的汇总信息。两全其美。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;隐私交集和技术提供了一个类似于法律合约的功能，无需法律合同就能够让你知道想知道的，却不会知道的更多。这一切都是通过密码学协议保证。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这和区块链技术有异曲同工之处。（区块链在不信任的环境下提供了一种信用）&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;例如在上述应用场景下，最终可能得到的汇总信息是：1万个客户在看到广告后购买了商品，总共购买金额100万。其余什么都不知道。知其然而不知所以然。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上述场景是一个计算广告转化率的应用场景。谷歌提供的隐私交集和技术能够在保护隐私的前提下，计算广告转化率。当然，还可以应用到其他领域的研究中，例如：医疗保健、车辆安全、公共政策、多样性和包容性等研究中。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;安全模型和不足之处&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;在谷歌开源库中，其安全模型假设的是“诚实且好奇的敌手”。如果参与者违背了协议，他们可能会知道更多，不仅仅是规定的信息。因此，该协议不能确保使用协议的各方使用合法的输入，或者防止任意输入。有可能导致泄露的弱点。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;例如有一个用户消费金额很大，通过交集和汇总出的数据就很容易判断出，该用户是否在交集里。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该开源库并不是谷歌官方出品，所以仅供学习使用。目前&lt;b&gt;格密链网络科技有限公司&lt;/b&gt;已经着手研究该项目，结合同态加密设计出更合理的方案。对该技术感兴趣的公司，可以联系我们，欢迎合作交流。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485202%26idx%3D1%26sn%3Db62c632e5dd24232ca53833e45d50bc6%26chksm%3Dfcdc78b3cbabf1a512e808e72dbdca24fdc8e9838c707ed39c66f1995ab4f10bb8f8da31933d%26token%3D190313441%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-102ee663fe163bd5793804d50cddccca_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;545&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;谷歌隐私交集和技术解析1—应用场景分析&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-23-79519818</guid>
<pubDate>Fri, 23 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>谷歌推出一种新型的安全多方计算开源库</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-11-77652463.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77652463&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;谷歌公司不断投资于新的研究，以推动创新，保护个人隐私。今年早些时候，推出了密码检查器，这是一个Chrome扩展程序，可帮助用户检测他们在网站上输入的用户名和密码是否已被盗用。它依赖于称为隐私集合交集（PSI）的加密协议，以将您的登录凭据与超过40亿凭证的加密数据库相匹配，谷歌知道这些凭据是不安全的。同时，它确保没有人（包括谷歌）了解您的实际凭据。&lt;/p&gt;&lt;p&gt;现在谷歌推出了&lt;b&gt;隐私加入和计算（Private Join和Compute）的开源库，这是一种新型的安全多方计算（MPC）&lt;/b&gt;，它增强了核心PSI协议，帮助组织与机密数据集协同工作，同时提高了隐私。大家可以到GitHub上查看该项目：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/Google/private-join-and-compute&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/Google/priva&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;te-join-and-compute&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; 。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;以隐私安全的方式与数据协作&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;许多重要的研究，商业和社会问题可以通过来自不同方的数据集的组合来推导出想要的结果，其中每一方都拥有关于一组共享标识符（例如电子邮件地址）的个人信息，其中一些是常见的。但是，当您处理敏感数据时，一方如何在不知道另外一方的任何个人数据情况下，而得到有关另一方数据的汇总信息呢？这是Private Join和Compute需要解决的挑战。&lt;/p&gt;&lt;p&gt;使用此加密协议，双方可以加密其标识符和关联数据，然后加入它们。然后，他们可以对重叠的数据集执行某些类型的计算，从而汇总两个数据集中的有用信息。所有输入（标识符及其相关数据）在整个过程中保持完全加密且不可读。任何一方都没有透露他们的原始数据，但他们仍然可以使用计算的输出回答手头的问题。最终结果是以聚合统计信息的形式解密和共享的唯一结果。例如，这可以是两组中数据的计数，总和或平均值。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;深入了解该技术&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;Private Join和Compute结合了两种基本的加密技术来保护单个数据：&lt;/p&gt;&lt;p&gt;隐私集合交集：允许双方私下加入他们的集合并发现他们共有的标识符。我们使用一个不经意问题的变种协议，它只标记加密的标识符而不学习任何标识符。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;同态加密：允许直接对加密数据执行某些类型的计算，而不必首先对其进行解密，这保留了原始数据的隐私。在整个过程中，个人标识符和值仍然隐藏。例如，您可以计算公共集中有多少个标识符，或计算与标记的加密标识符关联的值的总和 - 无需了解有关个人的任何信息。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这两种技术组合确保只显示连接集的大小和其相关值的统计（例如总和）。个别项目使用随机密钥进行高度加密，并且不以原始形式提供给对方或其他任何人。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;使用多方计算来解决实际问题&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;多方计算（MPC）是一个历史悠久的领域，但它通常面临着学术界以外广泛采用的障碍。常见的挑战包括找到有效的方法来定制加密技术和工具来解决实际问题。谷歌致力于通过更广泛地提供隐私技术，将MPC和加密技术应用于Google及其他更具体的现实问题。我们正在通过协作机器学习，用户安全性和汇总广告衡量来探索Google的一些潜在用例。这只是可能的开始。该技术可以帮助推进需要组织协同工作的各种领域的有价值的研究，而不会泄露有关数据中所代表的个人的任何信息。例如：公共政策 - 如果政府在公立学校实施新的健康计划（例如更好的午餐选择和体育课程），受影响学生的长期健康结果是什么？多元化和包容性 - 当行业制定新的计划来弥补性别和种族薪酬差距时，这会如何影响人口统计公司之间的薪酬？医疗保健 - 当一种新的预防性药物被开给全国的患者时，它是否会降低疾病的发病率？汽车安全标准 - 当汽车制造商为车辆增加更先进的安全功能时，是否与报告的车祸减少相吻合？Private Join和Compute可确保个人信息安全，同时允许组织准确计算并从汇总统计中获取有用的见解。通过更广泛地共享技术，我们希望这扩展了安全计算的使用案例。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485193%26idx%3D1%26sn%3D8fe898903cd4d1fe2356f08888a573a4%26chksm%3Dfcdc78a8cbabf1be64669d7b5ce533926dd32de71a030e13bcd38d430f01483a805413b47add%26token%3D393350469%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;谷歌推出一种新型的安全多方计算开源库&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-11-77652463</guid>
<pubDate>Sun, 11 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>关于安装NTL的总结</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-08-10-77530514.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77530514&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;一、在shoup网页(&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//www.shoup.net/ntl/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shoup.net/ntl/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;)，下了WinNTL-6_1_0并将它解压到D盘里。然后将WinNTL-6_1_0里的include文件下的NTL复制到了dev c++里DEV-cpp中include的文件（文件是MinGW64下的include文件）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;二、静态文件在dev c++中建立&lt;/b&gt;，因为最开始下载dev c++为方便用了简体中文，&lt;b&gt;最好改成英文版&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;三、再根据NEW-&amp;gt;Project-&amp;gt;Static Library的步骤建立好静态文件，然后按照Project -&amp;gt; Add to Project -&amp;gt; Files 将NTL下的src文件夹里的所有文件添加进来。（&lt;b&gt;Add to project 后没有files 只要右键然后全选所有src里的所有文件就可以&lt;/b&gt;） &lt;/p&gt;&lt;p&gt;四、按照Project -&amp;gt; Project Options -&amp;gt;Directories-&amp;gt;Include Directories的步骤将WinNTL-6_1_0文件夹中include文件添加进来。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-13d4fa4e0b577c5f95b19e25f2053d13_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;688&quot; data-rawheight=&quot;522&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;688&quot; data-original=&quot;https://pic4.zhimg.com/v2-13d4fa4e0b577c5f95b19e25f2053d13_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-13d4fa4e0b577c5f95b19e25f2053d13_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;688&quot; data-rawheight=&quot;522&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;688&quot; data-original=&quot;https://pic4.zhimg.com/v2-13d4fa4e0b577c5f95b19e25f2053d13_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-13d4fa4e0b577c5f95b19e25f2053d13_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;在添加进来后一定要按add，不然只选择ok后并没有添加进去。&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;五、编译后会产生一个 .a 的文件，&lt;b&gt;这个 .a 库文件就是一个压缩包&lt;/b&gt;，然后将这个压缩包放入DEV C++的Lib文件下就可以了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;六、测试NTL库是否在DEV C++中是否运行。  File -&amp;gt; New -&amp;gt; Projects -&amp;gt; Console Application取名为Ctest，再通过Project -&amp;gt; Add to Project -&amp;gt; Files将WinNTL-6_1_0 /tests/QuickTest.cpp导入，&lt;b&gt;选中的为.cpp文件&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-09674539ea4a12dcad495880987305b0_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;599&quot; data-rawheight=&quot;88&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;599&quot; data-original=&quot;https://pic1.zhimg.com/v2-09674539ea4a12dcad495880987305b0_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-09674539ea4a12dcad495880987305b0_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;599&quot; data-rawheight=&quot;88&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;599&quot; data-original=&quot;https://pic1.zhimg.com/v2-09674539ea4a12dcad495880987305b0_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-09674539ea4a12dcad495880987305b0_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;七、最后Project -&amp;gt; Project Options -&amp;gt;Parameters，&lt;b&gt;将之前生成的.a文件也就是那个压缩包添加进来&lt;/b&gt; &lt;b&gt;一定要选择add library or object.&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d50d4c6101423c0755ab11ea034c657b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1071&quot; data-rawheight=&quot;818&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1071&quot; data-original=&quot;https://pic4.zhimg.com/v2-d50d4c6101423c0755ab11ea034c657b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d50d4c6101423c0755ab11ea034c657b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1071&quot; data-rawheight=&quot;818&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1071&quot; data-original=&quot;https://pic4.zhimg.com/v2-d50d4c6101423c0755ab11ea034c657b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-d50d4c6101423c0755ab11ea034c657b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然后执行QuickTest。&lt;b&gt;出现下面的错误情况时只要将空的main.cpp删除就可以执行成功了。&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b1da85aaaf5c95468b1d0473aa05fe43_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;596&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1080&quot; data-original=&quot;https://pic4.zhimg.com/v2-b1da85aaaf5c95468b1d0473aa05fe43_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b1da85aaaf5c95468b1d0473aa05fe43_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;596&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1080&quot; data-original=&quot;https://pic4.zhimg.com/v2-b1da85aaaf5c95468b1d0473aa05fe43_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-b1da85aaaf5c95468b1d0473aa05fe43_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;  执行成功后，如下图。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-437a6b48f7edca2d7d7dc8818f8c8304_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;564&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1080&quot; data-original=&quot;https://pic1.zhimg.com/v2-437a6b48f7edca2d7d7dc8818f8c8304_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-437a6b48f7edca2d7d7dc8818f8c8304_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;564&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1080&quot; data-original=&quot;https://pic1.zhimg.com/v2-437a6b48f7edca2d7d7dc8818f8c8304_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-437a6b48f7edca2d7d7dc8818f8c8304_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485189%26idx%3D1%26sn%3D1f92f3a794e3809eed36c3ca3dcdb726%26chksm%3Dfcdc78a4cbabf1b26413c8fe92a129e37966a061a1a13a9cbb3b0de0a134224b721b8a585a94%26token%3D2097676868%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;关于安装NTL的总结&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-08-10-77530514</guid>
<pubDate>Sat, 10 Aug 2019 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
