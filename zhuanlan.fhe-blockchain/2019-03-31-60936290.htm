<p>前言：这篇文章是由陈智罡博士于2013年写的博客文章，当时全同态加密研究刚起步，方案非常复杂。陈博士的这篇博客文章，成为了每个进入全同态加密领域同学的必读文章，也为很多学习全同态加密的同学解答了很多学习困惑。今天读起来，会让我们很好的了解当初全同态加密是如何被解决的。</p><p>———————————这是一条美丽的分割线————————————</p><h2>7.实现步骤</h2><p>功能函数f里其实有两样基本东西就够了：AND增强型电路，XOR增强型电路，经过集成电路化后如下现状：</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-b7434ee3afafc2ecc061e9b16cf775a6_b.jpg" data-caption="" data-size="normal" data-rawwidth="360" data-rawheight="180" class="content_image" width="360"></noscript><img src="https://pic3.zhimg.com/v2-b7434ee3afafc2ecc061e9b16cf775a6_b.jpg" data-caption="" data-size="normal" data-rawwidth="360" data-rawheight="180" class="content_image lazy" width="360" data-actualsrc="https://pic3.zhimg.com/v2-b7434ee3afafc2ecc061e9b16cf775a6_b.jpg"></figure><p>任意功能函数例如f1，都可以应用如上两个增强电路组合来表示，例如：</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-db2c5b268bee81ad87b8e09322a56d82_b.jpg" data-caption="" data-size="normal" data-rawwidth="383" data-rawheight="386" class="content_image" width="383"></noscript><img src="https://pic3.zhimg.com/v2-db2c5b268bee81ad87b8e09322a56d82_b.jpg" data-caption="" data-size="normal" data-rawwidth="383" data-rawheight="386" class="content_image lazy" width="383" data-actualsrc="https://pic3.zhimg.com/v2-db2c5b268bee81ad87b8e09322a56d82_b.jpg"></figure><p>所以每次计算的基本步骤如下：</p><p>1) 对输入的明文m进行加密Enc(m),得到密文（c,z）,c是密文，z是向量&lt;z1,z2,……&gt;也称为扩展密文。</p><p><br></p><p>2) 对输入的密文进行重加密。输入的密文为（c,z）。在对密文运算之前每次都要对其重加密。因为明文空间是{0,1}，所以加密一定是对密文按位来加密。重加密的过程就是解密的过程，但是对象是对加密的密文以及加密的私钥进行。</p><p><br></p><p>所以有：c’=Enc(Lsb(c))，得到的c’是一个整数。原本对z的每一位也要进行加密的，但是有一个方法可以提高效率，就是对z不加密，认为z的每一位自己就是自己的加密。另外私钥是s=&lt;s1,s2,……&gt;是0和1的向量，对私钥的每一位的加密记为sk’=&lt;Enc(s1),Enc(s2),……&gt;=&lt;s1’，s2’,……&gt;，得到的si’也是整数。</p><p><br></p><p>然后运行∑si·zi，运行它的算法如前面所说，把每一个zi的二进制表示写成矩阵的一行，这样就得到一个矩阵：</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-30487a2474c7a357fad8d40c6dab0f37_b.jpg" data-caption="" data-size="normal" data-rawwidth="369" data-rawheight="147" class="content_image" width="369"></noscript><img src="https://pic4.zhimg.com/v2-30487a2474c7a357fad8d40c6dab0f37_b.jpg" data-caption="" data-size="normal" data-rawwidth="369" data-rawheight="147" class="content_image lazy" width="369" data-actualsrc="https://pic4.zhimg.com/v2-30487a2474c7a357fad8d40c6dab0f37_b.jpg"></figure><p>然后用si’乘以上面矩阵第i行的每一位，得到一个整数矩阵(矩阵中每一个元素都是整数):</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-9bc5faae8e158a312caf7e0fa53ec3b8_b.jpg" data-caption="" data-size="normal" data-rawwidth="420" data-rawheight="358" class="content_image" width="420"></noscript><img src="https://pic1.zhimg.com/v2-9bc5faae8e158a312caf7e0fa53ec3b8_b.jpg" data-caption="" data-size="normal" data-rawwidth="420" data-rawheight="358" class="content_image lazy" width="420" data-actualsrc="https://pic1.zhimg.com/v2-9bc5faae8e158a312caf7e0fa53ec3b8_b.jpg"></figure><p>​然后对最后一列（最低位）求海明码，根据前面所述定理，海明码的最低位是e20 （b1,-n, b2,-n ……，bt,-n），其余各位e21 （b1,-(n-1), b2,-(n-1) ……，bt,-(n-1)），……，都作为进位进到前面相应的位。依次计算下去，第1列的结果是b-1 = e20 （b1,-1, b2,-1 ……，bt,-1，……），第0列的结果是b0 = e20 </p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-b8b5fbea7c8cc2e9f765e9cc10936605_b.jpg" data-caption="" data-size="normal" data-rawwidth="517" data-rawheight="252" class="origin_image zh-lightbox-thumb" width="517" data-original="https://pic2.zhimg.com/v2-b8b5fbea7c8cc2e9f765e9cc10936605_r.jpg"></noscript><img src="https://pic2.zhimg.com/v2-b8b5fbea7c8cc2e9f765e9cc10936605_b.jpg" data-caption="" data-size="normal" data-rawwidth="517" data-rawheight="252" class="origin_image zh-lightbox-thumb lazy" width="517" data-original="https://pic2.zhimg.com/v2-b8b5fbea7c8cc2e9f765e9cc10936605_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-b8b5fbea7c8cc2e9f765e9cc10936605_b.jpg"></figure><p>3) 计算b= (b0 + b-1 ) ，b就是对应的Lsb(「∑si* zi 」)密文运算的结果。</p><p>4) 根据上面已经得到的c’=Enc(Lsb(c))，最终对密文c的重加密结果为：</p><p>c* = c’+ b</p><p>       知道此c*和c有什么关系么？c*是c的“重生”，噪音比原来降低了。</p><p><br></p><p>5) 然后将c*输入门电路。门电路一般都是二元的，需要两个输入，另外一个输入也用同样的方法计算得到</p><p><br></p><p>6) 进行门电路运算，例如加或乘，输出得到的结果。接下来有两种情况：第一种：此结果为最终结果，那么再进行重加密一次后，将密文返还给用户，用户解密后得到正确的运算结果。第二种：此结果不是最终结果，那么继续输入到下一级电路，依然是要先进行重加密。</p><p><br></p><p>全文结束</p><p>==========================================================================</p><p><b>文章首发在微信公众号：btc201800</b><br><b>知识星球ID：28018093</b></p><p><br><b>音频发布在喜马拉雅上“区块链杂谈 (第2季)”</b> <b><u><a href="http://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/Bjq4se</span><span class="invisible"></span></a></u></b></p><p><b>解读区块链白皮书</b> <u><a href="http://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/RNU1Q8</span><span class="invisible"></span></a></u></p><p><br><b>宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。</b></p>