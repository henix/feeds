<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>全同态加密与区块链</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/</link>
<description>区块链与密文计算让数据可以自由的分享 全同态加密具有神奇的功能，在不解密的情况下能够对密文进行任意计算。区块链能够在去中心化的环境下，保证数据的不可篡改、可追溯等。区块链+全同态加密=让我的数据属于我掌控。</description>
<language>zh-cn</language>
<lastBuildDate>Sun, 16 Jun 2019 15:06:44 +0800</lastBuildDate>
<item>
<title>多长的密钥能够抗量子计算</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-69000217.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/69000217&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;传统密码的抗量子计算特性，一直备受关注，如下图的数据。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9ea9b200841e7d9eb31fc6e62dd0a9c9_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;838&quot; data-rawheight=&quot;572&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;838&quot; data-original=&quot;https://pic2.zhimg.com/v2-9ea9b200841e7d9eb31fc6e62dd0a9c9_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9ea9b200841e7d9eb31fc6e62dd0a9c9_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;838&quot; data-rawheight=&quot;572&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;838&quot; data-original=&quot;https://pic2.zhimg.com/v2-9ea9b200841e7d9eb31fc6e62dd0a9c9_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-9ea9b200841e7d9eb31fc6e62dd0a9c9_b.jpg&quot;/&gt;&lt;figcaption&gt;具体论文请加入知识星球下载&lt;/figcaption&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485106%26idx%3D1%26sn%3Dd98c75882e0dd3c58ff85844db0e85e3%26chksm%3Dfcdc7913cbabf005210e64211052c93ee33d4b06a01a4006ac804ec4f6f8445cf8ed14ccd8b6%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;多长的密钥能够抗量子计算&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-69000217</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019年密钥大小和加密算法指南</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68999193.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68999193&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;多年来，关于密钥长度的研究已经有很多，其中包括学术界（例如Lenstra方程）和各种标准委员会（ECRYPT-CSA，德国BSI，美国NIST等）。&lt;/p&gt;&lt;p&gt;尽管在互联网上对这些材料进行了大量的报道，但这些资源在为软件开发人员和系统管理员起草建议时缺乏清晰度。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●关于密钥大小的重要说明&lt;/b&gt;&lt;/p&gt;&lt;p&gt;关于密钥大小在2019年最重要的一点是它们并不像普通大众所想的那样重要。&lt;/p&gt;&lt;p&gt;安全行业中的许多人完全专注于最大限度的提高暴力攻击的难度，前提是他们仍然可以实现自己的性能目标。他们选择符合目标基准的最大密钥，并且感觉更安全。与此同时，他们实际上并没有做出最佳的安全选择，实际上可能会伤害他们自己的安全。&lt;/p&gt;&lt;p&gt;实际上，超过一定的阈值（例如对称加密的96位安全级别），更长的密钥几乎不会给你带来什么。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●当密钥大小实际上损害了安全性时&lt;/b&gt;&lt;/p&gt;&lt;p&gt;考虑这两组密码; 哪个更安全？&lt;/p&gt;&lt;p&gt;Blowfish，支持最多448位密钥&lt;/p&gt;&lt;p&gt;AES，最多支持256位密钥。&lt;/p&gt;&lt;p&gt;如果选择Blowfish，你就陷入了陷阱。&lt;/p&gt;&lt;p&gt;Blowfish的块大小为64位，而AES的块大小为128位。&lt;/p&gt;&lt;p&gt;Blowfish因为它的块大小很容易受到攻击，而AES不会。&lt;/p&gt;&lt;p&gt;在现实世界中，AES具有硬件加速（AES-NI），使其速度非常快，同时不受缓存定时攻击的影响。Blowfish没有可用的硬件加速。&lt;/p&gt;&lt;p&gt;完全关注密钥大小，而忽略这些算法的其他重要属性，可能导致做出次优的安全决策。&lt;/p&gt;&lt;p&gt;但是，如果你有一个其他条件相似的场景，你总是使用AES，但决定在你的应用程序中使用128位和256位密钥。你应该总是选择更大长度的密钥吗？&lt;/p&gt;&lt;p&gt;AES-128和AES-256的安全性之间唯一有意义的区别是量子计算机的威胁。&lt;/p&gt;&lt;p&gt;如果开发出实用的量子计算机，Grover的算法会破坏128位AES而不是256位AES。但在大多数协议中，您的非对称加密速度下降得更快（2048位RSA和256位ECC略多于2^32次，而AES则为2^64次）。&lt;/p&gt;&lt;p&gt;由于大多数AES密钥是使用非对称加密进行密钥交换的，因此选择256位密钥可能不足以保护您的消息机密性免受量子攻击者的攻击。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●密钥大小和算法建议&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果您的团队中有加密专家不同意这些建议，请听取您的专家的意见。他们可能知道这个博客文章没有的特定于您的需求的东西。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●非对称（“公钥”）加密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;按优先顺序使用：&lt;/p&gt;&lt;p&gt;X25519（密钥大小永不改变）&lt;/p&gt;&lt;p&gt;对称加密：使用secp256r1的ECDH（密钥大小永远不会改变）&lt;/p&gt;&lt;p&gt;对称加密：带有2048位密钥的RSA&lt;/p&gt;&lt;p&gt;即使使用3072位RSA，256位椭圆曲线加密密钥的安全性也是如此。&lt;/p&gt;&lt;p&gt;虽然许多组织建议在未来几年内从2048位RSA迁移到3072位RSA（甚至4096位RSA），但不要遵循该建议。而是从RSA迁移到椭圆曲线加密，然后放松，同时留意后量子密码学的建议。&lt;/p&gt;&lt;p&gt;此外，要保证RSA加密的安全性还有许多复杂的问题要考虑，但这是一个棘手的问题，不值得在本文中重新讨论。如果你能帮上忙的话，最好不要使用RSA。&lt;/p&gt;&lt;p&gt;ECDH：256位密钥&lt;/p&gt;&lt;p&gt;RSA：2048位密钥&lt;/p&gt;&lt;p&gt;&lt;b&gt;●对称密钥加密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;按优先顺序使用：&lt;/p&gt;&lt;p&gt;XChaCha20-Poly1305或XSalsa20-Poly1305（始终具有256位密钥）&lt;/p&gt;&lt;p&gt;AES-GCM-SIV（无论密钥大小）&lt;/p&gt;&lt;p&gt;ChaCha20-Poly1305（始终具有256位密钥）&lt;/p&gt;&lt;p&gt;AES-GCM（无论密钥大小）&lt;/p&gt;&lt;p&gt;如果您正在使用信誉良好的TLS库（OpenSSL是最常见的），那么这些选项中的任何一个都可以。您可以随意使用256位密钥，但如果您不得不使用128位密钥，请不要担心太糟糕。&lt;/p&gt;&lt;p&gt;对于应用层对称密钥加密，应考虑两个附加选项。&lt;/p&gt;&lt;p&gt;AES-CTR（无论密钥大小）+ HMAC-SHA2（加密然后MAC）&lt;/p&gt;&lt;p&gt;AES-CBC（无论密钥大小）+ HMAC-SHA2（加密然后MAC）&lt;/p&gt;&lt;p&gt;如果您想使用其他内容，请询问密码学家。如果您没有密码学家，请雇用一名。除非你的团队中有一个加密专家，否则不要试图加密太多。&lt;/p&gt;&lt;p&gt;即便如此，还请谨慎行事。&lt;/p&gt;&lt;p&gt;128位或256位都可以，只要您使用此列表中的一个选项。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●对称密钥认证&lt;/b&gt;&lt;/p&gt;&lt;p&gt;将HMAC与SHA2族哈希函数一起使用，密钥大小等于哈希函数大小。&lt;/p&gt;&lt;p&gt;这里有很多不错的选择。只需确保您使用至少224位密钥用于SHA-224。&lt;/p&gt;&lt;p&gt;更重要的是，不要使用哈希函数设计自己的消息身份验证协议。去使用HMAC。&lt;/p&gt;&lt;p&gt;如果您的对称加密包括Poly1305身份验证，这是很好的，但它需要个专家小心使用它的安全性。除非你是专家，否则不要单独使用Poly1305。&lt;/p&gt;&lt;p&gt;如果算法合理，224位，256位，384位，512位都是很好的密钥大小。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●特定协议的建议&lt;/b&gt;HTTPS / TLS&lt;/p&gt;&lt;p&gt;简易模式：使用Mozilla的服务器端TLS配置生成器。&lt;/p&gt;&lt;p&gt;复杂模式：仔细构建您的密码套件，包括ECDHE，CHACHA20-POLY1305和AES-GCM，然后使用Qualys SSL Labs等工具验证您的配置。&lt;/p&gt;&lt;p&gt;更重要的是，如果您能提供帮助，请尝试仅支持TLS 1.2或更新版本。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●&lt;/b&gt;SSH&lt;/p&gt;&lt;p&gt;简易模式：遵循Mozilla的OpenSSH服务器配置指南。&lt;/p&gt;&lt;p&gt;此外，请确保您使用的是Ed25519密钥。您可以通过将-t ed25519传递给ssh-keygen来完成此操作。&lt;/p&gt;&lt;p&gt;&lt;b&gt;●&lt;/b&gt;VPN&lt;/p&gt;&lt;p&gt;只需使用WireGuard。&lt;/p&gt;&lt;p&gt;如果您被迫使用OpenVPN，可以遵循一些步骤来强化您的OpenVPN配置。只要知道，一般来说，OpenVPN的默认设置对安全性来说太糟糕了。例如，默认加密方法是Blowfish。&lt;/p&gt;&lt;p&gt;WireGuard在2019年领先于任何其他VPN软件。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485089%26idx%3D1%26sn%3D9fede85bdc362167c54d729f554e2953%26chksm%3Dfcdc7900cbabf01667ae659b4899cce76a32d1e0482fb244db6fc6a46f9be63e2b3c93bb05c7%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2019年密钥大小和加密算法指南&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68999193</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>第七届密文计算与同态加密应用国际会议通知</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68998641.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68998641&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;        第七届密文计算与同态加密应用国际会议，作为2019年CCS的子会议在11月11号伦敦召开。会议现在开始征文，主题涉及到密文计算以及同态加密的各个领域。&lt;/p&gt;&lt;p&gt;▼&lt;/p&gt;&lt;p&gt;&lt;b&gt;SCOPE&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Secure computation is becoming a key feature of future information systems. Distributed network applications and cloud architectures are at danger because lots of personal consumer data is aggregated in all kinds of formats and for various purposes. Industry and consumer electronics companies are facing massive threats like theft of intellectual property and industrial espionage. Public infrastructure has to be secured against  sabotage and manipulation. A possible solution is encrypted computing: Data can be processed on remote, possibly insecure resources, while program code and data is encrypted all the time. This allows to outsource the computation of confidential information independently from the trustworthiness or the security level of the remote system. The technologies and techniques discussed in this workshop are a key to extend the range of applications that can be securely outsourced.&lt;/p&gt;&lt;p&gt;The goal of the workshop is to bring together researchers with practitioners and industry to present, discuss and to share the latest progress in the field. We want to exchange ideas that address real-world problems with practical approaches and solutions.&lt;/p&gt;&lt;p&gt;▼&lt;/p&gt;&lt;p&gt;&lt;b&gt;TOPICS&lt;/b&gt;&lt;/p&gt;&lt;p&gt;· Software architectures for encrypted applications&lt;/p&gt;&lt;p&gt;· Platform and system integration for encrypted applications&lt;/p&gt;&lt;p&gt;· Algorithmic primitives for encrypted applications&lt;/p&gt;&lt;p&gt;· Hybrid (partly encrypted) applications&lt;/p&gt;&lt;p&gt;· Hardware implementations of encrypted computing&lt;/p&gt;&lt;p&gt;· Implementation of homomorphic encryption schemes and multiparty computation&lt;/p&gt;&lt;p&gt;· Practical performance evaluations of encrypted computing&lt;/p&gt;&lt;p&gt;· Practical aspects of functional encryption&lt;/p&gt;&lt;p&gt;· Privacy-preserving set operations&lt;/p&gt;&lt;p&gt;· Secure information sharing&lt;/p&gt;&lt;p&gt;· Circuit transformation of algorithms&lt;/p&gt;&lt;p&gt;· Obfuscation techniques&lt;/p&gt;&lt;p&gt;· Encrypted search schemes&lt;/p&gt;&lt;p&gt;· Encrypted e-payment solutions&lt;/p&gt;&lt;p&gt;· Encrypted financial transactions&lt;/p&gt;&lt;p&gt;· Encrypted applications in bio-informatics&lt;/p&gt;&lt;p&gt;· Encrypted computing for social good&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;AUDIENCE&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Professionals, researchers and practitioners in the area of computer security and applied cryptography with an interest in practical applications of homomorphic encryption, encrypted computing, functional encryption and secure function evaluation, private information retrieval and searchable encryption.&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;DATES&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Submission Deadline: &lt;b&gt;Aug 1, 2019, 23:59:59 PDT&lt;/b&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;Acceptance Notice: Aug. 22, 2019&lt;/p&gt;&lt;p&gt;Camera Ready Due: Aug. 29, 2019&lt;/p&gt;&lt;p&gt;Workshop: Nov. 11, 2019&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;SUBMISSION&lt;/b&gt;&lt;/p&gt;&lt;p&gt;A paper submitted to WAHC must be written in English and be anonymous, with no author names, affiliations, acknowledgements, or any identifying citations. It should begin with a title and a short abstract. Submissions must be single PDF files, no more than 12 pages long in double-column ACM format (the sigconf template from &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.acm.org/publications/proceedings-template&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;acm.org/publications/pr&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;oceedings-template&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;, with a simpler version at &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/acmccs/format&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/acmccs/forma&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;), &lt;b&gt;including&lt;/b&gt; references and appendices. Authors should not change the font or the margins of the ACM format. Submissions not following the required format may be rejected without review. We also encourage authors to submit Demos which are limited to 6 pages and feature an oral presentation with an extensive code review. Authors are invited to submit their work via the HotCRP submission server.&lt;/p&gt;&lt;p&gt;Proceedings of the workshop will be published by ACM on a CD, available to the workshop attendees. Papers will be included in the ACM Digital Library, with a specific ISBN.&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;REGISTRATION&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Registration is through CCS.&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;PROGRAM&lt;/b&gt;&lt;/p&gt;&lt;p&gt;TBD.&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;ORGANIZING COMMITTEE&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Michael Brenner, U Hannover, Germany&lt;/p&gt;&lt;p&gt;Tancrède Lepoint, Google, USA&lt;/p&gt;&lt;p&gt;Kurt Rohloff, NJIT and Duality Technologies, USA&lt;/p&gt;&lt;p&gt;&lt;b&gt;▼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;PROGRAM COMMITTEE&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Carsten Baum, Bar Ilan University, Israel&lt;/p&gt;&lt;p&gt;Fabrice Benhamouda, IBM Research, USA&lt;/p&gt;&lt;p&gt;Fabian Boemer, Intel, USA&lt;/p&gt;&lt;p&gt;Joppe W. Bos, NXP, Belgium&lt;/p&gt;&lt;p&gt;Sergiu Carpov, CEA, France&lt;/p&gt;&lt;p&gt;Yilei Chen, Visa Research, USA&lt;/p&gt;&lt;p&gt;Jung Hee Cheon, SNU, South Korea&lt;/p&gt;&lt;p&gt;Seung Geol Choi, US Naval Academy, USA&lt;/p&gt;&lt;p&gt;Geoffroy Couteau, KIT, Germany&lt;/p&gt;&lt;p&gt;Wei Dai, Microsoft Research, USA&lt;/p&gt;&lt;p&gt;Mamadou H. Diallo, US Navy, USA&lt;/p&gt;&lt;p&gt;Dario Fiore, IMDEA, Spain&lt;/p&gt;&lt;p&gt;Mariya Georgieva, EPFL and Inpher, Switzerland&lt;/p&gt;&lt;p&gt;Sergey Gorbunov, University of Waterloo, Canada&lt;/p&gt;&lt;p&gt;Debayan Gupta, MIT, USA&lt;/p&gt;&lt;p&gt;Kim Laine, Microsoft Research, USA&lt;/p&gt;&lt;p&gt;Peeter Laud, Cybernetica, Estonia&lt;/p&gt;&lt;p&gt;Changmin Lee, ENS Lyon, France&lt;/p&gt;&lt;p&gt;Emmanuela Orsini, KU Leuven, Belgium&lt;/p&gt;&lt;p&gt;Benny Pinkas, Bar Ilan University, Israel&lt;/p&gt;&lt;p&gt;Rachel Player, RHUL, UK&lt;/p&gt;&lt;p&gt;Yuriy Polyakov, NJIT, USA&lt;/p&gt;&lt;p&gt;Thomas Prest, PQShield Ltd., UK&lt;/p&gt;&lt;p&gt;Peter Rindal, Visa Research, USA&lt;/p&gt;&lt;p&gt;Peter Scholl, Aarhus, Denmark&lt;/p&gt;&lt;p&gt;Karn Seth, Google Inc., USA&lt;/p&gt;&lt;p&gt;Mehdi Tibouchi, NTT, Japan&lt;/p&gt;&lt;p&gt;Frederik Vercauteren, KU Leuven, Belgium&lt;/p&gt;&lt;p&gt;Srinivas Vivek, IIIT Bangalore, India&lt;/p&gt;&lt;p&gt;Adrian Waller, Thales, UK&lt;/p&gt;&lt;p&gt;Hayato Yamana, Waseda University, Japan&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485084%26idx%3D1%26sn%3D52e5a52390393c20184fec7d871efa67%26chksm%3Dfcdc793dcbabf02b71e09e5640bbfb9444f239b92fbcec385b14a8721cb99db8c529b29430a7%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;第七届密文计算与同态加密应用国际会议通知&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68998641</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>以太坊钱包弱密钥的危险-2</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68998327.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68998327&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;以太币的整理，以太币的去向&lt;/b&gt;&lt;/p&gt;&lt;p&gt;贝德纳雷克试图把一美元的以太币存入一个弱密钥地址中，在此之前窃贼已经把这个地址清空了。几秒钟之内，它就被转到了强盗的账户上。贝德纳雷克随后尝试将一美元放入一个以前未使用过的新的弱密钥地址中，它也在几秒钟内被清空。这一次转移到一个只有价值几千美元的以太坊账户中，但贝德纳雷克看到，在以太坊区块链上还未确定的交易中，有盗贼试图窃取它。盗贼们似乎有一个庞大的预先生成的钥匙清单，并且正在以非人的、自动的速度扫描它们。&lt;/p&gt;&lt;p&gt;事实上，当研究人员查看区块链强盗在以太坊分类账上的记录时，它在过去三年中已经从数千个地址中窃取了以太坊，而没有任何资金外流动。&lt;/p&gt;&lt;p&gt;在2018年1月以太坊汇率达到顶峰时，该强盗的账户持有38,000以太，当时价值超过5400万美元。&lt;/p&gt;&lt;p&gt;从那时起，以太坊的价值一落千丈，将区块链盗贼的价值降低了约85％。&lt;/p&gt;&lt;p&gt;“你不为他感到难过吗？”贝德纳瑞克笑着说。“你这里有个小偷，他积累了这笔财富，然后在市场崩溃时失去了一切。”&lt;/p&gt;&lt;p&gt;尽管追踪了这些转移，贝德纳雷克并不真正知道谁可能是区块链盗贼。“如果是像朝鲜这样的国家的人，我也不会感到惊讶，但这只是猜测，”他说。他指的是朝鲜政府最近几年以密码货币交易所和其他受害者为目标，窃取价值5亿美元以上的密码货币。&lt;/p&gt;&lt;p&gt;&lt;b&gt;弱化的密钥&lt;/b&gt;&lt;/p&gt;&lt;p&gt;贝德那雷克也无法识别出产生弱密钥的错误或损坏的钱包。相反，他只能看到弱密钥创造和由此而来的盗窃案的证据。他说：“我们可以看到人们被抢劫，但我们不能说哪个钱包是罪魁祸首。”特别是对区块链盗贼来说，目前还不清楚简单的、薄弱的钥匙盗窃案是否占他们被盗财富的绝大部分。窃贼还可以使用其他的技巧，比如猜测“大脑钱包”的密码-用可记忆的单词来保护的地址，这些词比完全随机的密钥更容易被暴力强制使用。一组安全研究人员在2017年发现了2846枚比特币被偷的证据，按目前的汇率计算，盗取的比特币价值超过1700万美元。2015年晚些时候，一次“以太”脑钱包失窃案中，40，000起以太失窃，几乎和这位区块链盗贼造成的后果一样大。&lt;/p&gt;&lt;p&gt;ISE尚未成功地在最初的比特币区块链上复制其实验。但贝德纳雷克确实对大约100个薄弱的比特币密钥进行了一些抽查，发现相应钱包的内容也都被偷了，尽管没有一条被他们认出的明显的大盗拿走-或许有证据表明，相对于以太坊，针对比特币的窃贼之间的竞争更加激烈、更加分散。&lt;/p&gt;&lt;p&gt;贝德纳雷克认为，ISE的以此类推的教训是，对钱包开发人员来说，要仔细审核他们的代码，找出任何可能截断密钥并使其易受攻击的漏洞。用户应该注意他们选择的钱包。贝德纳雷克说：“你不能打电话给服务台，让他们撤销一笔交易。当交易结束时，它就永远消失了。”“人们应该使用可信赖的钱包并从可靠的来源下载。”&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485080%26idx%3D1%26sn%3D5c30d2d6cada1e647db9f2d5e617b336%26chksm%3Dfcdc7939cbabf02f7efc0cd5b5871659c25bd6e050d634ac9ff543d2b7ffe09a2a3f085d3419%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;以太坊钱包弱密钥的危险-2&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68998327</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>以太坊钱包弱密钥的危险-1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68997860.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68997860&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;去年夏天，阿德里安·贝德纳雷克正在考虑如何窃取以太坊加密货币。他是一名安全顾问; 当时，他正在为受盗窃困扰的加密货币行业的客户工作。特别的是，贝德纳雷克是因为其臭名昭著的复杂性和这些移动部件可能造成的潜在安全漏洞而被吸引到了以太坊。&lt;/p&gt;&lt;p&gt;但他首先提出了一个最简单的问题：如果一个以太坊所有者用一个私钥存储他们的数字货币-这是一个无法猜测的78位数字串，用来保护存放在某个地址上的货币-那么私钥值为1的数字会怎样呢？&lt;/p&gt;&lt;p&gt;让贝德纳雷克感到惊讶的是，他发现，根据记录所有以太交易的区块链，简单私钥实际上曾经持有货币。但是这些钱已经从以太钱包里取出来了-几乎可以肯定是一个小偷在贝德纳瑞克之前很久就想猜出一把私钥了。毕竟，就像比特币和其他加密货币一样，如果有人知道以太坊私钥，他们可以使用它导出密钥，解锁相关公共地址。私钥允许他们把钱转移到那个地址，就好像他们是合法的主人一样。&lt;/p&gt;&lt;p&gt;最初的发现激起了贝德纳瑞克的好奇心。于是他又尝试了几个连续的私钥：2，3，4，然后又试了几十个，所有的都被同样地清空了。因此，他和安全咨询公司Independent Security Evaluators的同事写了一些代码，启动了一些云服务器，并尝试了几十亿次。&lt;/p&gt;&lt;p&gt;在这一过程中，正如他们在周二发表的一篇论文中所详述的那样，研究人员不仅发现，加密货币用户在过去几年里用数百个容易猜测的私钥存储了他们的数字财富，而且还发现了他们所谓的“区块链盗贼”。一个以太坊帐户似乎用同样的技巧盗走了45，000以太坊的财富-这个价值一度超过5，000万美元。&lt;/p&gt;&lt;p&gt;贝德纳雷克说：“他做的事情和我们做的一样，但他超越了我们。”“不管这个人或这些家伙是谁，他们都在花费大量的计算时间去寻找新钱包，观察每一笔交易，看看他们是否掌握了钥匙。&lt;/p&gt;&lt;p&gt;&lt;b&gt;梳理数量犹如沙滩&lt;/b&gt;&lt;/p&gt;&lt;p&gt;为了解释区块链盗匪是如何工作的，有助于理解猜测随机生成的以太坊私钥的几率为1/115 *1075（或者，作为一个分数：1/2 256。）这个分母大约是宇宙中原子的数量。贝德纳瑞克将识别随机以太坊钥匙的任务与选择沙滩上的沙粒进行比较，然后要求朋友在“十亿亿”海滩中找到相同的颗粒。&lt;/p&gt;&lt;p&gt;但是，当他看着以太坊区块链时，贝德纳雷克可以看到证据表明，有些人把以太坊储存在简单得多、更容易猜测的公钥地址上。他说，这一错误很可能是因为以太坊钱包因为编码错误而切断了预期长度的一小部分密钥，或者让没有经验的用户选择自己的密钥，甚至包括恶意代码，破坏了随机化过程，让钱包的开发者很容易猜到密钥。&lt;/p&gt;&lt;p&gt;贝德纳雷克和他的ISE同事最终扫描了340亿个区块链地址，找到了这类弱密钥。他们称这一过程为以太坊地址梳理，就像海滩上的梳理一样，但在以太巨大的熵中有更多可猜测的沙粒。他们最终发现了732个可以猜测的密钥，它们一度持有以太币，但后来被清空。虽然其中一些转让无疑是合法的，但贝德纳雷克猜测，自2015年以太币推出以来，732仍只是以太被盗的弱密钥总数的一小部分。&lt;/p&gt;&lt;p&gt;与此同时，在这些空着的地址中，贝德纳雷克很感兴趣地看到12个似乎是被同一个强盗清空的。他们被转到一个帐户中，现在拥有45，000以太的惊人群体。按今天的汇率计算，价值770万美元。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485076%26idx%3D1%26sn%3D8e1f58b54ca40d4c39144cbd378e28c1%26chksm%3Dfcdc7935cbabf02372676df3e32c404bc863842f39e09a8bfa2a4fdeb3a6e09dba7ca00014fe%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;以太坊钱包弱密钥的危险-1&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68997860</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019年美密会接受的论文</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68997480.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68997480&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Accepted Papers&lt;/b&gt;&lt;/p&gt;&lt;p&gt;In order of submission:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;How to Record Quantum Queries, and Applications to Quantum Indifferentiability&lt;/b&gt;&lt;br/&gt;Mark Zhandry (Princeton University &amp;amp; NTT Research)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Efficient Collision Attack Frameworks for RIPEMD-160&lt;/b&gt;&lt;br/&gt;Fukang Liu (East China Normal University, Shanghai, China; University of Hyogo, Hyogo 650-0047, Japan), Christoph Dobraunig (Graz University of Technology, Austria; Radboud University, Nijmegen, The Netherlands), Florian Mendel (Infineon Technologies AG, Germany), Takanori Isobe (NICT Japan; University of Hyogo, Hyogo 650-0047, Japan), Gaoli Wang (East China Normal University, Shanghai, China;), Zhenfu Cao (East China Normal University, Shanghai, China; )&lt;/li&gt;&lt;li&gt;&lt;b&gt;Statistical Zeroizing Attack: Cryptanalysis of Candidates of BP Obfuscation over GGH15 Multilinear Map&lt;/b&gt;&lt;br/&gt;Jung Hee Cheon (Research Institute of Mathematics, Seoul National University, Seoul, Republic of Korea), Wonhee Cho (Seoul National University, Seoul, Republic of Korea), Minki Hhan (Seoul National University, Seoul, Republic of Korea), Jiseung Kim (Seoul National University, Seoul, Republic of Korea), Changmin Lee (ENS de Lyon, Laboratoire LIP (U. Lyon, CNRS, ENSL, INRIA, UCBL), France )&lt;/li&gt;&lt;li&gt;&lt;b&gt;Leakage Certification Revisited: Bounding Model Errors in Side-Channel Security Evaluations&lt;/b&gt;&lt;br/&gt;Olivier Bronchain ( Université catholique de Louvain), Julien M. Hendrickx (Boston University and Université catholique de Louvain), Clément Massart ( Université catholique de Louvain), Alex Olshevsky (Boston University), François-Xavier Standaert ( Université catholique de Louvain)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Tight Leakage-Resilient CCA-Security from Quasi-Adaptive Hash Proof System&lt;/b&gt;&lt;br/&gt;Shuai Han (Shanghai Jiao Tong University), Shengli Liu (Shanghai Jiao Tong University), Lin Lyu (Shanghai Jiao Tong University), Dawu Gu (Shanghai Jiao Tong University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Improving Attacks on Round-Reduced Speck32/64 Using Deep Learning&lt;/b&gt;&lt;br/&gt;Aron Gohr (BSI)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adaptively Secure and Succinct Functional Encryption: Improving Security and Efficiency, Simultaneously&lt;/b&gt;&lt;br/&gt;Fuyuki Kitagawa (NTT Secure Platform Laboratories), Ryo Nishimaki (NTT Secure Platform Laboratories), Keisuke Tanaka (Tokyo Institute of Technology), Takashi Yamakawa (NTT Secure Platform Laboratories)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Data-Independent Memory Hard Functions: New Attacks and Stronger Constructions&lt;/b&gt;&lt;br/&gt;Jeremiah Blocki (Purdue University), Ben Harsha (Purdue University), Siteng Kang (Penn State), Seunghoon Lee (Purdue University), Lu Xing (Purdue University), Samson Zhou (Indiana University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Quantum cryptanalysis in the RAM model: Claw-finding attacks on SIKE&lt;/b&gt;&lt;br/&gt;Samuel Jaques (University of Waterloo), John M. Schanck (University of Waterloo)&lt;/li&gt;&lt;li&gt;&lt;b&gt;On the Shortness of Vectors to be found by the Ideal-SVP Quantum Algorithm&lt;/b&gt;&lt;br/&gt;Léo Ducas (CWI, Amsterdam, The Netherlands) Maxime Plançon (ENS Paris-Saclay) Benjamin Wesolowski (CWI, Amsterdam, The Netherlands)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Leakage-Resilient Secret Sharing and Applications&lt;/b&gt;&lt;br/&gt;Akshayaram Srinivasan (UC Berkeley), Prashant Nalini Vasudevan (UC Berkeley)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Watermarking Public-Key Cryptographic Primitives&lt;/b&gt;&lt;br/&gt;Rishab Goyal (University of Texas at Austin), Sam Kim (Stanford University), Nathan Manohar (UCLA), Brent Waters (University of Texas at Austin and NTT Research), David J. Wu (University of Virginia)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Two-Party ECDSA from Hash Proof Systems and Efficient Instantiations&lt;/b&gt;&lt;br/&gt;Guilhem Castagnos (Université de Bordeaux), Dario Catalano (Università di Catania, Italy), Fabien Laguillaumie (Université Claude Bernard Lyon 1/LIP, France), Federico Savasta (Università di Catania, Italy / Scuola Superiore di Catania, Italy), Ida Tucker (Ens de Lyon/LIP, France)&lt;/li&gt;&lt;li&gt;&lt;b&gt;iO Without Multilinear Maps: New Paradigms via Low-Degree Weak Pseudorandom Generators and Security Amplification&lt;/b&gt;&lt;br/&gt;Prabhanjan Ananth (MIT), Aayush Jain (UCLA), Huijia Lin (University of Washington), Christian Matt (Concordium), Amit Sahai (UCLA)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Lattice-based Zero-Knowledge Proofs: New Techniques for Shorter and Faster Constructions and Applications&lt;/b&gt;&lt;br/&gt;Muhammed F. Esgin (Monash University), Ron Steinfeld (Monash University), Joseph K. Liu (Monash University), Dongxi Liu (Data61, CSIRO)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Adaptively Secure MPC with Sublinear Communication Complexity&lt;/b&gt;&lt;br/&gt;Ran Cohen (Boston University and Northeastern University), abhi shelat (Northeastern University), Daniel Wichs (Northeastern University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Correlation of Quadratic Boolean Functions: Cryptanalysis of All Versions of Full MORUS&lt;/b&gt;&lt;br/&gt;Danping Shi (DCS Center, Chinese Academy of Sciences and IIE, Chinese Academy of Sciences), Siwei Sun (DCS Center, Chinese Academy of Sciences and IIE, Chinese Academy of Sciences), Yu Sasaki (NTT Secure Platform Laboratories, Japan), Chaoyun Li (imec-COSIC, Dept. Electrical Engineering (ESAT), KU Leuven, Belgium), Lei Hu (DCS Center, Chinese Academy of Sciences and IIE, Chinese Academy of Sciences)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Watermarking PRFs from Lattices: Stronger Security via Extractable PRFs&lt;/b&gt;&lt;br/&gt;Sam Kim (Stanford University), David J. Wu (University of Virginia)&lt;/li&gt;&lt;li&gt;&lt;b&gt;The Communication Complexity of Threshold Private Set Intersection&lt;/b&gt;&lt;br/&gt;Satrajit Ghosh (Aarhus University), Mark Simkin (Aarhus University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Match Me if You Can: Matchmaking Encryption and its Applications&lt;/b&gt;&lt;br/&gt;Giuseppe Ateniese (Stevens Institute of Technology, USA), Danilo Francati (Stevens Institute of Technology, USA), David Nunez (NuCypher), Daniele Venturi (Sapienza University of Rome, Italy)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Scalable Zero Knowledge with no Trusted Setup&lt;/b&gt;&lt;br/&gt;Eli Ben-Sasson (Technion), Iddo Bentov (Cornell Tech), Yinon Horesh (Technion), Michael Riabzev (Technion)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Seedless Fruit is the Sweetest: Random Number Generation, Revisited&lt;/b&gt;&lt;br/&gt;Sandro Coretti (IOHK), Yevgeniy Dodis (New York University), Harish Karthikeyan (New York Univserity), Stefano Tessaro (University of Washington)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Revisiting Post-Quantum Fiat-Shamir&lt;/b&gt;&lt;br/&gt;Qipeng Liu (Princeton University), Mark Zhandry (Princeton University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Broadcast and Trace with N^\epsilon Ciphertext Size from Standard Assumptions&lt;/b&gt;&lt;br/&gt;Rishab Goyal (UT Austin), Willy Quach (Northeastern University), Brent Waters (UT Austin and NTT Research), Daniel Wichs (Northeastern University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Exploring Constructions of Compact NIZKs from Various Assumptions&lt;/b&gt;&lt;br/&gt;Shuichi Katsumata (AIST), Ryo Nishimaki (NTT Secure Platform Laboratories), Shota Yamada (AIST), Takashi Yamakawa (NTT Secure Platform Laboratories)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Highly Efficient Key Exchange Protocols with Optimal Tightness&lt;/b&gt;&lt;br/&gt;Katriel Cohn-Gordon (University of Oxford), Cas Cremers (CISPA Helmholtz Center for Information Security), Kristian Gjøsteen (NTNU - Norwegian University of Science and Technology), Håkon Jacobsen (McMaster University, Hamilton), Tibor Jager (Paderborn University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Communication-Efficient Unconditional MPC with Guaranteed Output Delivery&lt;/b&gt;&lt;br/&gt;Vipul Goyal (Carnegie Mellon University), Yanyi Liu (Tsinghua University), Yifan Song (Carnegie Mellon University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Quantum Indistinguishability of Random Sponges&lt;/b&gt;&lt;br/&gt;Jan Czajkowski (QuSoft, University of Amsterdam), Andreas Hülsing (Technische Universiteit Eindhoven), Christian Schaffner (QuSoft, University of Amsterdam)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Simultaneous Amplification: The Case of Non-Interactive Zero-Knowledge&lt;/b&gt;&lt;br/&gt;Vipul Goyal (CMU), Aayush Jain (UCLA), Amit Sahai (UCLA)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Libra: Succinct Zero-Knowledge Proofs with Optimal Prover Computation&lt;/b&gt;&lt;br/&gt;Tiancheng Xie (UC Berkeley), Jiaheng Zhang (UC Berkeley), Yupeng Zhang (UC Berkeley and Texas A&amp;amp;M), Charalampos Papamanthou (University of Maryland), Dawn Song (UC Berkeley)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Stronger leakage-resilient and non-malleable secret sharing schemes for general access structures&lt;/b&gt;&lt;br/&gt;Divesh Aggarwal (National University of Singapore), Ivan Damgård (Aarhus University), Jesper Buus Nielsen (Aarhus University), Maciej Obremski (National University of Singapore), Erick Purwanto (National University of Singapore), João L. Ribeiro (Imperial College London), Mark Simkin (Aarhus University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Security of the Fiat-Shamir Transformation in the Quantum Random-Oracle Model&lt;/b&gt;&lt;br/&gt;Jelle Don (CWI), Serge Fehr (CWI &amp;amp; Leiden University), Christian Majenz (University of Amsterdam &amp;amp; ILLC), Christian Schaffner (University of Amsterdam &amp;amp; ILLC)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Non-Interactive Non-Malleability from Quantum Supremacy&lt;/b&gt;&lt;br/&gt;Yael Tauman Kalai (Microsoft Research New England and MIT), Dakshita Khurana (Microsoft Research New England and UIUC)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Communication Lower Bounds for Statistically Secure MPC, with or without Preprocessing&lt;/b&gt;&lt;br/&gt;Ivan Damgård (Aarhus University), Kasper Green Larsen (Aarhus University), Jesper Buus Nielsen (Aarhus University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;The Distinction Between Fixed and Random Generators in Group-Based Assumptions&lt;/b&gt;&lt;br/&gt;James Bartusek (Princeton University), Fermi Ma (Princeton University), Mark Zhandry (Princeton University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Non-Malleable Secret Sharing in the Computational Setting: Adaptive Tampering, Noisy-Leakage Resilience, and Improved Rate&lt;/b&gt;&lt;br/&gt;Antonio Faonio (IMDEA Software Institute), Daniele Venturi (Sapienza, University of Rome)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unifying Leakage Models on a Rényi Day&lt;/b&gt;&lt;br/&gt;Thomas Prest (PQShield), Dahmun Goudarzi (PQShield), Ange Martinelli (Thales), Alain Passelègue (INRIA, ENS Lyon)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Low Memory Attacks against Two-Round Even-Mansour using the 3-XOR Problem&lt;/b&gt;&lt;br/&gt;Gaëtan Leurent (Inria), Ferdinand Sibleyras (Inria)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Cryptographic Sensing&lt;/b&gt;&lt;br/&gt;Yuval Ishai (Technion), Eyal Kushilevitz (Technion), Rafail Ostrovsky (UCLA), Amit Sahai (UCLA)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Fully Secure Attribute-Based Encryption for t-CNF from LWE&lt;/b&gt;&lt;br/&gt;Rotem Tsabary (Weizmann Institute of Science)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Universally Composable Secure Computation with Corrupted Tokens&lt;/b&gt;&lt;br/&gt;Nishanth Chandran (Microsoft Research, India), Wutichai Chongchitmate (Chulalongkorn University, Thailand), Rafail Ostrovsky (UCLA, USA), Ivan Visconti (University of Salerno, Italy)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Non-Malleable Codes for Decision Trees&lt;/b&gt;&lt;br/&gt;Marshall Ball (Columbia University), Siyao Guo (New York University Shanghai), Daniel Wichs (Northeastern University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Non-Uniformly Sound Certificates with Applications to Concurrent Zero-Knowledge&lt;/b&gt;&lt;br/&gt;Cody Freitag (Cornell Tech), Ilan Komargodski (Cornell Tech --&amp;gt; NTT Research), Rafael Pass (Cornell Tech)&lt;/li&gt;&lt;li&gt;&lt;b&gt;On the Plausibility of Fully Homomorphic Encryption for RAMs&lt;/b&gt;&lt;br/&gt;Ariel Hamlin (Department of Computer Science, Northeastern University, Boston, Massachusetts, USA.), Justin Holmgren (Department of Computer Science, Princeton University, Princeton, New Jersey, USA.), Mor Weiss (Department of Computer Science, IDC Herzliya, Herzliya, Israel.), Daniel Wichs (Department of Computer Science, Northeastern University, Boston, Massachusetts, USA.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Attribute Based Encryption (and more) for Nondeterministic Finite Automata from LWE&lt;/b&gt;&lt;br/&gt;Shweta Agrawal (IIT Madras), Monosij Maitra (IIT Madras), Shota Yamada (AIST)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Noninteractive Zero Knowledge for NP from (Plain) Learning With Errors&lt;/b&gt;&lt;br/&gt;Chris Peikert (University of Michigan), Sina Shiehian (University of Michigan)&lt;/li&gt;&lt;li&gt;&lt;b&gt;SpOT-Light: Lightweight Private Set Intersection from Sparse OT Extension&lt;/b&gt;&lt;br/&gt;Benny Pinkas (Bar Ilan University), Mike Rosulek (Oregon State University), Ni Trieu (Oregon State University), Avishay Yanai (Bar Ilan University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Proofs of Replicated Storage Without Timing Assumptions&lt;/b&gt;&lt;br/&gt;Ivan Damgård (Aarhus University), Chaya Ganesh (Aarhus University), Claudio Orlandi (Aarhus University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Memory-Hard Functions from Cryptographic Primitives&lt;/b&gt;&lt;br/&gt;Binyi Chen (UC Santa Barbara), Stefano Tessaro (University of Washington)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unconditionally Secure Computation Against Low-Complexity Leakage&lt;/b&gt;&lt;br/&gt;Andrej Bogdanov (Chinese University of Hong Kong), Yuval Ishai (Technion), Akshayaram Srinivasan (UC Berkeley)&lt;/li&gt;&lt;li&gt;&lt;b&gt;ABE for DFA from k-Lin&lt;/b&gt;&lt;br/&gt;Junqing Gong (CNRS, ENS and PSL), Brent Waters (University of Texas at Austin and NTT Research), Hoeteck Wee (CNRS, ENS and PSL)&lt;/li&gt;&lt;li&gt;&lt;b&gt;New Results on Modular Inversion Hidden Number Problem and Inversive Congruential Generator&lt;/b&gt;&lt;br/&gt;Jun Xu (State Key Laboratory of Information Security, Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China), Santanu Sarkar (Indian Institute of Technology Madras, Chennai, India), Lei Hu (State Key Laboratory of Information Security, Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China), Huaxiong Wang (Division of Mathematical Sciences, School of Physical and Mathematical Sciences, Nanyang Technological University Singapore, Singapore), Yanbin Pan (Key Laboratory of Mathematics Mechanization, NCMIS, Academy of Mathematics and Systems Science, Chinese Academy of Sciences, Beijing, China)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Cryptanalysis of OCB2: Attacks on Authenticity and Confidentiality&lt;/b&gt;&lt;br/&gt;Akiko Inoue (NEC Corporation, Japan), Tetsu Iwata (Nagoya University, Japan), Kazuhiko Minematsu (NEC Corporation, Japan), Bertram Poettering (Royal Holloway, University of London, and IBM Research Zurich)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Explicit Rate-1 Non-malleable Codes for Local Tampering&lt;/b&gt;&lt;br/&gt;Divya Gupta (Microsoft Research), Hemanta K. Maji (Purdue University), Mingyuan Wang (Purdue University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Symmetric Primitives with Structured Secrets&lt;/b&gt;&lt;br/&gt;Navid Alamati (University of Michigan), Hart Montgomery (Fujitsu Labs of America), Sikhar Patranabis (IIT Kharagpur)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Trapdoor Hash Functions and their Applications&lt;/b&gt;&lt;br/&gt;Nico Döttling (CISPA Helmholtz Center), Sanjam Garg (University of California, Berkeley), Yuval Ishai (Technion), Giulio Malavolta (Carnegie Mellon University), Tamer Mour (Weizmann Institute of Science), Rafail Ostrovsky (University of California, Los Angeles)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Nonces are Noticed: AEAD Revisited&lt;/b&gt;&lt;br/&gt;Mihir Bellare (University of California San Diego), Ruth Ng (University of California San Diego), Bjorn Tackmann (IBM)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Homomorphic Time-Lock Puzzles and Applications&lt;/b&gt;&lt;br/&gt;Giulio Malavolta (Carnegie Mellon University), Sri Aravinda Krishnan Thyagarajan (Friedrich-Alexander University Erlangen-Nürnberg )&lt;/li&gt;&lt;li&gt;&lt;b&gt;New Constructions of Reusable Designated-Verifier NIZKs&lt;/b&gt;&lt;br/&gt;Alex Lombardi (MIT), Willy Quach (Northeastern University), Ron D. Rothblum (Technion), Daniel Wichs (Northeastern University), David J. Wu (University of Virginia)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Synchronous, with a Chance of Partition Tolerance&lt;/b&gt;&lt;br/&gt;Yue Guo (Cornell and Thunder Research), Rafael Pass (Cornell and Thunder Research), Elaine Shi (Cornell and Thunder Research)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Quantum security proofs using semi-classical oracles&lt;/b&gt;&lt;br/&gt;Andris Ambainis (University of Latvia), Mike Hamburg (Rambus Security Division), Dominique Unruh (University of Tartu)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Subvector Commitments with Applications to Succinct Arguments&lt;/b&gt;&lt;br/&gt;Russell W. F. Lai (Friedrich-Alexander University Erlangen-Nürnberg), Giulio Malavolta (Carnegie Mellon University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Reusable Non-Interactive Secure Computation&lt;/b&gt;&lt;br/&gt;Melissa Chase (Microsoft Research, Redmond), Yevgeniy Dodis (New York University), Yuval Ishai (Technion), Daniel Kraschewski (TNG Technology Consulting GmbH), Tianren Liu (MIT), Rafail Ostrovsky (UCLA), Vinod Vaikuntanathan (MIT)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Realizing Chosen Ciphertext Security Generically in Attribute-Based Encryption and Predicate Encryption&lt;/b&gt;&lt;br/&gt;Venkata Koppula (Weizmann Institute of Science), Brent Waters (University of Texas at Austin and NTT Research)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Zero-Knowledge Proofs on Secret-Shared Data via Fully Linear PCPs&lt;/b&gt;&lt;br/&gt;Dan Boneh (Stanford University), Elette Boyle (IDC Herzliya), Henry Corrigan-Gibbs (Stanford University), Niv Gilboa (Ben-Gurion University), Yuval Ishai (Technion)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Continuous Space-Bounded Non-Malleable Codes from Stronger Proofs-of-Space&lt;/b&gt;&lt;br/&gt;Binyi Chen (University of California, Santa Barbara), Yilei Chen (VISA Research), Kristina Hostáková (TU Darmstadt), Pratyay Mukherjee (VISA Research)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Efficient Lattice-Based Zero-Knowledge Arguments with Standard Soundness: Construction and Applications&lt;/b&gt;&lt;br/&gt;Rupeng Yang (School of Computer Science and Technology, Shandong University, Jinan, China; Department of Computing,The Hong Kong Polytechnic University, Hong Kong), Man Ho Au (Department of Computing,The Hong Kong Polytechnic University, Hong Kong), Zhenfei Zhang (Algorand, USA), Qiuliang Xu (School of Software, Shandong University, Jinan, China), Zuoxia Yu (Department of Computing,The Hong Kong Polytechnic University, Hong Kong), William Whyte (Qualcomm Technologies Incorporated, USA)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Public-Key Cryptography in the Fine-Grained Setting&lt;/b&gt;&lt;br/&gt;Rio LaVigne (MIT), Andrea Lincoln (MIT), Virginia Vassilevska Williams (MIT)&lt;/li&gt;&lt;li&gt;&lt;b&gt;The Privacy Blanket of the Shuffle Model&lt;/b&gt;&lt;br/&gt;Borja Balle (Independent researcher), James Bell (The Alan Turing Institute), Adria Gascon (The Alan Turing Institute / Warwick University), Kobbi Nissim (Georgetown University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Security in the Presence of Key Reuse: Context-Separable Interfaces and their Applications&lt;/b&gt;&lt;br/&gt;Christopher Patton (University of Florida), Thomas Shrimpton (University of Florida)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Algebraic Techniques for Short(er) Exact Lattice-Based Zero-Knowledge Proofs&lt;/b&gt;&lt;br/&gt;Jonathan Bootle (IBM Research - Zurich), Vadim Lyubashevsky (IBM Research - Zurich), Gregor Seiler (IBM Research - Zurich, ETH Zurich)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Asymmetric Message Franking: Secure Moderation for Metadata-Private End-to-End Encryption&lt;/b&gt;&lt;br/&gt;Nirvan Tyagi (Cornell University), Paul Grubbs (Cornell Tech), Julia Len (Cornell University), Ian Miers (Cornell Tech), Thomas Ristenpart (Cornell Tech)&lt;/li&gt;&lt;li&gt;&lt;b&gt;On Round-Optimal Statistical Zero-Knowledge Arguments&lt;/b&gt;&lt;br/&gt;Nir Bitansky (Tel Aviv University), Omer Paneth (MIT)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CCA Security and Trapdoor Functions via Key-Dependent-Message Security&lt;/b&gt;&lt;br/&gt;Fuyuki Kitagawa (NTT Secure Platform Laboratories), Takahiro Matsuda (National Institute of Advanced Industrial Science and Technology), Keisuke Tanaka (Tokyo Institute of Technology)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Simple Proofs of Space-Time and Rational Proofs of Storage&lt;/b&gt;&lt;br/&gt;Tal Moran (IDC Herzliya), Ilan Orlov (Outbrain)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unifying computational entropies via Kullback-Leibler divergence&lt;/b&gt;&lt;br/&gt;Rohit Agrawal (Harvard University), Yi-Hsiu Chen (Harvard University), Thibaut Horel (Harvard University), Salil Vadhan (Harvard University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Strong Asymmetric PAKE based on Trapdoor CKEM&lt;/b&gt;&lt;br/&gt;Tatiana Bradley (University of California, Irvine), Stanislaw Jarecki (University of California, Irvine), Jiayu Xu (University of California, Irvine)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Batching Techniques for Accumulators with Applications to IOPs and Stateless Blockchains&lt;/b&gt;&lt;br/&gt;Dan Boneh (Stanford University), Benedikt Bünz (Stanford University), Ben Fisch (Stanford University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;How to Build Pseudorandom Functions From Public Random Permutations&lt;/b&gt;&lt;br/&gt;Yu Long Chen (imec-COSIC, KU Leuven), Eran Lambooij (University of Haifa), Bart Mennink (Digital Security Group, Radboud University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Efficient Pseudorandom Correlation Generators: Silent OT Extension and More&lt;/b&gt;&lt;br/&gt;Elette Boyle (IDC Herzliya), Geoffroy Couteau (Karlsruhe Institute of Technology), Niv Gilboa (Ben-Gurion University of the Negev), Yuval Ishai (Technion), Lisa Kohl (Karlsruhe Institute of Technology), Peter Scholl (Aarhus University)&lt;/li&gt;&lt;li&gt;&lt;b&gt;It wasn&amp;#39;t me! Repudiability and Unclaimability of Ring Signatures&lt;/b&gt;&lt;br/&gt;Sunoo Park (MIT and Harvard), Adam Sealfon &lt;/li&gt;&lt;/ol&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485070%26idx%3D1%26sn%3D0caeb1e9b261bfe4787da1b80a4449fb%26chksm%3Dfcdc792fcbabf0394374903fd5bc5f99eb44962f8739ffa3d03a16dae5fc5dce715d341a933f%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2019年美密会接受的论文&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;br/&gt;&lt;br/&gt; &lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68997480</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>数据加密算法的性能分析-3</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68996523.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68996523&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;b&gt;本文比较了四种常用的加密算法的性能:DES、3DES、Blowfish和AES (Rijndael)。通过运行几种加密设置来处理不同大小的数据块，以评估算法的加密/解密速度，从而进行了比较。使用c#语言进行了模拟。&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;关键词:加密算法，性能，分析，AES, DES, Blowfish, TripleDES，密码学&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;04模拟设置&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如上所述，此模拟使用.NET环境中提供的类来模拟DES，3DES和AES（Rijndael）的性能。这里使用的Blowfish实现是由Markus Hahn 以&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//Blowfish.NET&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;Blowfish.NET&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;名称提供的实现。此实现经过全面测试并经过优化，可为算法提供最佳性能。&lt;/p&gt;&lt;p&gt;该实现使用System.Security.Cryptography中提供的DES，3DES和Rijndael的托管包装器，它包装了CryptoAPI中可用的非托管实现。它们分别是DESCryptoServiceProvider，TripleDESCryptoServiceProvider和RijndaelManaged。&lt;/p&gt;&lt;p&gt;在System.Security.Cryptography中只有一个Rijndael的纯粹的管理实现，它在测试中使用。&lt;/p&gt;&lt;p&gt;表4显示了此实验中使用的算法设置。这些设置用于将初始地结果与从Priya Dhawan获得的结果进行比较。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1201&quot; data-rawheight=&quot;391&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1201&quot; data-original=&quot;https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1201&quot; data-rawheight=&quot;391&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1201&quot; data-original=&quot;https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg&quot;/&gt;&lt;figcaption&gt;表4算法设置&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;3DES和AES支持其他设置，但这些设置代表了它们可以提供的最大安全设置。更长的密钥长度意味着必须付出更多努力来破坏加密的数据安全性。&lt;/p&gt;&lt;p&gt;由于评估测试旨在评估使用分组密码时的结果，由于测试机器（1 GB）的内存限制，测试会将负载数据块分成更小的大小。负载数据分为数据块和它们是使用System.Security.Cryptography命名空间中提供的RandomNumberGenerator类创建的。 &lt;/p&gt;&lt;p&gt;&lt;b&gt;05性能评估方法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本节描述了评估比较算法性能的技术和仿真选择。除此之外，本节还将讨论方法论的相关参数，如系统参数、实验因素、实验初始设置等。&lt;/p&gt;&lt;p&gt;&lt;b&gt;5.1系统参数&lt;/b&gt;&lt;/p&gt;&lt;p&gt;使用3500+ AMD 64位处理器和1GB RAM进行实验。使用.NET 2003 visual studio中的默认设置为C＃windows应用程序编译模拟程序。实验将进行几次，以确保结果一致并且可用于比较不同的算法。&lt;/p&gt;&lt;p&gt;&lt;b&gt;5.2实验因素&lt;/b&gt;&lt;/p&gt;&lt;p&gt;为了评估比较算法的性能，必须确定算法需要测试的参数。由于每种算法的安全特性作为其抵御密码攻击的优势已经为人所知并进行了讨论。这里选择的决定性能的因素是算法加密/解密各种大小数据块的速度。&lt;/p&gt;&lt;p&gt;&lt;b&gt;5.3模拟程序&lt;/b&gt;&lt;/p&gt;&lt;p&gt;通过考虑不同大小的数据块（0.5MB到20MB），根据加密和解密数据块所需的时间来评估算法。所有实施都是精确的，以确保结果相对公平和准确。&lt;/p&gt;&lt;p&gt;仿真程序（如下图7所示）接受三个输入：算法，密码模式和数据块大小。成功执行后，将显示生成，加密和解密的数据。&lt;/p&gt;&lt;p&gt;请注意，由于大多数字符没有字符表示，因此无法显示。在加密/解密过程成功之后进行另一个比较，通过比较生成的数据(原始数据块)和从该过程生成的解密数据块，确保以正确的方式处理所有数据。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;553&quot; data-rawheight=&quot;347&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;553&quot; data-original=&quot;https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;553&quot; data-rawheight=&quot;347&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;553&quot; data-original=&quot;https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg&quot;/&gt;&lt;figcaption&gt;图7：模拟程序的GUI&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;06模拟结果&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本节将展示使用不同数据负载运行仿真程序得到的结果。结果表明，改变数据负载对各算法的影响以及使用的密码模式(加密模式)的影响。&lt;/p&gt;&lt;p&gt;&lt;b&gt;6.1 ECB的性能结果&lt;/b&gt;&lt;/p&gt;&lt;p&gt;第一组实验使用ECB模式进行，结果显示在下面的图8中。结果表明，Blowfish算法在处理时间方面优于其他算法。它还表明，当数据块大小相对较大时，AES会消耗更多资源。&lt;/p&gt;&lt;p&gt;此处显示的结果与Priya Dhawan获得的结果不同，因为此处使用的数据块大小远大于其实验中使用的数据块大小。&lt;/p&gt;&lt;p&gt;这里可以注意到另一点，3DES因其三相加密特性而需要比DES更多的时间。Blowfish虽然有一个长密钥（448位），但表现优于其他加密算法。众所周知，DES和3DES在其安全机制中有蠕虫漏洞，Blowfish和AES，到目前为止还没有。&lt;/p&gt;&lt;p&gt;这些结果与计算机上的其他负载无关，因为每次单个实验都进行了多次，导致几乎相同的预期结果。.NET中的DES，3DES和AES实现被认为是市场上最好的。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;345&quot; data-rawheight=&quot;260&quot; class=&quot;content_image&quot; width=&quot;345&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;345&quot; data-rawheight=&quot;260&quot; class=&quot;content_image lazy&quot; width=&quot;345&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg&quot;/&gt;&lt;figcaption&gt;图8 ECB模式的性能结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;6.2 CBC的性能结果&lt;/b&gt;&lt;/p&gt;&lt;p&gt;正如预期的那样，由于其密钥链特性，CBC需要比ECB更多的处理时间。图9中显示的结果还表明，对于许多应用而言，添加的额外时间并不重要，因为已知CBC在保护方面比ECB好得多。&lt;/p&gt;&lt;p&gt;肉眼很难看出两种模式之间的差异，结果显示ECB和CBC之间的平均差异为0.059896秒，相对较小。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;389&quot; data-rawheight=&quot;292&quot; class=&quot;content_image&quot; width=&quot;389&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;389&quot; data-rawheight=&quot;292&quot; class=&quot;content_image lazy&quot; width=&quot;389&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg&quot;/&gt;&lt;figcaption&gt;图9 ：CBC模式的性能结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;本节显示了使用不同密码模式运行四种比较加密算法所获得的仿真结果。已经使用不同的负载来确定比较算法的处理能力和性能。&lt;/p&gt;&lt;p&gt;&lt;b&gt;07结论&lt;/b&gt;&lt;/p&gt;&lt;p&gt;仿真结果表明，Blowfish比其他常用的加密算法具有更好的性能。由于Blowfish到目前为止还没有任何已知的安全弱点，这使得它成为被认为是标准加密算法的优秀候选者。&lt;/p&gt;&lt;p&gt;与其他算法相比，AES表现出差的性能结果，因为它需要更多的处理能力。使用CBC模式增加了额外的处理时间，但总体而言相对可忽略不计，特别是对于需要对相对较大的数据块进行更安全加密的某些应用程序。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485065%26idx%3D1%26sn%3D997914dcc9dc12505550897b0d437663%26chksm%3Dfcdc7928cbabf03eebb2015d0902c2932c02cdec5b8f20b338851cd323b6b711f36fca029b1c%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;数据加密算法的性能分析-3&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68996523</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>数据加密算法的性能分析-2</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68995138.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68995138&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;b&gt;本文比较了四种常用的加密算法的性能:DES、3DES、Blowfish和AES (Rijndael)。通过运行几种加密设置来处理不同大小的数据块，以评估算法的加密/解密速度，从而进行了比较。使用c#语言进行了模拟。&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;关键词:加密算法，性能，分析，AES, DES, Blowfish, TripleDES，密码学&lt;/b&gt;&lt;/p&gt;&lt;p&gt;2.4&lt;b&gt;对称和非对称加密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;根据用于加密/解密安全数据的安全密钥的类型，数据加密过程主要分为两类。这两个类别是：非对称和对称加密技术。&lt;/p&gt;&lt;p&gt;2.4.1对称加密&lt;/p&gt;&lt;p&gt;在这种类型的加密中，发送方和接收方就（共享）密钥达成一致。然后他们使用这个密钥加密和解密他们发送的消息。图4显示了对称加密的过程。&lt;/p&gt;&lt;p&gt;节点A和B首先就通信数据的加密和解密使用的加密技术达成一致。然后，他们就双方将在这方面使用的密钥达成一致。加密设置完成后，节点A开始发送使用共享密钥加密的数据，另一端节点B使用相同的密钥解密加密的消息。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-dacd7492856965bc73ed01ea01bd2260_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;239&quot; data-rawheight=&quot;176&quot; class=&quot;content_image&quot; width=&quot;239&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-dacd7492856965bc73ed01ea01bd2260_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;239&quot; data-rawheight=&quot;176&quot; class=&quot;content_image lazy&quot; width=&quot;239&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-dacd7492856965bc73ed01ea01bd2260_b.jpg&quot;/&gt;&lt;figcaption&gt;图4：对称加密&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;对称加密背后的主要问题是如何在两个节点之间安全地共享密钥。如果密钥因为任何原因被知道，整个系统就会崩溃。这种加密类型的密钥管理是很麻烦的，特别是如果每个对等连接都使用一个惟一的密钥，那么n个节点要保存和管理的密钥总数将是n(n-1)/2。&lt;/p&gt;&lt;p&gt;2.4.2非对称加密&lt;/p&gt;&lt;p&gt;非对称加密是使用两个密钥的另一种加密类型。为了解释更多，Key1只能加密Key2可以解密，反之亦然。它也被称为公钥加密（PKC），因为用户倾向于使用两个密钥：公共的公钥和用户只知道的私钥。&lt;/p&gt;&lt;p&gt;下面的图5说明了在节点A和节点B之间使用两个密钥。在同意连接中使用的加密类型之后，节点B将其公钥发送到节点A.节点A使用接收到的公钥加密它的消息。然后，当加密的消息到达时，节点B使用其私钥来解密它们。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bdc9b572f667272a44c0b43abfee1b64_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;393&quot; data-rawheight=&quot;273&quot; class=&quot;content_image&quot; width=&quot;393&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bdc9b572f667272a44c0b43abfee1b64_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;393&quot; data-rawheight=&quot;273&quot; class=&quot;content_image lazy&quot; width=&quot;393&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-bdc9b572f667272a44c0b43abfee1b64_b.jpg&quot;/&gt;&lt;figcaption&gt;图5非对称加密&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;此功能克服了管理密钥的对称加密问题。但另一方面，公钥加密的这一独特功能使其在数学上更容易受到攻击。此外，非对称加密技术比对称技术慢近1000倍，因为它们需要更多的计算处理能力。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为了获得这两种方法的好处，通常使用混合技术。在该技术中，非对称加密用于交换密钥，然后使用对称加密在发送方和接收方之间传输数据。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.5比较算法&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;本节旨在为读者提供理解比较算法之间关键差异的必要背景。&lt;/p&gt;&lt;p&gt;DES :(数据加密标准）是NIST（美国国家标准与技术研究院）推荐的第一个加密标准。&lt;/p&gt;&lt;p&gt;它基于IBM提出的名为Lucifer的算法。DES于1974年成为标准。从那时起，许多攻击和方法都利用DES的弱点，使其成为不安全的块密码。&lt;/p&gt;&lt;p&gt;3DES：作为DES的增强，提出了3DES（三重DES）加密标准。在该标准中，加密方法类似于原始DES中的加密方法，但是应用3次以增加加密级别。但是已知的事实是3DES比其他块密码方法慢。&lt;/p&gt;&lt;p&gt;AES :( 高级加密标准），是NIST推荐的替代DES的新加密标准。Rijndael（发音为Rain Doll）算法是在1997年选择最佳加密标准的竞赛后选出的。暴力攻击是已知的唯一有效的攻击，攻击者试图测试所有字符组合来解锁加密。AES和DES都是块密码。&lt;/p&gt;&lt;p&gt;Blowfish： 它是世界领先的密码学家之一Bruce Schneier提供的最常见的公共域加密算法之一，Bruce Schneier也是专门从事密码学和计算机安全的咨询公司Counterpane Systems的总裁。&lt;/p&gt;&lt;p&gt;Blowfish是一种可变长度密钥，64位分组密码。Blowfish算法于1993年首次引入。该算法虽然主要用于软件应用，但可以在硬件应用中进行优化。虽然它受到弱密钥问题的困扰，但已知没有攻击成功。&lt;/p&gt;&lt;p&gt;本节简要介绍了比较的加密算法。本文对每种算法的介绍是为了提供最小的信息来区分它们之间的主要区别。&lt;/p&gt;&lt;p&gt;03相关工作结果&lt;/p&gt;&lt;p&gt;为了更好地展望比较算法的性能，本节讨论从其他资源获得的结果。 &lt;/p&gt;&lt;p&gt;其中一个已知的加密库是Crypto ++ 。Crypto ++ Library是一个免费的C ++加密方案类库。目前，该库包含以下内容，其中一些是其他人的代码，重新打包成类。&lt;/p&gt;&lt;p&gt;表1包含一些最常用的加密算法的速度基准。所有这些都是用C ++编写的，用Microsoft Visual C ++ .NET 2003编译（整个程序优化，优化速度，P4代码生成），并运行在Windows XP SP 1下的奔腾4 2.1 GHz处理器上。采用386例汇编程序进行多精度加法和减法运算。采用SSE2内在函数进行多精度乘法。&lt;/p&gt;&lt;p&gt;从表中可以看出，并非所有模式都针对所有算法进行了尝试。尽管如此，这些结果很好地表明所呈现的比较结果应该是什么样的。&lt;/p&gt;&lt;p&gt;此外，它表明Blowfish和AES具有最佳性能。众所周知，两者都具有比其他两种更好的加密（即更强抵御数据攻击）。&lt;br/&gt; &lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-54570853e0d6a54d72778765af9b6d37_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1202&quot; data-rawheight=&quot;1357&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1202&quot; data-original=&quot;https://pic4.zhimg.com/v2-54570853e0d6a54d72778765af9b6d37_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-54570853e0d6a54d72778765af9b6d37_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1202&quot; data-rawheight=&quot;1357&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1202&quot; data-original=&quot;https://pic4.zhimg.com/v2-54570853e0d6a54d72778765af9b6d37_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-54570853e0d6a54d72778765af9b6d37_b.jpg&quot;/&gt;&lt;figcaption&gt;表1使用Crypto ++的比较结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在本文中，实现了流行的密钥算法，包括DES，3DES，AES（Rijndael），Blowfish，并通过加密不同内容和大小的输入文件来比较它们的性能。算法使用统一语言（Java），使用其标准规范实现，并在两个不同的硬件平台上进行测试，以比较它们的性能。 &lt;/p&gt;&lt;p&gt;表2和表3显示了他们的实验结果，他们在两台不同的机器上进行了实验：P-II 266 MHz和P-4 2.4 GHz。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e42e889e015180e129fb4a37a08de68b_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1213&quot; data-rawheight=&quot;947&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1213&quot; data-original=&quot;https://pic4.zhimg.com/v2-e42e889e015180e129fb4a37a08de68b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e42e889e015180e129fb4a37a08de68b_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1213&quot; data-rawheight=&quot;947&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1213&quot; data-original=&quot;https://pic4.zhimg.com/v2-e42e889e015180e129fb4a37a08de68b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-e42e889e015180e129fb4a37a08de68b_b.jpg&quot;/&gt;&lt;figcaption&gt;表2在P-II 266 MHz机器上的ECB模式下加密算法的比较执行时间（以秒为单位） &lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0bfa87f63f344fa42d9c6d9681690d0e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1202&quot; data-rawheight=&quot;923&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1202&quot; data-original=&quot;https://pic3.zhimg.com/v2-0bfa87f63f344fa42d9c6d9681690d0e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0bfa87f63f344fa42d9c6d9681690d0e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1202&quot; data-rawheight=&quot;923&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1202&quot; data-original=&quot;https://pic3.zhimg.com/v2-0bfa87f63f344fa42d9c6d9681690d0e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-0bfa87f63f344fa42d9c6d9681690d0e_b.jpg&quot;/&gt;&lt;figcaption&gt;表3在P-4 2.4 GHz机器上的ECB模式下加密算法的比较执行时间（以秒为单位） &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;从结果中可以很容易地看出，Blowfish在吞吐量方面优于其他算法。Aamer Nadeem等人也使用CBC对流模式下的算法进行了比较，但由于本文更侧重于块密码，因此省略了结果。&lt;/p&gt;&lt;p&gt;结果表明，与其他算法相比，Blowfish具有非常好的性能。此外，它表明AES具有比3DES和DES更好的性能。令人惊讶的是，它还表明3DES具有几乎1/3的DES吞吐量，换句话说，它需要比DES多3倍的来处理相同数量的数据。&lt;/p&gt;&lt;p&gt;Priya Dhawan也进行了实验，用于比较.NET框架内实现的不同加密算法的性能。他们的结果与之前显示的结果很接近（图6）。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1d02882e99a4fc608e387854c34f7567_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;359&quot; data-rawheight=&quot;461&quot; class=&quot;content_image&quot; width=&quot;359&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1d02882e99a4fc608e387854c34f7567_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;359&quot; data-rawheight=&quot;461&quot; class=&quot;content_image lazy&quot; width=&quot;359&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-1d02882e99a4fc608e387854c34f7567_b.jpg&quot;/&gt;&lt;figcaption&gt;图6：使用.NET实现的比较结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;比较在以下算法上进行：DES，3DES，RC2和AES（Rijndael）。结果表明，AES在不同用户负载的每秒请求进程数以及不同用户负载情况下的响应时间方面均优于其他算法。&lt;/p&gt;&lt;p&gt;本节概述了该领域其他人的比较结果。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485059%26idx%3D1%26sn%3D74cbdbbae75b74aa7c96fe7ef198e463%26chksm%3Dfcdc7922cbabf034c8d44b62e26941a36a1399cd2483b9236f455941861d206b1fa7c55e25b6%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;数据加密算法的性能分析-2&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68995138</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>数据加密算法的性能分析-1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68991182.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68991182&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;b&gt;本文比较了四种常用的加密算法的性能:DES、3DES、Blowfish和AES (Rijndael)。通过运行几种加密设置来处理不同大小的数据块，以评估算法的加密/解密速度，从而进行了比较。使用c#语言进行了模拟。&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;关键词:加密算法，性能，分析，AES, DES, Blowfish, TripleDES，密码学&lt;/b&gt;&lt;/p&gt;&lt;p&gt;01&lt;b&gt;介绍&lt;/b&gt;&lt;/p&gt;&lt;p&gt;随着互联网或其他媒体类型上交换数据的重要性和价值不断增加，寻求最佳解决方案以提供必要的保护，防止数据窃贼的攻击，并及时提供这些服务，在安全相关的领域中，是最活跃的学科之一。&lt;/p&gt;&lt;p&gt;本文试图在数据加密领域中对最常用的算法进行公平的比较。由于我们这里主要关注的是这些算法在不同设置下的性能，所以本文的比较是考虑了使用不同数据负载时算法的行为和性能。&lt;/p&gt;&lt;p&gt;第2节将简要概述密码学及其在日常生活中的主要用法; 除此之外，它将解释密码学中一些最常用的术语以及每个比较算法的简要描述，以便读者理解它们之间的关键的差异。&lt;/p&gt;&lt;p&gt;第3节将显示其他贡献所取得的成果及其结论。第4节将介绍使用的安装环境和设置以及使用的系统组件。第5节说明了性能评估方法和所选设置，以便更好地进行比较。第6节对模拟结果进行了深入的讨论，最后第7节总结了本文的重点和其他相关考虑。&lt;/p&gt;&lt;p&gt;02&lt;b&gt;密码学：概述&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本节将概述使用密码学背后的主要目标，以及该领域中使用的常用术语。&lt;/p&gt;&lt;p&gt;密码学通常被称为“对秘密的研究”，而现在最受重视的是加密的定义。加密是将明文文本“未隐藏”转换为加密文本“隐藏”的过程，以保护它免受数据窃贼的攻击。这个过程还有另一个部分，需要在另一端解密加密文本才能理解。图1为常用加密算法的简单流程。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-77c3d5d15aa2394816b801822b3fa2f1_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;348&quot; data-rawheight=&quot;91&quot; class=&quot;content_image&quot; width=&quot;348&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-77c3d5d15aa2394816b801822b3fa2f1_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;348&quot; data-rawheight=&quot;91&quot; class=&quot;content_image lazy&quot; width=&quot;348&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-77c3d5d15aa2394816b801822b3fa2f1_b.jpg&quot;/&gt;&lt;figcaption&gt;   图1加密 - 解密流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;正如RFC 2828中所定义的，加密系统是“一组加密算法以及支持在某些应用程序环境中使用算法的密钥管理过程。”这个定义定义了整个机制，它提供了由网络协议和数据加密算法组成的必要的安全级别。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.1密码学目标&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;本节介绍使用加密技术的五个主要目标。&lt;/p&gt;&lt;p&gt;每个安全系统都必须提供一组安全功能，以确保系统的安全性。这些功能通常被称为安全系统的目标。&lt;/p&gt;&lt;p&gt;这些目标可以列在以下五个主要类别[Earle2005]：&lt;/p&gt;&lt;p&gt;&lt;i&gt;身份验证：&lt;/i&gt;这意味着在使用系统发送和接收数据之前，应验证接收方和发送方身份。&lt;/p&gt;&lt;p&gt;&lt;i&gt;保密性或机密性：&lt;/i&gt;通常，这个功能(特性)是大多数人识别安全系统的方式。这意味着只有经过身份验证的人员才能解释消息(日期)内容，而其他人不能。&lt;/p&gt;&lt;p&gt;&lt;i&gt;完整性：&lt;/i&gt;完整性意味着确保通信数据的内容不受端点（发送方和接收方）之间的任何类型的修改。完整性的基本形式是IPv4数据包中的数据包校验和。&lt;/p&gt;&lt;p&gt;&lt;i&gt;不可否认性：&lt;/i&gt;此功能意味着发送者和接收者都不能错误地否认他们已经发送了某个消息。&lt;/p&gt;&lt;p&gt;&lt;i&gt;服务可靠性和可用性：&lt;/i&gt;由于安全系统通常会受到入侵者的攻击，这可能会影响其用户的可用性和服务类型。这样的系统应该提供一种方式来为用户提供他们期望的服务质量。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.2块密码和流密码&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;常用的加密技术的主要分类方法之一是基于它们操作的输入数据的形式。这两种类型是块密码和流密码。本节讨论两种类型的主要功能，即操作模式，并在安全性和性能方面进行比较。&lt;/p&gt;&lt;p&gt;2.2.1块密码&lt;/p&gt;&lt;p&gt;在描述块密码的关键特征之前，必须先给出密文的定义。“cipher是执行加密的算法(反向是解密)”[维基百科]。&lt;/p&gt;&lt;p&gt;在该方法中，如果数据来自块，则数据被加密和解密。在最简单的模式中，您将明文分成块，然后将这些块送入密码系统以生成密文块。 &lt;/p&gt;&lt;p&gt;ECB(Electronic Codebook Mode电子密码本模式)是块密码的基本形式，直接对数据块进行加密，生成对应的加密块(如图2所示)。稍后将讨论更多关于操作模式的讨论。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-21c0502f3fc4f272817124470a98ad5b_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;200&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/v2-21c0502f3fc4f272817124470a98ad5b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-21c0502f3fc4f272817124470a98ad5b_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;200&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/v2-21c0502f3fc4f272817124470a98ad5b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-21c0502f3fc4f272817124470a98ad5b_b.jpg&quot;/&gt;&lt;figcaption&gt;   图2：块密码ECB模式。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;2.2.2流密码&lt;/p&gt;&lt;p&gt;通过对数据流进行逐位操作，对数据流执行流密码功能。流密码由密钥流发生器和混合函数两大部分组成。混合函数通常只是一个XOR函数，而密钥流生成器是流密码加密技术的主要单元。&lt;/p&gt;&lt;p&gt;例如，如果密钥流生成器生成一系列零，则输出的加密流将与原始明文相同。图3显示了流密码中简单模式的操作。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-540060835a96c2e5f2847ee33d090f67_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;360&quot; data-rawheight=&quot;120&quot; class=&quot;content_image&quot; width=&quot;360&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-540060835a96c2e5f2847ee33d090f67_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;360&quot; data-rawheight=&quot;120&quot; class=&quot;content_image lazy&quot; width=&quot;360&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-540060835a96c2e5f2847ee33d090f67_b.jpg&quot;/&gt;&lt;figcaption&gt;图3：流密码(简单模式)&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;2.3运作模式&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;本节解释块密码加密中最常见的两种操作模式—ECB和CBC—并简要介绍其他模式。&lt;/p&gt;&lt;p&gt;块密码存在许多差异，采用不同的技术来增强系统的安全性。最常用的方法有:ECB(Electronic Codebook Mode电子密码本模式)、CBC(Chain Block Chaining Mode链式块链接模式)和OFB(Output Feedback Mode输出反馈模式)。&lt;/p&gt;&lt;p&gt;ECB模式是CBC模式使用当前加密的前一步骤中的密码块，形成链式加密过程。OFB在类似于下面将描述的流密码的明文上操作，其中在每个步骤中使用的加密密钥取决于来自前一步骤的加密密钥。&lt;/p&gt;&lt;p&gt;由于本文主要集中在ECB和CBC模式，因此还有许多其他模式，如CTR（counter计数器），CFB（Cipher Feedback密码反馈）或3DES特定模式，本文未讨论这些模式。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485051%26idx%3D1%26sn%3D40fe750317a155e5043f5495a5e11a87%26chksm%3Dfcdc79dacbabf0ccd0c0f772ca72489a19c5c3f3f8b19fd9e81cb81b65465ec3ff320e321485%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;数据加密算法的性能分析-1&lt;/a&gt;&lt;hr/&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br/&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt; &lt;b&gt;&lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/Bjq4se&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt; &lt;u&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xima.tv/RNU1Q8&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68991182</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>论文是怎样炼成的</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-06-13-68988887.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/68988887&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-53f60e4371fd56c23077099c349b7c0b_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;b&gt;本文由陈智罡博士在2014年写的一篇博文，特此转载。&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;论文是怎样写出来的，如果不是作者本人，我们是无从知道其真实的出发点、灵感的获取、以及是如何解决过程中所碰到的困难的。就像历史，我们永远无法知道当时当事人真正的心思、真正的事情过程。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但是我们可以推测。当你读论文的时候，当你有了一定的功力的时候，读者和论文仿佛“天人合一”了，这个时候我们可以做出这种假设：如果是你的话，你能写出这篇论文么？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;经常这样想对提高自己看问题的角度，以及做论文的方法是非常有好处的。当然，这需要你是敏感的、能够体会论文中字里行间的意义。如果你把读论文当成一种快乐的话，就会有这种体会。如果你没有这种快感，那就另当别论了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;下面我们来看看这篇论文是如何炼成的。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;“Homomorphic Encryption from Learning with Errors Conceptually-Simpler Asymptotically-Faster Attribute-Based”，2013年美密会一篇全同态加密的文章，作者是：Gentry还有另外两个作者。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;因为在这之前，全同态最好的方案就是密文是向量，密钥是向量，基于LWE上的方案。但是由于密文是向量，密文的加法是可以做的，就是正常的加法，但是密文的乘法如何做呢？你见过向量做乘积了么？而且要求密文向量乘积的结果解密后必须是原来明文的乘积。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Brakerski观察到一个事实，两个密文的乘积可以表示成两个密文向量的张量，说通俗点，就是用第一个向量中的每一个元素乘以第二个向量中的所有元素，相应的密钥也变成了两个相同密钥向量的张量，这样解密是正确的。然而，这样一次乘法就使得n维密文变成了n2维密文，密钥也变成了n2维。最多只能做几次乘法，密文膨胀的就使得密文计算进行不下去了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Brakerski发明了一个技术：再线性化技术。该技术使得n2维密文能够魔术般的缩回到原来的n维尺寸，对应的n2维密钥变成了一个新的n维密钥。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这导致LWE上的全同态加密方案诞生了。但是每次密文计算后，都要用再线性化技术将密文的维数进行约减。再线性化的过程很简单，但是该过程却是一个高维矩阵的乘积，非常耗费计算量。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这世界是能量守恒的，此出必有彼出。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所以引出了一个问题，密文乘积计算如果维数不膨胀就好了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面这句话就是问题的出发点。没有人告诉你，只有靠自己在读论文中体会。尤其是对于那些没有经费开国际会议的。退一万步，就算你去开会，碰到了Gentry，他也不会平白告诉你这是个问题的。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有了问题必然有思考。Gentry在思考，你也在思考。相信开始时大家都差不多。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一个直觉就是，密文如果是矩阵（方阵）的话，方阵乘以方阵还是矩阵，维数没有任何变化，这样就不需要用再线性化技术了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这个直觉我也想到了，相信很多人想到了。但是一篇论文“A Simple BGN-type Cryptosystem from LWE”让我打消了用矩阵构造的想法。这篇论文是Gentry在2010年写的。这篇论文是用矩阵来构造密文的，但是方法是用Gentry的老套路。文章特别强调由于矩阵不具有交换性，所以该方案只能做一次乘法。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这个时候，相信大家和Gentry一样，都对矩阵构造密文做全同态不抱什么希望了。大家又在同一起跑线上了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;紧接着，看到一篇论文“An Efficient Homomorphic Encryption Protocol for Multi-User Systems”，作者是Liangliang Xiao。这篇论文是在2012年在eprint上发出来的，一直没有发表。这篇文章也是做密文计算的，里面用到特征向量和特征矩阵，但是加密形式不同。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我不知道gentry看到没有。谁也不知道。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;人的差别就在于，我看完后没有其他想法，因为功力浅。紧接着在2013年6月，就看到了这篇Gentry用特征向量做密钥，特征值做明文，密文是矩阵的上述文章。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;故事没有完。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;假设你发现了：特征向量做密钥，特征值做明文，密文可以是矩阵的方法。接下来我们看看你能够做出全同态方案么？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;按照常理，想构造全同态方案，必须要解决噪音在计算中的增长问题。加法还和老传统一样，增长的很慢，就是噪音之和。乘法呢？你肯定发觉乘法的噪音依赖于密文，只要搞全同态的，都会发现的。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以往的方案，在密文乘积中，噪音要么是两个密文的噪音之积，要么噪音依赖于密钥的范数。还没有发现噪音依赖于密文的。考验人的时候到了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;密文的最大值就是模的值，如果密文乘积后噪音的值大于模，解密的正确性就保证不了了。这种噪音的增长依赖于密文的情况，简直是一种灾难，一个极大的坏消息，连一次乘法都进行不了。怎么办呢？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;常规解决方法就是对密文做BitDecomp，把密文矩阵中的每一个值进行位分解，使得密文的范数变小。这是全同态中的老一套了，任何搞全同态的人都可以想到。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但是你能想到Flatten这个技术么？它能把密文的值重新变回0或者1，而且保证解密形式不变。这是这篇文章成立的一个最大核心点，也是最大难点。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;从出发点到论文的炼成，也许作者和普通的研究者没有什么区别，关键是在解决关键问题上的那么一点，那一点就是点石成金了。靠什么？靠直觉? 靠运气？靠努力？说不清。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所以有些东西是没有办法的。想到和想不到之间也许只有一步之遥，但是有时就是跨不过去。做研究这几年，我才慢慢体会到哲学和科学原来是那么的相似。&lt;/p&gt;&lt;p&gt;我们经常费劲心思的把论文搞清楚，但是我们忘了，搞清楚的目的是为了什么？&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我想，应该是为了抽象到一个更高的层次去看论文中如何解决这个问题的。这样当我们在其他地方碰到类似的情况时，直觉就会冒出来。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;故事还没有完。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Gentry这篇论文在美密会上发表后，大家都看了，有人却看到了玄机。下次再说。&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485027%26idx%3D1%26sn%3De545608e420727c19954bd4a5e3b94ae%26chksm%3Dfcdc79c2cbabf0d471ea9a0b722f8dc2d731a2387de1c7427614ae924fbe8ef3264c7640bc38%26token%3D1666345676%26lang%3Dzh_CN%23rd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;论文是怎样炼成的&lt;/a&gt;&lt;p&gt;=======================================================&lt;/p&gt;&lt;p&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;知识星球ID：28018093&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)”&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.ximalaya.com/keji/18410777/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;ximalaya.com/keji/18410&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;777/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解读区块链白皮书&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.ximalaya.com/youshengshu/16978165/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;ximalaya.com/youshengsh&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;u/16978165/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-06-13-68988887</guid>
<pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
