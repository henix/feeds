<blockquote><b>本文比较了四种常用的加密算法的性能:DES、3DES、Blowfish和AES (Rijndael)。通过运行几种加密设置来处理不同大小的数据块，以评估算法的加密/解密速度，从而进行了比较。使用c#语言进行了模拟。</b></blockquote><p><b>关键词:加密算法，性能，分析，AES, DES, Blowfish, TripleDES，密码学</b></p><p><b>04模拟设置</b></p><p>如上所述，此模拟使用.NET环境中提供的类来模拟DES，3DES和AES（Rijndael）的性能。这里使用的Blowfish实现是由Markus Hahn 以<a href="https://link.zhihu.com/?target=http%3A//Blowfish.NET" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">Blowfish.NET</span><span class="invisible"></span></a>名称提供的实现。此实现经过全面测试并经过优化，可为算法提供最佳性能。</p><p>该实现使用System.Security.Cryptography中提供的DES，3DES和Rijndael的托管包装器，它包装了CryptoAPI中可用的非托管实现。它们分别是DESCryptoServiceProvider，TripleDESCryptoServiceProvider和RijndaelManaged。</p><p>在System.Security.Cryptography中只有一个Rijndael的纯粹的管理实现，它在测试中使用。</p><p>表4显示了此实验中使用的算法设置。这些设置用于将初始地结果与从Priya Dhawan获得的结果进行比较。</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg" data-size="normal" data-rawwidth="1201" data-rawheight="391" class="origin_image zh-lightbox-thumb" width="1201" data-original="https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg" data-size="normal" data-rawwidth="1201" data-rawheight="391" class="origin_image zh-lightbox-thumb lazy" width="1201" data-original="https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-23a0842dc1bab09a0546d9e54e7f998f_b.jpg"/><figcaption>表4算法设置</figcaption></figure><p>3DES和AES支持其他设置，但这些设置代表了它们可以提供的最大安全设置。更长的密钥长度意味着必须付出更多努力来破坏加密的数据安全性。</p><p>由于评估测试旨在评估使用分组密码时的结果，由于测试机器（1 GB）的内存限制，测试会将负载数据块分成更小的大小。负载数据分为数据块和它们是使用System.Security.Cryptography命名空间中提供的RandomNumberGenerator类创建的。 </p><p><b>05性能评估方法</b></p><p>本节描述了评估比较算法性能的技术和仿真选择。除此之外，本节还将讨论方法论的相关参数，如系统参数、实验因素、实验初始设置等。</p><p><b>5.1系统参数</b></p><p>使用3500+ AMD 64位处理器和1GB RAM进行实验。使用.NET 2003 visual studio中的默认设置为C＃windows应用程序编译模拟程序。实验将进行几次，以确保结果一致并且可用于比较不同的算法。</p><p><b>5.2实验因素</b></p><p>为了评估比较算法的性能，必须确定算法需要测试的参数。由于每种算法的安全特性作为其抵御密码攻击的优势已经为人所知并进行了讨论。这里选择的决定性能的因素是算法加密/解密各种大小数据块的速度。</p><p><b>5.3模拟程序</b></p><p>通过考虑不同大小的数据块（0.5MB到20MB），根据加密和解密数据块所需的时间来评估算法。所有实施都是精确的，以确保结果相对公平和准确。</p><p>仿真程序（如下图7所示）接受三个输入：算法，密码模式和数据块大小。成功执行后，将显示生成，加密和解密的数据。</p><p>请注意，由于大多数字符没有字符表示，因此无法显示。在加密/解密过程成功之后进行另一个比较，通过比较生成的数据(原始数据块)和从该过程生成的解密数据块，确保以正确的方式处理所有数据。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg" data-size="normal" data-rawwidth="553" data-rawheight="347" class="origin_image zh-lightbox-thumb" width="553" data-original="https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg" data-size="normal" data-rawwidth="553" data-rawheight="347" class="origin_image zh-lightbox-thumb lazy" width="553" data-original="https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-4ffd449eb29b1d3eca3d2ce32b3c317c_b.jpg"/><figcaption>图7：模拟程序的GUI</figcaption></figure><p><b>06模拟结果</b></p><p>本节将展示使用不同数据负载运行仿真程序得到的结果。结果表明，改变数据负载对各算法的影响以及使用的密码模式(加密模式)的影响。</p><p><b>6.1 ECB的性能结果</b></p><p>第一组实验使用ECB模式进行，结果显示在下面的图8中。结果表明，Blowfish算法在处理时间方面优于其他算法。它还表明，当数据块大小相对较大时，AES会消耗更多资源。</p><p>此处显示的结果与Priya Dhawan获得的结果不同，因为此处使用的数据块大小远大于其实验中使用的数据块大小。</p><p>这里可以注意到另一点，3DES因其三相加密特性而需要比DES更多的时间。Blowfish虽然有一个长密钥（448位），但表现优于其他加密算法。众所周知，DES和3DES在其安全机制中有蠕虫漏洞，Blowfish和AES，到目前为止还没有。</p><p>这些结果与计算机上的其他负载无关，因为每次单个实验都进行了多次，导致几乎相同的预期结果。.NET中的DES，3DES和AES实现被认为是市场上最好的。</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg" data-size="normal" data-rawwidth="345" data-rawheight="260" class="content_image" width="345"/></noscript><img src="https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg" data-size="normal" data-rawwidth="345" data-rawheight="260" class="content_image lazy" width="345" data-actualsrc="https://pic3.zhimg.com/v2-ef410cda05f82a8beeb923370b8afef2_b.jpg"/><figcaption>图8 ECB模式的性能结果</figcaption></figure><p><b>6.2 CBC的性能结果</b></p><p>正如预期的那样，由于其密钥链特性，CBC需要比ECB更多的处理时间。图9中显示的结果还表明，对于许多应用而言，添加的额外时间并不重要，因为已知CBC在保护方面比ECB好得多。</p><p>肉眼很难看出两种模式之间的差异，结果显示ECB和CBC之间的平均差异为0.059896秒，相对较小。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg" data-size="normal" data-rawwidth="389" data-rawheight="292" class="content_image" width="389"/></noscript><img src="https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg" data-size="normal" data-rawwidth="389" data-rawheight="292" class="content_image lazy" width="389" data-actualsrc="https://pic1.zhimg.com/v2-26d1d62c35d6a90f19cd409b9dcecfe8_b.jpg"/><figcaption>图9 ：CBC模式的性能结果</figcaption></figure><p>本节显示了使用不同密码模式运行四种比较加密算法所获得的仿真结果。已经使用不同的负载来确定比较算法的处理能力和性能。</p><p><b>07结论</b></p><p>仿真结果表明，Blowfish比其他常用的加密算法具有更好的性能。由于Blowfish到目前为止还没有任何已知的安全弱点，这使得它成为被认为是标准加密算法的优秀候选者。</p><p>与其他算法相比，AES表现出差的性能结果，因为它需要更多的处理能力。使用CBC模式增加了额外的处理时间，但总体而言相对可忽略不计，特别是对于需要对相对较大的数据块进行更安全加密的某些应用程序。</p><a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU3MTYzMjMzNA%3D%3D%26mid%3D2247485065%26idx%3D1%26sn%3D997914dcc9dc12505550897b0d437663%26chksm%3Dfcdc7928cbabf03eebb2015d0902c2932c02cdec5b8f20b338851cd323b6b711f36fca029b1c%26token%3D1666345676%26lang%3Dzh_CN%23rd" data-draft-node="block" data-draft-type="link-card" class=" wrap external" target="_blank" rel="nofollow noreferrer">数据加密算法的性能分析-3</a><hr/><p><b>文章首发在微信公众号：btc201800</b><br/><b>知识星球ID：28018093</b></p><p><br/><b>音频发布在喜马拉雅上“区块链杂谈 (第2季)”</b> <b><u><a href="https://link.zhihu.com/?target=http%3A//xima.tv/Bjq4se" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/Bjq4se</span><span class="invisible"></span></a></u></b></p><p><b>解读区块链白皮书</b> <u><a href="https://link.zhihu.com/?target=http%3A//xima.tv/RNU1Q8" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">xima.tv/RNU1Q8</span><span class="invisible"></span></a></u></p><p><br/><b>宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。</b></p>