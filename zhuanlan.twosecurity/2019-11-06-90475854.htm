<p>今天公司刚来一实习小妹，安排她跟着做项目，让她收集网站的子域名（前面都做过了，让她从信息收集开始跟进度），一个上午收集二十个？？？</p><p>万万想不通，不知道咋收集的，（喝了口茶~），然后花两分钟摸了个鱼，写了个小工具给她。</p><hr/><h2>前期准备</h2><p>一台电脑、一壶茶（戒烟）、一个顺手的代码编辑器（当然你非要用 .txt 也可以）、python以及pip</p><h2>简单科普</h2><p>可能有的同学连<b>子域名</b>是啥都不知道，简单补充两句</p><blockquote><b>百度百科：<br/>子域名</b>（或<b>子域</b>；英语：<b>Subdomain</b>）是在域名系统等级中，属于更高一层域的域。比如，<a href="https://link.zhihu.com/?target=http%3A//mail.example.com" class=" wrap external" target="_blank" rel="nofollow noreferrer">mail.example.com</a> 和 <a href="https://link.zhihu.com/?target=http%3A//calendar.example.com" class=" wrap external" target="_blank" rel="nofollow noreferrer">calendar.example.com</a> 是 <a href="https://link.zhihu.com/?target=http%3A//example.com" class=" wrap external" target="_blank" rel="nofollow noreferrer">example.com</a> 的两个子域，而 example.com 则是 顶级域.com 的子域。</blockquote><h2>让python飞</h2><blockquote>python 和 pip 的安装就跳过 不赘述了</blockquote><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-1d9c9ed8fda55d48e6d0eb371439094c_b.jpg" data-caption="" data-size="normal" data-rawwidth="456" data-rawheight="88" class="origin_image zh-lightbox-thumb" width="456" data-original="https://pic1.zhimg.com/v2-1d9c9ed8fda55d48e6d0eb371439094c_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-1d9c9ed8fda55d48e6d0eb371439094c_b.jpg" data-caption="" data-size="normal" data-rawwidth="456" data-rawheight="88" class="origin_image zh-lightbox-thumb lazy" width="456" data-original="https://pic1.zhimg.com/v2-1d9c9ed8fda55d48e6d0eb371439094c_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-1d9c9ed8fda55d48e6d0eb371439094c_b.jpg"/></figure><p>安装第三方库：requests库（处理http请求）</p><div class="highlight"><pre><code class="language-bash">pip install requests</code></pre></div><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-d08d8a1936dafa6fed07849d6be5c6c3_b.jpg" data-caption="" data-size="normal" data-rawwidth="915" data-rawheight="103" class="origin_image zh-lightbox-thumb" width="915" data-original="https://pic4.zhimg.com/v2-d08d8a1936dafa6fed07849d6be5c6c3_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-d08d8a1936dafa6fed07849d6be5c6c3_b.jpg" data-caption="" data-size="normal" data-rawwidth="915" data-rawheight="103" class="origin_image zh-lightbox-thumb lazy" width="915" data-original="https://pic4.zhimg.com/v2-d08d8a1936dafa6fed07849d6be5c6c3_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-d08d8a1936dafa6fed07849d6be5c6c3_b.jpg"/></figure><p>好吧，它说我已经有了。。。</p><p>然后，re库（正则表达式），内置了，不需要导入；urlparse 可按照url进行严格切分，也不用导入。</p><h2>正文👇</h2><p>直接上代码</p><div class="highlight"><pre><code class="language-python3"><span class="kn">import</span> <span class="nn">re</span>

<span class="kn">from</span> <span class="nn">urllib.parse</span> <span class="k">import</span> <span class="n">urlparse</span>

<span class="kn">import</span> <span class="nn">requests</span>


<span class="n">key</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;请输入主域名：&#34;</span><span class="p">)</span>

<span class="n">sites</span><span class="o">=</span><span class="p">[]</span>

<span class="n">match</span><span class="o">=</span><span class="s1">&#39;style=&#34;text-decoration:none;&#34;&gt;(.*?)/&amp;nbsp;&lt;/a&gt;&#39;</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span>   <span class="c1">#先收集3页的试试。。。</span>

   <span class="n">i</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="mi">10</span>   <span class="c1">#通过改变参数pn的值实现换页</span>

   <span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://www.baidu.com/s?wd=site:&#34;</span><span class="o">+</span><span class="n">key</span><span class="o">+</span><span class="s2">&#34;&amp;cl=3&amp;pn=</span><span class="si">%s</span><span class="s2">&#34;</span><span class="o">%</span><span class="n">i</span>   <span class="c1">#借用百度进行搜索</span>

   <span class="n">response</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="o">.</span><span class="n">content</span>

   <span class="n">subdomains</span><span class="o">=</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">match</span><span class="p">,</span><span class="n">response</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">))</span>

   <span class="n">sites</span> <span class="o">+=</span> <span class="nb">list</span><span class="p">(</span><span class="n">subdomains</span><span class="p">)</span>

<span class="n">sites</span><span class="o">=</span> <span class="p">[</span><span class="n">urlparse</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">.</span><span class="n">netloc</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">sites</span><span class="p">]</span>

<span class="n">site</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">sites</span><span class="p">))</span>   <span class="c1">#set() 实现去重</span>

<span class="c1">#print (site)</span>

<span class="nb">print</span> <span class="p">(</span><span class="s2">&#34;一共收集了： </span><span class="si">%d</span><span class="s2">&#34;</span><span class="o">%</span><span class="nb">len</span><span class="p">(</span><span class="n">site</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">site</span><span class="p">:</span>          

   <span class="nb">print</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span></code></pre></div><p>工具测试运行如下：</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-d5cc2396af648cb599bdc940bcf46d76_b.jpg" data-caption="" data-size="normal" data-rawwidth="247" data-rawheight="393" class="content_image" width="247"/></noscript><img src="https://pic3.zhimg.com/v2-d5cc2396af648cb599bdc940bcf46d76_b.jpg" data-caption="" data-size="normal" data-rawwidth="247" data-rawheight="393" class="content_image lazy" width="247" data-actualsrc="https://pic3.zhimg.com/v2-d5cc2396af648cb599bdc940bcf46d76_b.jpg"/></figure><p>当然，它效率太低了，我为啥不用google hacker。下面推荐一款更高效的子域名收集工具（有请今日主角登场）。。。</p><hr/><h2>OneForAll</h2><p><b>关于它</b></p><p>项目主页：<a href="https://link.zhihu.com/?target=https%3A//shmilylty.github.io/OneForAll/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">shmilylty.github.io/One</span><span class="invisible">ForAll/</span><span class="ellipsis"></span></a></p><p>项目地址：<a href="https://link.zhihu.com/?target=https%3A//github.com/shmilylty/OneForAll" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/shmilylty/On</span><span class="invisible">eForAll</span><span class="ellipsis"></span></a>（还在开发阶段，不断完善ing，为开发者点赞👍）</p><p><b>功能</b></p><ul><li>收集能力强大</li><li>支持子域爆破</li><li>支持子域验证</li><li>支持子域接管</li><li>处理功能强大</li><li>速度极快</li><li>体验良好</li></ul><h2>让OneForAll飞</h2><p><b>环境</b></p><p>python3.7（我使用的环境，运行正常）推荐 3.8 ！！！</p><p><b>下载</b></p><div class="highlight"><pre><code class="language-bash">git clone https://github.com/shmilylty/OneForAll.git</code></pre></div><p><b>安装（Windows下，管理员运行）</b></p><div class="highlight"><pre><code class="language-bash"><span class="nb">cd</span> OneForAll/
python -m pip install -U pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/
pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/
<span class="nb">cd</span> oneforall/
python oneforall.py --help</code></pre></div><p>成功截图：</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-fa439f8de851d7f7b8259ddd0edac1ae_b.jpg" data-caption="" data-size="normal" data-rawwidth="1182" data-rawheight="200" class="origin_image zh-lightbox-thumb" width="1182" data-original="https://pic3.zhimg.com/v2-fa439f8de851d7f7b8259ddd0edac1ae_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-fa439f8de851d7f7b8259ddd0edac1ae_b.jpg" data-caption="" data-size="normal" data-rawwidth="1182" data-rawheight="200" class="origin_image zh-lightbox-thumb lazy" width="1182" data-original="https://pic3.zhimg.com/v2-fa439f8de851d7f7b8259ddd0edac1ae_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-fa439f8de851d7f7b8259ddd0edac1ae_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-1bc8796aae55d72f182610bb6e378a3f_b.jpg" data-caption="" data-size="normal" data-rawwidth="1486" data-rawheight="156" class="origin_image zh-lightbox-thumb" width="1486" data-original="https://pic4.zhimg.com/v2-1bc8796aae55d72f182610bb6e378a3f_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-1bc8796aae55d72f182610bb6e378a3f_b.jpg" data-caption="" data-size="normal" data-rawwidth="1486" data-rawheight="156" class="origin_image zh-lightbox-thumb lazy" width="1486" data-original="https://pic4.zhimg.com/v2-1bc8796aae55d72f182610bb6e378a3f_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-1bc8796aae55d72f182610bb6e378a3f_b.jpg"/></figure><p><b>帮助说明</b></p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-223733e1196836fc153df8e999084393_b.jpg" data-caption="" data-size="normal" data-rawwidth="568" data-rawheight="745" class="origin_image zh-lightbox-thumb" width="568" data-original="https://pic4.zhimg.com/v2-223733e1196836fc153df8e999084393_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-223733e1196836fc153df8e999084393_b.jpg" data-caption="" data-size="normal" data-rawwidth="568" data-rawheight="745" class="origin_image zh-lightbox-thumb lazy" width="568" data-original="https://pic4.zhimg.com/v2-223733e1196836fc153df8e999084393_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-223733e1196836fc153df8e999084393_b.jpg"/></figure><p><b>使用（用http://example.com进行测试）</b></p><div class="highlight"><pre><code class="language-bash">python3 oneforall.py --target example.com run</code></pre></div><p>测试过程</p><figure data-size="small"><noscript><img src="https://pic4.zhimg.com/v2-ef83fdcdfc8d26047568ad0c157d4d97_b.jpg" data-caption="" data-size="small" data-rawwidth="849" data-rawheight="832" class="origin_image zh-lightbox-thumb" width="849" data-original="https://pic4.zhimg.com/v2-ef83fdcdfc8d26047568ad0c157d4d97_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-ef83fdcdfc8d26047568ad0c157d4d97_b.jpg" data-caption="" data-size="small" data-rawwidth="849" data-rawheight="832" class="origin_image zh-lightbox-thumb lazy" width="849" data-original="https://pic4.zhimg.com/v2-ef83fdcdfc8d26047568ad0c157d4d97_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-ef83fdcdfc8d26047568ad0c157d4d97_b.jpg"/></figure><p>测试结果</p><figure data-size="small"><noscript><img src="https://pic3.zhimg.com/v2-d36ab7319323fc4613cc8918dbb9c41e_b.jpg" data-caption="" data-size="small" data-rawwidth="933" data-rawheight="417" class="origin_image zh-lightbox-thumb" width="933" data-original="https://pic3.zhimg.com/v2-d36ab7319323fc4613cc8918dbb9c41e_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-d36ab7319323fc4613cc8918dbb9c41e_b.jpg" data-caption="" data-size="small" data-rawwidth="933" data-rawheight="417" class="origin_image zh-lightbox-thumb lazy" width="933" data-original="https://pic3.zhimg.com/v2-d36ab7319323fc4613cc8918dbb9c41e_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-d36ab7319323fc4613cc8918dbb9c41e_b.jpg"/></figure><p><b>后续功能</b></p><ul><li>各模块持续优化和完善</li><li>子域监控</li><li>子域收集爬虫实现</li><li>操作强大交互人性的前端界面实现</li></ul><p>期待后续更多更强大的功能的同时，可以关注 <a href="https://link.zhihu.com/?target=https%3A//twosecurity.cn/" class=" wrap external" target="_blank" rel="nofollow noreferrer">二向箔安全</a> 最近新推出的一系列免费网络安全技能包，了解更多黑客工具、技巧，涨姿势+++（双十一还有超多优惠）</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-4b29d25964ce8e00f8d291155ff40d23_b.jpg" data-caption="" data-size="normal" data-rawwidth="607" data-rawheight="326" class="origin_image zh-lightbox-thumb" width="607" data-original="https://pic4.zhimg.com/v2-4b29d25964ce8e00f8d291155ff40d23_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-4b29d25964ce8e00f8d291155ff40d23_b.jpg" data-caption="" data-size="normal" data-rawwidth="607" data-rawheight="326" class="origin_image zh-lightbox-thumb lazy" width="607" data-original="https://pic4.zhimg.com/v2-4b29d25964ce8e00f8d291155ff40d23_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-4b29d25964ce8e00f8d291155ff40d23_b.jpg"/></figure><p></p>