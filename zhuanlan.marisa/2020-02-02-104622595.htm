<div class="title-image"><img src="https://pic4.zhimg.com/v2-aea51532371c88be451db5dbd6ca25ea_b.jpg" alt=""></div><div class="highlight"><pre><code class="language-apl"><span class="c1">⍝ CA 的原理很簡單，用 APL 的 primitive ⌺ (Stencil) 就可以表示</span>
<span class="nv">cell</span><span class="kd">←</span><span class="kt">{</span><span class="bp">⍵</span><span class="o">⍪</span><span class="p">(</span><span class="bp">⍺⍺</span><span class="err">⌺</span><span class="m">3</span><span class="p">)</span><span class="o">,</span><span class="m">¯1</span><span class="o">↑</span><span class="bp">⍵</span><span class="kt">}</span>
<span class="c1">⍝ two-color ca 的映射</span>
<span class="nv">rule</span> <span class="kd">←</span> <span class="kt">{</span><span class="nf">⎕IO</span><span class="kd">←</span><span class="m">0</span> <span class="p">⋄</span> <span class="p">(</span><span class="m">2</span><span class="o">⊥</span><span class="bp">⍵</span><span class="p">)</span><span class="o">⌷⌽</span><span class="p">(</span><span class="m">8</span><span class="o">⍴</span><span class="m">2</span><span class="p">)</span><span class="o">⊤</span><span class="bp">⍺⍺</span><span class="kt">}</span>
<span class="c1">⍝ three-color ca</span>
<span class="nv">code</span> <span class="kd">←</span> <span class="kt">{</span><span class="nf">⎕IO</span><span class="kd">←</span><span class="m">0</span> <span class="p">⋄</span> <span class="p">(</span><span class="o">+</span><span class="na">/</span><span class="bp">⍵</span><span class="p">)</span><span class="o">⌷⌽</span><span class="p">(</span><span class="m">7</span><span class="o">⍴</span><span class="m">3</span><span class="p">)</span><span class="o">⊤</span><span class="bp">⍺⍺</span><span class="kt">}</span>
<span class="c1">⍝from APL matrics to Netpbm format</span>
<span class="nv">pgm</span> <span class="kd">←</span> <span class="kt">{</span><span class="s1">&#39;P2&#39;</span><span class="p">(</span><span class="o">⍕⌽⍴</span><span class="bp">⍵</span><span class="p">)(</span><span class="o">⍕</span><span class="nv">M</span><span class="p">)</span><span class="o">,⍕</span><span class="na">¨</span><span class="o">↓</span><span class="bp">⍵</span><span class="o">-</span><span class="na">⍨</span><span class="nv">M</span><span class="kd">←</span><span class="o">⌈</span><span class="na">/</span><span class="o">,</span><span class="bp">⍵</span><span class="kt">}</span></code></pre></div><p>題图(code2040 size:1001×1001)生成方式</p><div class="highlight"><pre><code class="language-apl"><span class="p">(</span><span class="o">⊂</span><span class="nv">pgm</span> <span class="p">((</span><span class="m">2040</span> <span class="nv">code</span><span class="p">)</span><span class="nv">cell</span><span class="na">⍣</span><span class="m">1000</span><span class="p">)</span> <span class="nv">initi</span> <span class="m">500</span><span class="p">)</span><span class="nf">⎕NPUT</span><span class="s1">&#39;a.pgm&#39;</span>
<span class="c1">⍝ from shell $ pnmtopng a.pgm &gt; z.png</span></code></pre></div><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-13dc8eff273d2e7c02250b3f20e788f2_b.jpg" data-caption="" data-size="normal" data-rawwidth="870" data-rawheight="212" class="origin_image zh-lightbox-thumb" width="870" data-original="https://pic3.zhimg.com/v2-13dc8eff273d2e7c02250b3f20e788f2_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-13dc8eff273d2e7c02250b3f20e788f2_b.jpg" data-caption="" data-size="normal" data-rawwidth="870" data-rawheight="212" class="origin_image zh-lightbox-thumb lazy" width="870" data-original="https://pic3.zhimg.com/v2-13dc8eff273d2e7c02250b3f20e788f2_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-13dc8eff273d2e7c02250b3f20e788f2_b.jpg"/></figure><p>mobile automaton 就相当于两个 two-color ca。</p><p>不过我们可以先把 accumulator 给 abstract 出來。</p><div class="highlight"><pre><code class="language-apl"><span class="nv">acc</span> <span class="kd">←</span> <span class="kt">{</span><span class="bp">⍺</span><span class="kd">←</span><span class="m">1</span> <span class="p">⋄</span> <span class="p">((</span><span class="o">⊢⍪</span><span class="p">(</span><span class="bp">⍺⍺</span><span class="na">∘</span><span class="o">,</span><span class="m">¯1</span><span class="o">↑⊢</span><span class="p">))</span><span class="na">⍣</span><span class="bp">⍺</span><span class="p">)</span><span class="bp">⍵</span><span class="kt">}</span>
<span class="c1">⍝ 这样之前的可以写成 (⊂pgm 1000 (2040 cell code acc) initi 500)⎕NPUT&#39;a.pgm&#39;</span></code></pre></div><p>然后是 mobile automaton 的原理</p><div class="highlight"><pre><code class="language-apl"><span class="nv">mobile</span> <span class="kd">←</span> <span class="kt">{</span><span class="p">((</span><span class="bp">⍺⍺</span> <span class="bp">⍵⍵</span> <span class="bp">⍵</span><span class="o">⌷</span><span class="na">⍨</span><span class="o">⊂</span><span class="nv">P</span><span class="p">)</span><span class="err">@</span><span class="nv">P</span><span class="p">)</span><span class="bp">⍵</span><span class="o">⊣</span><span class="nv">P</span><span class="kd">←</span><span class="m">¯1</span> <span class="m">0</span> <span class="m">1</span><span class="o">+</span><span class="err">⍸</span><span class="m">1</span><span class="o">&lt;</span><span class="bp">⍵</span></code></pre></div><p>和替換规则</p><div class="highlight"><pre><code class="language-apl"><span class="nv">ma</span> <span class="kd">←</span> <span class="kt">{</span><span class="p">((</span><span class="o">⌽</span><span class="na">⍣</span><span class="nv">A</span><span class="p">)</span><span class="m">0</span> <span class="m">0</span> <span class="m">2</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nv">B</span><span class="err">@</span><span class="m">2</span><span class="p">)</span><span class="nv">P</span><span class="o">⊣</span><span class="nv">A</span> <span class="nv">B</span><span class="kd">←</span><span class="p">(</span><span class="bp">⍵</span><span class="o">⊤</span><span class="na">⍨</span><span class="m">2</span><span class="o">⍴</span><span class="m">255</span><span class="p">)</span><span class="nv">rule</span><span class="na">¨</span><span class="o">⊂</span><span class="nv">P</span><span class="kd">←</span><span class="bp">⍵</span><span class="o">-</span><span class="m">0</span> <span class="m">2</span> <span class="m">0</span><span class="kt">}</span></code></pre></div><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-1a599d7da6e88a3dcb082c04116803cd_b.jpg" data-caption="" data-size="normal" data-rawwidth="1210" data-rawheight="660" class="origin_image zh-lightbox-thumb" width="1210" data-original="https://pic2.zhimg.com/v2-1a599d7da6e88a3dcb082c04116803cd_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-1a599d7da6e88a3dcb082c04116803cd_b.jpg" data-caption="" data-size="normal" data-rawwidth="1210" data-rawheight="660" class="origin_image zh-lightbox-thumb lazy" width="1210" data-original="https://pic2.zhimg.com/v2-1a599d7da6e88a3dcb082c04116803cd_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-1a599d7da6e88a3dcb082c04116803cd_b.jpg"/></figure><p>我们就可以把这个 encode 成 14570 ← → 255⊥57 35, 57 ←→ 2⊥0 0 1 1 1 0 0 1, 85 ←→ 2⊥0 0 1 0 0 0 1 1.</p><p>于是可以用</p><div class="highlight"><pre><code class="language-apl"><span class="m">100</span> <span class="p">(</span><span class="m">14570</span> <span class="nv">mobile</span> <span class="nv">ma</span> <span class="nv">acc</span><span class="p">)</span> <span class="m">2</span> <span class="nv">initi</span> <span class="m">100</span></code></pre></div><p>画出</p><figure data-size="small"><noscript><img src="https://pic1.zhimg.com/v2-cc2724161bd9a716d9b39e2029b23588_b.jpg" data-caption="" data-size="small" data-rawwidth="608" data-rawheight="830" class="origin_image zh-lightbox-thumb" width="608" data-original="https://pic1.zhimg.com/v2-cc2724161bd9a716d9b39e2029b23588_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-cc2724161bd9a716d9b39e2029b23588_b.jpg" data-caption="" data-size="small" data-rawwidth="608" data-rawheight="830" class="origin_image zh-lightbox-thumb lazy" width="608" data-original="https://pic1.zhimg.com/v2-cc2724161bd9a716d9b39e2029b23588_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-cc2724161bd9a716d9b39e2029b23588_b.jpg"/></figure><p>最后</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-7cc06252b678869e89214760e560bada_b.jpg" data-caption="" data-size="normal" data-rawwidth="1208" data-rawheight="368" class="origin_image zh-lightbox-thumb" width="1208" data-original="https://pic3.zhimg.com/v2-7cc06252b678869e89214760e560bada_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-7cc06252b678869e89214760e560bada_b.jpg" data-caption="" data-size="normal" data-rawwidth="1208" data-rawheight="368" class="origin_image zh-lightbox-thumb lazy" width="1208" data-original="https://pic3.zhimg.com/v2-7cc06252b678869e89214760e560bada_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-7cc06252b678869e89214760e560bada_b.jpg"/></figure><p></p>