<div class="title-image"><img src="https://pic3.zhimg.com/v2-fa870f33a60ddad5664f56373e02d5c2_b.jpg" alt=""></div><p>Mac 版本 Zoom 中的漏洞允许任何恶意网站在未经许可的情况下启用摄像头。该漏洞可能会影响全球多达75万家公司使用 Zoom 进行日常业务。</p><h2>CVE 漏洞编号</h2><p><a href="https://link.zhihu.com/?target=https%3A//cve.mitre.org/cgi-bin/cvename.cgi%3Fname%3DCVE-2019-13449%26source%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">CVE-2019-13449</a>：DOS 漏洞 — 已在客户端版本 4.4.2 中修复</p><p><a href="https://link.zhihu.com/?target=https%3A//cve.mitre.org/cgi-bin/cvename.cgi%3Fname%3DCVE-2019-13450%26source%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">CVE-2019-13450</a>：信息披露（网络摄像头） — 尚未修复</p><h2>前言</h2><p>此漏洞允许任何网站在未经用户许可的情况下强行将用户加入到某个 Zoom 的会话中，并激活其摄像头。</p><p>除此之外，此漏洞通过不断把用户加入一个无效会话，以允许任何网页对 Mac 发起 DoS 攻击。</p><p>此外，如果你曾经安装过 Zoom 客户端然后将其卸载，那么你仍然有一个<code>localhost</code>服务器。一旦你访问某个网页，它就会迅速为你重新安装 Zoom 客户端。这个重新安装的“功能”至今依然有效。</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-bd42e5655f0874c12978bedf9e5dc44b_b.jpg" data-size="normal" data-rawwidth="500" data-rawheight="333" class="origin_image zh-lightbox-thumb" width="500" data-original="https://pic4.zhimg.com/v2-bd42e5655f0874c12978bedf9e5dc44b_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-bd42e5655f0874c12978bedf9e5dc44b_b.jpg" data-size="normal" data-rawwidth="500" data-rawheight="333" class="origin_image zh-lightbox-thumb lazy" width="500" data-original="https://pic4.zhimg.com/v2-bd42e5655f0874c12978bedf9e5dc44b_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-bd42e5655f0874c12978bedf9e5dc44b_b.jpg"/><figcaption>是的，没有开玩笑</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>此漏洞利用了 Zoom 一项非常简单的功能，你可以向任何人发送对话链接（例如<code>https://zoom.us/j/492468757</code>），当他们在浏览器中打开该链接时，他们的 Zoom 客户端就会自动运行。我很好奇这个功能是如何实现的，以及它是如何安全实现的。直到后来我发现，它确实存在很大的安全问题。</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-3059d5857216fe576540de986d307a7f_b.jpg" data-caption="" data-size="normal" data-rawwidth="631" data-rawheight="463" class="origin_image zh-lightbox-thumb" width="631" data-original="https://pic4.zhimg.com/v2-3059d5857216fe576540de986d307a7f_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-3059d5857216fe576540de986d307a7f_b.jpg" data-caption="" data-size="normal" data-rawwidth="631" data-rawheight="463" class="origin_image zh-lightbox-thumb lazy" width="631" data-original="https://pic4.zhimg.com/v2-3059d5857216fe576540de986d307a7f_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-3059d5857216fe576540de986d307a7f_b.jpg"/></figure><p class="ztext-empty-paragraph"><br/></p><p>这个漏洞最初是在2019年3月26日公开的。初始的漏洞报告中包括一个“快速修复”的建议描述，Zoom 只要简单地改变他们的代码逻辑就可以实现。Zoom 花了10天来确认这个漏洞。而关于如何修补漏洞的第一次实际讨论发生在2019年6月11日。此次对话确认了漏洞的详细信息，并讨论了 Zoom 的解决方案。但是，我很容易便在他们的修复方案中发现了绕过方法。此时，Zoom 距离漏洞公开时间（90天）只剩下18天。经过90天的等待，在公开披露截止日期前的最后一天，我发现 Zoom 采用了我最初的“快速修复”方案。</p><p>最终，Zoom 未能彻底解决这个漏洞，仅仅做出了些临时处理。拥有如此庞大用户群的公司应该更加主动地保护其用户免受攻击才对。</p><h2>时间线</h2><p>2019年3月8日 — 通过 Twitter 请求联系（无回复）。</p><p>2019年3月26日 — 通过电子邮件联系 Zoom，指明漏洞公开时间段为90天，并提供了“快速修复”的解决方案。</p><p>2019 年3月27日 — 收到回复，表示 Zoom 安全工程师不在办公室。并表示由于政策，即使在漏洞修补后也无法公开细节，并拒绝提供漏洞奖励。</p><p>2019年4月1日 — 要求确认漏洞。</p><p>2019年4月5日 — Zoom 的安全工程师确认了漏洞并讨论了问题的严重性。<a href="https://link.zhihu.com/?target=https%3A//nvd.nist.gov/vuln-metrics/cvss/v3-calculator%3Fvector%3DAV%253AN%252FAC%253AL%252FPR%253AN%252FUI%253AR%252FS%253AU%252FC%253AL%252FI%253AN%252FA%253AL%26source%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">CVSSv3评分5.4 / 10</a>。</p><p>2019年4月10日 — 向 Chromium 安全团队披露了漏洞。</p><p>2019年4月18日 — 根据 Chromium 团队的建议更新了 Zoom。</p><p>2019年4月19日 — 向 Mozilla FireFox 安全团队披露了漏洞。</p><p>2019年4月26日 — 与 Mozilla 和 Zoom 安全团队进行了视频通话，披露即将到期的DNS详细信息。</p><p>2019年6月7日 — 收到来自 Zoom 的电子邮件，内容是关于视频通话中讨论修复的问题。</p><p>2019年6月11日 — 与 Zoom 安全团队就即将披露进行视频通话。讨论了 Zoom 安全更新的缺陷。</p><p>2019年6月21日 — Zoom 报告漏洞得到修复。</p><p>2019年6月24日 — 90天公开披露截止日期结束。确定使用我的“快速修复”解决方案。</p><p>2019年7月7日 — 修复之后，摄像头漏洞依然存在。</p><p>2019 年7月8日 — 漏洞修复，细节公开。</p><h2>细节</h2><p>如果你在 Mac 上曾安装过 Zoom，那么在本地端口<code>19421</code>上就会运行着 Web 服务器。你可以通过在终端中运行<code>lsof -i :19421</code>来确认此服务器是否存在。</p><p>首先，在本地机器上安装一个未知的 Web 服务器很荒谬。其次，我访问的任何网站都可以与运行在我的机器上的这个 Web 服务器进行交互，这对于作为安全研究员的我来说，更是一个巨大的危险信号。</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-163070271da2407c9f3deea0a3c9efae_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="92" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic3.zhimg.com/v2-163070271da2407c9f3deea0a3c9efae_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-163070271da2407c9f3deea0a3c9efae_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="92" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic3.zhimg.com/v2-163070271da2407c9f3deea0a3c9efae_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-163070271da2407c9f3deea0a3c9efae_b.jpg"/><figcaption>通过 Zoom 网站上的代码，知道了这个 localhost 服务器。</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>我得知这个 Web 服务器存在的时候，我最初的想法是，如果在这个 Web 服务器的参数处理中存在任何的缓冲区溢出，那么别人就可以在我的机器上实现 RCE。</p><p>当访问其中一个 Zoom 的会话加入“连接”时，查看 Web 开发人员控制台的内容，应该会看到如下：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-57b08a46b6a71a6c8a22cbc7f6485da6_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="305" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic3.zhimg.com/v2-57b08a46b6a71a6c8a22cbc7f6485da6_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-57b08a46b6a71a6c8a22cbc7f6485da6_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="305" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic3.zhimg.com/v2-57b08a46b6a71a6c8a22cbc7f6485da6_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-57b08a46b6a71a6c8a22cbc7f6485da6_b.jpg"/><figcaption>浏览器控制台日志 https://zoom.us/j/492468757</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>我还发现，该页面不是发出常规的 AJAX 请求，而是从本地运行的 Zoom Web 服务器中加载图像。图像的不同尺寸代表了服务器的错误/状态代码。你可以从下面代码看到详细情况：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-73ed97acd95f724f2ada06ee6dfe9109_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="618" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic2.zhimg.com/v2-73ed97acd95f724f2ada06ee6dfe9109_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-73ed97acd95f724f2ada06ee6dfe9109_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="618" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic2.zhimg.com/v2-73ed97acd95f724f2ada06ee6dfe9109_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-73ed97acd95f724f2ada06ee6dfe9109_b.jpg"/><figcaption>这两个数字是Web服务器返回图像的像素尺寸</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>可怕的是，这个枚举似乎表明这个 Web 服务器可以做的不仅仅是启动 Zoom 对话。我发现即使用户卸载了 Zoom，这个 Web 服务器也可以重新安装，稍后会详细介绍。</p><p>为什么这个 Web 服务器会返回以图像文件尺寸编码的数据？很明显，它是为了绕过<a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Cross-origin_resource_sharing%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">跨域资源共享（CORS）</a>。出于一些原因，浏览器明确忽略了在<code>localhost</code>上运行的服务器的任何 CORS 策略。</p><blockquote>Chrome <a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/chromium/issues/detail%3Fid%3D67743%26source%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">does not support localhost for CORS requests</a>(an open bug since 2010).<br/>-<a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/10883211/deadly-cors-when-http-localhost-is-the-origin%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">https://stackoverflow.com/questions/10883211/deadly-cors-when-http-localhost-is-the-origin</a></blockquote><p>我猜这是出于安全原因故意这样做的。无论如何，Zoom 这一举措也很不安全。</p><h2>视频通话漏洞</h2><p>我创建了一个具有不同帐户的视频通话，并用 Postman 开始抓包和改包，尝试启动 Zoom 会话所需的最简短 GET 请求。</p><p>有很多随机参数发送到<code>localhost</code> Web服务器，但最重要的是以下内容：</p><ul><li>action=join </li><li>confno = [无论会议号码是什么]</li></ul><p>访问如下的 GET 请求，我成功进入另一个帐户创建的 Zoom 对话。</p><div class="highlight"><pre><code class="language-text">http://localhost:19421/launch?action=join&amp;confno=[some confrence number]</code></pre></div><p>一旦有了这个切入点，我就开始寻找可以利用这个链接所进行的其他动作。即使在搜索各种公共文档和公共 ProtoBuff 模式之后，我也无法找到任何关于可能存在哪些隐藏功能的提示。而且据我所知，这个 Web 服务器的 API 完全没有记录，所以也算预料之中。</p><p>所以，我现在可以强迫任何用户加入我的对话，但是，“新对话”的默认设置是允许用户选择是否加入他们的音频/视频。</p><p>直到现在，你仍然可以使用该“链接”来强迫他人加入某个对话。</p><p>不久后，我了解到 Zoom 安全漏洞中的 <a href="https://link.zhihu.com/?target=https%3A//www.tenable.com/blog/tenable-research-advisory-zoom-unauthorized-command-execution-cve-2018-15715%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">Tenable Remote Code Execution 漏洞</a>，该漏洞是在6个月前被修复的。如果将 Tenable 漏洞与此漏洞结合使用，则可对安装了 Zoom 的 Mac 实行远程代码攻击。</p><p>将来如果找到类似的漏洞，也可和我这个漏洞进行结合，对任何访问了恶意网站的用户实行远程代码攻击。在此，我建议任何仍在使用 ZOOM 4.1.33259.0925 版本或更低版本的用户迅速升级软件。</p><p>到目前为止，我只是强制让他人加入对话，并没有直接的安全威胁。我开始想如何才能激活他人的摄像头。不久后，我发现了如下设置：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-5c217f6194a282437c465c53b8c05c77_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="923" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic4.zhimg.com/v2-5c217f6194a282437c465c53b8c05c77_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-5c217f6194a282437c465c53b8c05c77_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="923" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic4.zhimg.com/v2-5c217f6194a282437c465c53b8c05c77_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-5c217f6194a282437c465c53b8c05c77_b.jpg"/><figcaption>你可以选择在加入会话时启用参与者的摄像头</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>在设置会话时启用“参与者：开”，我发现任何加入会话的人都会自动连接他们的视频。</p><p>经过验证后，发现这个设置对所有参与者有效。</p><h2>PoC</h2><p>本地客户端 Zoom 的 Web 服务器是自动作为后台进程运行，因此，只要用户点击了恶意网页，不管运不运行 Zoom，攻击都能生效。</p><div class="highlight"><pre><code class="language-text">&lt;img src=&#34;http://localhost:19421/launch?action=join&amp;confno=492468757&#34;/&gt;

&lt;iframe src=&#34;https://zoom.us/j/492468757&#34;/&gt;</code></pre></div><p>所有网站只需要将上述内容嵌入到他们的网站中，只要有人访问即会中招。这可以嵌入恶意广告中，也可以用作网络钓鱼活动的一部分。如果我是一个真实的攻击者，我可能会投入更多的时间在 Zoom 的网站上运行 JavaScript 中的代码。</p><p>这里有一个演示PoC：<a href="https://link.zhihu.com/?target=https%3A//jlleitschuh.org/zoom_vulnerability_poc/%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">https://jlleitschuh.org/zoom_vulnerability_poc/</a></p><p><b>（Warning：</b>在Mac上单击此链接将进入 Zoom 会话！<b>）</b><br/> </p><p>还有一个可激活摄像头的PoC： <a href="https://link.zhihu.com/?target=https%3A//jlleitschuh.org/zoom_vulnerability_poc/zoompwn_iframe.html%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">https://jlleitschuh.org/zoom_vulnerability_poc/zoompwn_iframe.html</a></p><p><b>（Warning：</b>在Mac上单击此链接将打开摄像头，进入Zoom对话！<b>）</b></p><h2>快速修复</h2><p>为了修复漏洞的“自动加入视频”部分，最快速的方法就是 Zoom 把那个功能完全禁止或是直接删除。虽然这不能完全修复漏洞，但是它可以作为一种快速方式来保护用户免受此攻击的隐私组件的入侵。</p><p>我还建议，如果麦克风有一样的自启功能，也应该被禁用。</p><p>对于这些建议，我收到了以下回复：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-ca6b088880b9fabdf3b87b097245d228_b.jpg" data-size="normal" data-rawwidth="554" data-rawheight="355" class="origin_image zh-lightbox-thumb" width="554" data-original="https://pic1.zhimg.com/v2-ca6b088880b9fabdf3b87b097245d228_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-ca6b088880b9fabdf3b87b097245d228_b.jpg" data-size="normal" data-rawwidth="554" data-rawheight="355" class="origin_image zh-lightbox-thumb lazy" width="554" data-original="https://pic1.zhimg.com/v2-ca6b088880b9fabdf3b87b097245d228_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-ca6b088880b9fabdf3b87b097245d228_b.jpg"/><figcaption>简而言之，就是：正在评估，后续会通知你。</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>Zoom 最终还是修复了摄像头自启动的缺陷，但对强制加入对话这一问题并没有处理。</p><h2>拒绝服务（DoS）漏洞</h2><p>另一方面，这个漏洞也可让攻击者对任何用户的机器进行 DoS 攻击。只要不停发送包含错误数字的 GET 请求，Zoom 应用程序将不断向操作系统请求激活。以下的 PoC 简单地演示了此漏洞。</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-0ab44734b18077d3b013a15c9dc1fe48_b.jpg" data-size="normal" data-rawwidth="763" data-rawheight="329" class="origin_image zh-lightbox-thumb" width="763" data-original="https://pic1.zhimg.com/v2-0ab44734b18077d3b013a15c9dc1fe48_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-0ab44734b18077d3b013a15c9dc1fe48_b.jpg" data-size="normal" data-rawwidth="763" data-rawheight="329" class="origin_image zh-lightbox-thumb lazy" width="763" data-original="https://pic1.zhimg.com/v2-0ab44734b18077d3b013a15c9dc1fe48_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-0ab44734b18077d3b013a15c9dc1fe48_b.jpg"/><figcaption>PoC: 针对 Mac 上任何 Zoom 用户的 DoS 攻击</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>此 DoS 漏洞已在 Zoom 客户端的 4.4.2 版中进行了修补。</p><h2>安装漏洞</h2><p>如果你曾在计算机上安装了 Zoom，则会自动安装此 Web 服务器。当从计算机上卸载 Zoom时，它仍会继续运行。</p><p>这个 Web 服务器除了加入会话，还能安装和更新 Zoom 软件。我对这个 Web 服务器进行了一些额外的反编译，以查看这些端点还有什么可以调用的代码路径。</p><p>使用 Hopper Disassembler 反汇编这个 Web 服务器的 Objective-C 字节码，我发现了以下方法：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-8d52bf450e696ec76b945e0b46234621_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="263" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic2.zhimg.com/v2-8d52bf450e696ec76b945e0b46234621_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-8d52bf450e696ec76b945e0b46234621_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="263" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic2.zhimg.com/v2-8d52bf450e696ec76b945e0b46234621_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-8d52bf450e696ec76b945e0b46234621_b.jpg"/><figcaption>从一些 API 请求中获取参数，并使用它来制作用于升级 Zoom 安装版本的下载 URL？</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>该方法和以下逻辑有关：</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-9031a338363ab76e9f6f1dda76a51dab_b.jpg" data-size="normal" data-rawwidth="1000" data-rawheight="51" class="origin_image zh-lightbox-thumb" width="1000" data-original="https://pic4.zhimg.com/v2-9031a338363ab76e9f6f1dda76a51dab_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-9031a338363ab76e9f6f1dda76a51dab_b.jpg" data-size="normal" data-rawwidth="1000" data-rawheight="51" class="origin_image zh-lightbox-thumb lazy" width="1000" data-original="https://pic4.zhimg.com/v2-9031a338363ab76e9f6f1dda76a51dab_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-9031a338363ab76e9f6f1dda76a51dab_b.jpg"/><figcaption>确保下载 URL 仅在“可信任”子域下</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>在安装了 Zoom 的所有 Mac 上运行的 Web 服务器 API 是一个端点，允许此服务器更新或重新安装当前版本的 Zoom。</p><p>你可以通过执行以下操作来确认此逻辑确实存在：</p><p>1. 如果尚未安装 Zoom 客户端，请在计算机上安装它。</p><p>2. 打开 Zoom 客户端，然后将其关闭。</p><p>3. 通过将 Applications/zoom.us.app 文件拖到回收站，从计算机中卸载 Zoom 客户端。</p><p>4. 打开任何 Zoom 链接，Applications 文件夹将会“帮助”重新安装 Zoom，并由此 Web 服务器再次启动。</p><p>我还研究了一下用于安装 Zoom 软件的相关网址。例如，以下是访问<a href="https://link.zhihu.com/?target=https%3A//zipow.com/upgrade%3Fos%3Dmac" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">zipow.com/upgrade?</span><span class="invisible">os=mac</span><span class="ellipsis"></span></a>的结果：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-9648bede432e56b2d0cd29434eeddcba_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="139" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic3.zhimg.com/v2-9648bede432e56b2d0cd29434eeddcba_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-9648bede432e56b2d0cd29434eeddcba_b.jpg" data-size="normal" data-rawwidth="700" data-rawheight="139" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic3.zhimg.com/v2-9648bede432e56b2d0cd29434eeddcba_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-9648bede432e56b2d0cd29434eeddcba_b.jpg"/><figcaption>如果需要重新安装 Zoom，可以清楚地看到用于下载 Zoom 安装程序的 URL</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><p>在上述列表中我还发现一些快到期的域名，例如 <a href="https://link.zhihu.com/?target=http%3A//zoomgov.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer">zoomgov.com</a> 在2019年5月1日到期，一旦被攻击者接管，造成的损失不可估量。目前该域名已重新续期。</p><h2>基本安全漏洞</h2><p>在我看来，浏览器应该强制执行一个基本的沙箱，以防止在用户计算机上执行恶意代码。</p><p>如果你尝试使用 Javascript AJAX 请求直接启动相同的漏洞利用程序，则会遇到以下异常。</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-c2030ecf9d3adb8af16d85379a6b0af3_b.jpg" data-size="normal" data-rawwidth="1000" data-rawheight="31" class="origin_image zh-lightbox-thumb" width="1000" data-original="https://pic4.zhimg.com/v2-c2030ecf9d3adb8af16d85379a6b0af3_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-c2030ecf9d3adb8af16d85379a6b0af3_b.jpg" data-size="normal" data-rawwidth="1000" data-rawheight="31" class="origin_image zh-lightbox-thumb lazy" width="1000" data-original="https://pic4.zhimg.com/v2-c2030ecf9d3adb8af16d85379a6b0af3_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-c2030ecf9d3adb8af16d85379a6b0af3_b.jpg"/><figcaption>浏览器禁止来自 Javascript 的所有 localhost 请求</figcaption></figure><p class="ztext-empty-paragraph"><br/></p><h2>CORS-RFC1918</h2><p>在与 Chromium 和 Mozilla Firefox 安全团队讨论此漏洞时，他们都表示无能为力。Chromium 团队向我推荐了 <a href="https://link.zhihu.com/?target=https%3A//wicg.github.io/cors-rfc1918/%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">CORS-RFC1918</a>，它要求站点对本地资源（如 <code>localhost</code> 和<code>192.168.1.*</code>）发出请求前，先进行权限验证。</p><h2>Zoom的修复方案</h2><p>Zoom 团队提出的解决方案是以数字方式“签署”对客户提出的请求。但是，这只是意味着攻击者必须拥有一个后端服务器，该服务器首先向 Zoom 站点发出请求以获得有效签名，然后再将签名转发给客户端。</p><p>他们还建议将签名锁定到发出请求的 IP。这意味着只要攻击者的服务器位于与受害者相同的 NAT 路由器后面，攻击仍然有效。</p><p>我向 Zoom 团队描述了这两种解决方案是不足以完全保护用户的。不幸的是，距离90天的期限只剩下18天，Zoom 团队找不到更好的解决方案。</p><p>于是，即使还有缺陷，新解决方案还是上架了。此新签名或 token 嵌入在一个名为<code>confid</code>的新参数中。绕过这个新参数<code>confid</code>检查的最简单的方法是使用上述<code>iframe</code>解决方法。或者，如果你和受害者位于同一 NAT 路由器之后，你可以请求加入页面，从 HTML 文档中提取<code>#lhs_launch_parames</code>字段并将其嵌入来自恶意页面的 HTML 响应中。</p><h2>结论</h2><p>截至2015年，<a href="https://link.zhihu.com/?target=https%3A//www.globenewswire.com/news-release/2015/02/04/1130354/0/en/Zoom-Raises-30M-in-Series-C-Funding-Led-by-Emergence-Capital.html%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">Zoom 拥有超过4000万用户</a>。考虑到 Mac 占 PC 市场的10％，而且自2015年以来 Zoom 已经有了显着的增长，我们可以假设至少有400万的 Zoom 用户正在使用 Mac。Zoom，Google Meet 和 Skype for Business 等工具是当今现代办公的主要内容。</p><p>在我与 Zoom 安全团队的对话中，他们似乎多次争辩说这个漏洞的严重性是有限的，因为它需要“用户交互”才能实行攻击。我对此的回应是“我强烈建议不要使用‘用户交互’这个词，因为这个‘用户交互’只是点击一个链接或访问一个网页。”</p><p>为了充分保护用户，我真的觉得这个<code>localhost</code> Web 服务器的解决方案应该被删除。使用浏览器注册自定义 URI 处理程序（例如，一个<code>zoom://</code>URI 处理程序）等替代方法是一种更安全的解决方案。当触发这些 URI 处理程序时，浏览器会明确提示用户确认打开应用程序。根据 Zoom 团队的说法，该<code>localhost</code>服务器继续存在的原因是 Apple 的 Safari 不支持 URI 处理程序。</p><h2>结果</h2><p>不幸的是，Zoom 并未在我给他们的90天内修复此漏洞。因此， Mac 上 Zoom 的400多万用户现在很容易通过使用此服务而受到隐私侵犯。</p><p>此外，由于缺乏足够的自动更新功能，许多用户在新版本发布后的几个月内继续运行过时的 Zoom 版本，这使得他们更容易受到类似的攻击。</p><h2>补丁</h2><p>如果你想自己修补此漏洞，可以执行以下操作。<br/>加入会话时，禁用 Zoom 的功能打开网络摄像头。</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-0a7fb1d50c875ecd0ad4c38e9dc8ea9e_b.jpg" data-caption="" data-size="normal" data-rawwidth="700" data-rawheight="574" class="origin_image zh-lightbox-thumb" width="700" data-original="https://pic3.zhimg.com/v2-0a7fb1d50c875ecd0ad4c38e9dc8ea9e_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-0a7fb1d50c875ecd0ad4c38e9dc8ea9e_b.jpg" data-caption="" data-size="normal" data-rawwidth="700" data-rawheight="574" class="origin_image zh-lightbox-thumb lazy" width="700" data-original="https://pic3.zhimg.com/v2-0a7fb1d50c875ecd0ad4c38e9dc8ea9e_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-0a7fb1d50c875ecd0ad4c38e9dc8ea9e_b.jpg"/></figure><p class="ztext-empty-paragraph"><br/></p><p>或者，使用此终端命令。</p><div class="highlight"><pre><code class="language-text"># For just your local account
defaults write ~/Library/Preferences/us.zoom.config.plist ZDisableVideo 1
# For all users on the machine
sudo defaults write /Library/Preferences/us.zoom.config.plist ZDisableVideo 1</code></pre></div><p>要关闭 Web 服务器，运行<code>lsof -i :19421</code>以获取进程的 PID，然后执行<code>kill -9 [process number]</code>。最后，你就可以删除该<code>~/.zoomus</code>目录和其中的 Web 服务器应用程序文件。</p><p>为了防止在更新后重新安装此服务器，你可以在终端中执行以下操作：</p><div class="highlight"><pre><code class="language-text"># To prevent the vulnerable server from running on your machine
# (this does not impact Zoom functionality), run these two lines in your Terminal. 

pkill &#34;ZoomOpener&#34;; rm -rf ~/.zoomus; touch ~/.zoomus &amp;&amp; chmod 000 ~/.zoomus;

pkill &#34;RingCentralOpener&#34;; rm -rf ~/.ringcentralopener; touch ~/.ringcentralopener &amp;&amp; chmod 000 ~/.ringcentralopener;

# (You may need to run these lines for each user on your machine.)</code></pre></div><h2>研究人员须知</h2><p>鉴于大量的用户安装了 Zoom，我强烈建议其他研究人员花时间探索此 Zoom Web 服务器以查看存在的其他漏洞。话虽如此，我还建议任何在 Zoom 软件中发现漏洞的研究人员都不要直接向 Zoom 报告漏洞。相反，我建议研究人员通过 <a href="https://link.zhihu.com/?target=https%3A//www.zerodayinitiative.com/%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">Zero Day Initiative（ZDI）</a>报告这些漏洞。ZDI 披露计划为供应商提供120天的时间来解决漏洞，并向研究人员支付研究费用，另外，研究人员可以公开披露他们的研究结果。</p><p>如果要为自己反编译 Zoom 客户端应用程序，它位于计算机的<code>~/.zoomus</code>目录中。</p><p>我的 PoC 示例的源代码存储库可以在 <a href="https://link.zhihu.com/?target=https%3A//github.com/JLLeitschuh/zoom_vulnerability_poc%3Fsource%3Dpost_page---------------------------" class=" wrap external" target="_blank" rel="nofollow noreferrer">GitHub</a> 上找到。</p><p>来源：<a href="https://link.zhihu.com/?target=https%3A//medium.com/bugbountywriteup/zoom-zero-day-4-million-webcams-maybe-an-rce-just-get-them-to-visit-your-website-ac75c83f4ef5" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">medium.com/bugbountywri</span><span class="invisible">teup/zoom-zero-day-4-million-webcams-maybe-an-rce-just-get-them-to-visit-your-website-ac75c83f4ef5</span><span class="ellipsis"></span></a></p>