<p>在阅读有关XSS的材料时，我们通常会看到经典的&lt;script&gt; alert（1）&lt;/ script&gt;作为这种漏洞的证明（PoC –概念证明）。虽然是正确的，但它并没有超出此范围，这使得该领域的新手可以寻求更多解决方法来应对这种情况。因此，这是每个人都应该知道，并且能够利用下面列举的7种XSS漏洞。</p><p>在这里，我们建立一个网页来显示它们的变化（单引号或双引号）以进行训练：</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-257a5d3ba69ff27de12fb3f0814e3fd8_b.jpg" data-caption="" data-size="normal" data-rawwidth="819" data-rawheight="597" class="origin_image zh-lightbox-thumb" width="819" data-original="https://pic1.zhimg.com/v2-257a5d3ba69ff27de12fb3f0814e3fd8_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-257a5d3ba69ff27de12fb3f0814e3fd8_b.jpg" data-caption="" data-size="normal" data-rawwidth="819" data-rawheight="597" class="origin_image zh-lightbox-thumb lazy" width="819" data-original="https://pic1.zhimg.com/v2-257a5d3ba69ff27de12fb3f0814e3fd8_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-257a5d3ba69ff27de12fb3f0814e3fd8_b.jpg"/></figure><p>在源代码的开头，有一个HTML注释，其中包含用于触发每种情况的所有参数，它们都适用于GET和POST请求。</p><p>我们可以看到，所有情况都是基于源的，这意味着注入总是出现在HTTP响应主体检索到的源代码中。独立于被反映或存储的类型，这里重要的是它们在“显示”时出现的上下文，因此我们将始终使用被反映的类型作为主要示例。有些XSS缺陷不会出现在源代码中，而基于DOM的缺陷不会在此处涵盖。</p><p>请记住，仅在没有本地XSS过滤的浏览器（例如<a href="https://link.zhihu.com/?target=https%3A//www.mozilla.org/firefox/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Mozilla Firefox</a>）中尝试以下示例。</p><h2><b>1. URL反射</b></h2><p>当URL在源代码中以某种方式反映出来时，我们可以向其添加自己的XSS vector/payload。对于PHP页面，可以使用斜杠（/）在页面名称后添加URL中的任何内容（不需要更改）。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-7d7dded06453643d5b711779a0baabb8_b.jpg" data-caption="" data-size="normal" data-rawwidth="1261" data-rawheight="699" class="origin_image zh-lightbox-thumb" width="1261" data-original="https://pic1.zhimg.com/v2-7d7dded06453643d5b711779a0baabb8_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-7d7dded06453643d5b711779a0baabb8_b.jpg" data-caption="" data-size="normal" data-rawwidth="1261" data-rawheight="699" class="origin_image zh-lightbox-thumb lazy" width="1261" data-original="https://pic1.zhimg.com/v2-7d7dded06453643d5b711779a0baabb8_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-7d7dded06453643d5b711779a0baabb8_b.jpg"/></figure><p>需要使用前导标签破折号（“&gt;”）来突破当前标签，以便我们插入一个新的标签。</p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-c97181689bdfde5da845dd7a32767ac1_b.png" data-caption="" data-size="normal" data-rawwidth="568" data-rawheight="72" class="origin_image zh-lightbox-thumb" width="568" data-original="https://pic2.zhimg.com/v2-c97181689bdfde5da845dd7a32767ac1_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-c97181689bdfde5da845dd7a32767ac1_b.png" data-caption="" data-size="normal" data-rawwidth="568" data-rawheight="72" class="origin_image zh-lightbox-thumb lazy" width="568" data-original="https://pic2.zhimg.com/v2-c97181689bdfde5da845dd7a32767ac1_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-c97181689bdfde5da845dd7a32767ac1_b.png"/></figure><p>尽管使用不同语言有多种原因（反射可能也会出现在路径或URL参数中），但对于PHP来说，原因通常是提交表单的操作字段中的全局变量$_SERVER[“PHP_SELF”]</p><h2><b>2.简单的HTMLi（HTML注入）</b></h2><p>最简单的输入就是在现有标记之间或之后的代码中直接反映出来。无需转义或破坏任何内容，任何简单的XSS vector（如&lt;tag handler = jsCode&gt;）都可以完成工作。</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-ee194edc58b6a9ba26f09b985564e3f7_b.jpg" data-caption="" data-size="normal" data-rawwidth="1333" data-rawheight="694" class="origin_image zh-lightbox-thumb" width="1333" data-original="https://pic4.zhimg.com/v2-ee194edc58b6a9ba26f09b985564e3f7_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-ee194edc58b6a9ba26f09b985564e3f7_b.jpg" data-caption="" data-size="normal" data-rawwidth="1333" data-rawheight="694" class="origin_image zh-lightbox-thumb lazy" width="1333" data-original="https://pic4.zhimg.com/v2-ee194edc58b6a9ba26f09b985564e3f7_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-ee194edc58b6a9ba26f09b985564e3f7_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-0730e1330505defbc7468bb99952e823_b.jpg" data-caption="" data-size="normal" data-rawwidth="672" data-rawheight="119" class="origin_image zh-lightbox-thumb" width="672" data-original="https://pic4.zhimg.com/v2-0730e1330505defbc7468bb99952e823_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-0730e1330505defbc7468bb99952e823_b.jpg" data-caption="" data-size="normal" data-rawwidth="672" data-rawheight="119" class="origin_image zh-lightbox-thumb lazy" width="672" data-original="https://pic4.zhimg.com/v2-0730e1330505defbc7468bb99952e823_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-0730e1330505defbc7468bb99952e823_b.jpg"/></figure><h2><b>3.内联HTMLi</b></h2><p>与上一个几乎一样简单，但前面带有一个小写的“&gt;”以打破当前标签。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-ecb4eaf15134fe729bf3127d12653308_b.jpg" data-caption="" data-size="normal" data-rawwidth="1360" data-rawheight="697" class="origin_image zh-lightbox-thumb" width="1360" data-original="https://pic1.zhimg.com/v2-ecb4eaf15134fe729bf3127d12653308_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-ecb4eaf15134fe729bf3127d12653308_b.jpg" data-caption="" data-size="normal" data-rawwidth="1360" data-rawheight="697" class="origin_image zh-lightbox-thumb lazy" width="1360" data-original="https://pic1.zhimg.com/v2-ecb4eaf15134fe729bf3127d12653308_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-ecb4eaf15134fe729bf3127d12653308_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-47f4a3dc1c3ecbed0c071cca859463d6_b.png" data-caption="" data-size="normal" data-rawwidth="981" data-rawheight="117" class="origin_image zh-lightbox-thumb" width="981" data-original="https://pic3.zhimg.com/v2-47f4a3dc1c3ecbed0c071cca859463d6_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-47f4a3dc1c3ecbed0c071cca859463d6_b.png" data-caption="" data-size="normal" data-rawwidth="981" data-rawheight="117" class="origin_image zh-lightbox-thumb lazy" width="981" data-original="https://pic3.zhimg.com/v2-47f4a3dc1c3ecbed0c071cca859463d6_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-47f4a3dc1c3ecbed0c071cca859463d6_b.png"/></figure><h2><b>4.内联HTMLi：没有标签破损</b></h2><p>当输入置于HTML属性中且过滤条件大于字符（&gt;）时，就无法像上一种情况那样突破当前标签。</p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-3e79583cd54eb2be6e23fc5b846ba762_b.png" data-caption="" data-size="normal" data-rawwidth="1202" data-rawheight="107" class="origin_image zh-lightbox-thumb" width="1202" data-original="https://pic3.zhimg.com/v2-3e79583cd54eb2be6e23fc5b846ba762_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-3e79583cd54eb2be6e23fc5b846ba762_b.png" data-caption="" data-size="normal" data-rawwidth="1202" data-rawheight="107" class="origin_image zh-lightbox-thumb lazy" width="1202" data-original="https://pic3.zhimg.com/v2-3e79583cd54eb2be6e23fc5b846ba762_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-3e79583cd54eb2be6e23fc5b846ba762_b.png"/></figure><p>因此，我们使用适合于我们要注入的标签的event handler，如：</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-ba6f163333a93b613315fdb47fce9438_b.jpg" data-caption="" data-size="normal" data-rawwidth="1385" data-rawheight="585" class="origin_image zh-lightbox-thumb" width="1385" data-original="https://pic1.zhimg.com/v2-ba6f163333a93b613315fdb47fce9438_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-ba6f163333a93b613315fdb47fce9438_b.jpg" data-caption="" data-size="normal" data-rawwidth="1385" data-rawheight="585" class="origin_image zh-lightbox-thumb lazy" width="1385" data-original="https://pic1.zhimg.com/v2-ba6f163333a93b613315fdb47fce9438_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-ba6f163333a93b613315fdb47fce9438_b.jpg"/></figure><p>这将关闭该值，并为插入onmouseover event handler 提供了空间。指向alert（1）后跟双斜杠以注释掉悬挂的引号，当受害者将鼠标指向受影响的输入字段时，将触发js弹出窗口。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-5f45126c492f88fa6b5a048b143ce554_b.png" data-caption="" data-size="normal" data-rawwidth="803" data-rawheight="62" class="origin_image zh-lightbox-thumb" width="803" data-original="https://pic1.zhimg.com/v2-5f45126c492f88fa6b5a048b143ce554_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-5f45126c492f88fa6b5a048b143ce554_b.png" data-caption="" data-size="normal" data-rawwidth="803" data-rawheight="62" class="origin_image zh-lightbox-thumb lazy" width="803" data-original="https://pic1.zhimg.com/v2-5f45126c492f88fa6b5a048b143ce554_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-5f45126c492f88fa6b5a048b143ce554_b.png"/></figure><h2><b>5. HTMLi 中的 Js（JavaScript）block</b></h2><p>输入有时会落入javascript block中，通常是代码中某些变量的值。但是，因为HTML标签在浏览器的解析中具有优先权，所以我们可以简单地终止该块并插入一个新标签。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-b2e7efe4a4badacf41cc3860bbc29a48_b.jpg" data-caption="" data-size="normal" data-rawwidth="1281" data-rawheight="563" class="origin_image zh-lightbox-thumb" width="1281" data-original="https://pic1.zhimg.com/v2-b2e7efe4a4badacf41cc3860bbc29a48_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-b2e7efe4a4badacf41cc3860bbc29a48_b.jpg" data-caption="" data-size="normal" data-rawwidth="1281" data-rawheight="563" class="origin_image zh-lightbox-thumb lazy" width="1281" data-original="https://pic1.zhimg.com/v2-b2e7efe4a4badacf41cc3860bbc29a48_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-b2e7efe4a4badacf41cc3860bbc29a48_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-ba839c7d187b8c3263d347ead29b81f1_b.png" data-caption="" data-size="normal" data-rawwidth="610" data-rawheight="86" class="origin_image zh-lightbox-thumb" width="610" data-original="https://pic2.zhimg.com/v2-ba839c7d187b8c3263d347ead29b81f1_r.jpg"/></noscript><img src="https://pic2.zhimg.com/v2-ba839c7d187b8c3263d347ead29b81f1_b.png" data-caption="" data-size="normal" data-rawwidth="610" data-rawheight="86" class="origin_image zh-lightbox-thumb lazy" width="610" data-original="https://pic2.zhimg.com/v2-ba839c7d187b8c3263d347ead29b81f1_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-ba839c7d187b8c3263d347ead29b81f1_b.png"/></figure><h2><b>6.简单的Js注入</b></h2><p>如果以某种方式过滤了script tag，则先前的方法则会失效。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-98020733ff655dcb757a2395ecada8e0_b.png" data-caption="" data-size="normal" data-rawwidth="793" data-rawheight="70" class="origin_image zh-lightbox-thumb" width="793" data-original="https://pic1.zhimg.com/v2-98020733ff655dcb757a2395ecada8e0_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-98020733ff655dcb757a2395ecada8e0_b.png" data-caption="" data-size="normal" data-rawwidth="793" data-rawheight="70" class="origin_image zh-lightbox-thumb lazy" width="793" data-original="https://pic1.zhimg.com/v2-98020733ff655dcb757a2395ecada8e0_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-98020733ff655dcb757a2395ecada8e0_b.png"/></figure><p>因此，我们可以注入javascript代码。一种已知的方法是通过将易受攻击的变量的值“连接”到我们要执行的代码。因为我们不允许任何引号挂起，所以我们先中断，将其连接到我们的代码（带有减号），然后进行相反的操作（连接并插入一个引号）以获取有效的js语法。</p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-88bd53c27b846053db4150f3e19760bb_b.jpg" data-caption="" data-size="normal" data-rawwidth="1304" data-rawheight="242" class="origin_image zh-lightbox-thumb" width="1304" data-original="https://pic4.zhimg.com/v2-88bd53c27b846053db4150f3e19760bb_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-88bd53c27b846053db4150f3e19760bb_b.jpg" data-caption="" data-size="normal" data-rawwidth="1304" data-rawheight="242" class="origin_image zh-lightbox-thumb lazy" width="1304" data-original="https://pic4.zhimg.com/v2-88bd53c27b846053db4150f3e19760bb_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-88bd53c27b846053db4150f3e19760bb_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-794c84aded6e6f874134096dcb62d81a_b.png" data-caption="" data-size="normal" data-rawwidth="540" data-rawheight="63" class="origin_image zh-lightbox-thumb" width="540" data-original="https://pic3.zhimg.com/v2-794c84aded6e6f874134096dcb62d81a_r.jpg"/></noscript><img src="https://pic3.zhimg.com/v2-794c84aded6e6f874134096dcb62d81a_b.png" data-caption="" data-size="normal" data-rawwidth="540" data-rawheight="63" class="origin_image zh-lightbox-thumb lazy" width="540" data-original="https://pic3.zhimg.com/v2-794c84aded6e6f874134096dcb62d81a_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-794c84aded6e6f874134096dcb62d81a_b.png"/></figure><h2><b>7. Escaped Js Injection</b></h2><p>在前一种情况下，如果用反斜杠（\）对引号（负责变量值的突破）进行转义，则注入将不起作用（语法无效）。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-206b68fe6c6a0f0bd82abe1f038db1f0_b.png" data-caption="" data-size="normal" data-rawwidth="768" data-rawheight="63" class="origin_image zh-lightbox-thumb" width="768" data-original="https://pic1.zhimg.com/v2-206b68fe6c6a0f0bd82abe1f038db1f0_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-206b68fe6c6a0f0bd82abe1f038db1f0_b.png" data-caption="" data-size="normal" data-rawwidth="768" data-rawheight="63" class="origin_image zh-lightbox-thumb lazy" width="768" data-original="https://pic1.zhimg.com/v2-206b68fe6c6a0f0bd82abe1f038db1f0_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-206b68fe6c6a0f0bd82abe1f038db1f0_b.png"/></figure><p>为此，我们有一个小技巧：转义。我们 	我们可以插入一个前反斜杠，这样后面的引号将会完成闭合，从而触发传入的js代码。在插入我们想要执行的js代码后，需要对其余部分进行注释，因为剩余的部分已经无需执行或重复执行。</p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-aa4f24bf8ee9fe77b2ee7c241daef5ac_b.jpg" data-caption="" data-size="normal" data-rawwidth="1241" data-rawheight="574" class="origin_image zh-lightbox-thumb" width="1241" data-original="https://pic1.zhimg.com/v2-aa4f24bf8ee9fe77b2ee7c241daef5ac_r.jpg"/></noscript><img src="https://pic1.zhimg.com/v2-aa4f24bf8ee9fe77b2ee7c241daef5ac_b.jpg" data-caption="" data-size="normal" data-rawwidth="1241" data-rawheight="574" class="origin_image zh-lightbox-thumb lazy" width="1241" data-original="https://pic1.zhimg.com/v2-aa4f24bf8ee9fe77b2ee7c241daef5ac_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-aa4f24bf8ee9fe77b2ee7c241daef5ac_b.jpg"/></figure><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-32a103b43239d2d54a3a3502da6cf5ef_b.png" data-caption="" data-size="normal" data-rawwidth="706" data-rawheight="63" class="origin_image zh-lightbox-thumb" width="706" data-original="https://pic4.zhimg.com/v2-32a103b43239d2d54a3a3502da6cf5ef_r.jpg"/></noscript><img src="https://pic4.zhimg.com/v2-32a103b43239d2d54a3a3502da6cf5ef_b.png" data-caption="" data-size="normal" data-rawwidth="706" data-rawheight="63" class="origin_image zh-lightbox-thumb lazy" width="706" data-original="https://pic4.zhimg.com/v2-32a103b43239d2d54a3a3502da6cf5ef_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-32a103b43239d2d54a3a3502da6cf5ef_b.png"/></figure>