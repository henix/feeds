<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>雾雨魔法店</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/</link>
<description>http://zhuanlan.zhihu.com/marisa/20419321</description>
<language>zh-cn</language>
<lastBuildDate>Mon, 20 Apr 2020 19:19:57 +0800</lastBuildDate>
<item>
<title>Comonad在图像处理中的应用</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-04-20-133460864.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/133460864&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c7aede1bfc4f7a1f7eff872777d69783_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;前几天我回答了一个关于comonad的问题&lt;a href=&quot;https://www.zhihu.com/question/31642688/answer/1147007286&quot; class=&quot;internal&quot;&gt;Monad和Comonad到底是什么东西？&lt;/a&gt;。其中有讲到comonad的应用例子，但都还不够直观和实用。后来找到一个Comonad在图像处理中的应用的例子，觉得不错，在这里重新整理一下写出来。与大家分享一下这个例子。&lt;/p&gt;&lt;p&gt;我们已经知道，Comonad最通常的用法是作为一个无穷的stream，可以源源不断的通过扩展复制生成新的无穷的stream。只要提供从stream中计算得到值的cokleisli函数，我们就可以得到新的stream，或者新的有限的列表，或者一个累加的值。&lt;/p&gt;&lt;p&gt;例如下面就是生成无穷的自然数的stream，和对自然数的stream进行滑动窗口求和的Comonad的应用例子。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;kr&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;deriving&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Show&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Functor&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Comonad&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;extract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;duplicate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;duplicate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;nats&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;nats&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;getWindowSum&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;getWindowSum&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWindowSum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;xs&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;undefined&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;tensWindows&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;tensWindows&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWindowSum&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里nats调用generate生成了一个有无穷多个自然数的stream，其类型是Stream Integer。&lt;/p&gt;&lt;p&gt;nats生成自然数的stream的计算步骤效果如下所示，逐行累加起来就得到了自然数的stream：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;0 0 0 0 0 0 0 0 ...
  1 1 1 1 1 1 1 1 ...
    1 1 1 1 1 1 1 1 ...
      1 1 1 1 1 1 1 1 ...
        1 1 1 1 1 1 1 1 ...
          1 1 1 1 1 1 1 1 ...
            1 1 1 1 1 1 1 1 ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;nats的值如下所示：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nats&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而getWindowSum函数则是取出自然数的stream的前10个自然数，求这10个自然数的和，得到一个新的无穷的stream。这和信号处理中的滑动滤波的窗口计算是一样的，其值如下所示：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tensWindows&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;105&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们现在来看图像处理，图像可以看成一个有限的二维阵列的数据结构，如下面的图所示，并不是一个无穷的stream。图像处理中用的最多的一种场景是图像滤波，根据当前图像的一个点的邻域像素的值计算出新图像上该点的值，这种场景是可以应用Comonad来计算的。&lt;/p&gt;&lt;p&gt;在图像滤波的计算中，我们关心的是图像上的一个点及其邻域的点，因此有一个焦点，如下图所示：&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-65883e7c5308ffbd3acaeea78d376388_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;676&quot; data-rawheight=&quot;676&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;676&quot; data-original=&quot;https://pic1.zhimg.com/v2-65883e7c5308ffbd3acaeea78d376388_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-65883e7c5308ffbd3acaeea78d376388_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;676&quot; data-rawheight=&quot;676&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;676&quot; data-original=&quot;https://pic1.zhimg.com/v2-65883e7c5308ffbd3acaeea78d376388_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-65883e7c5308ffbd3acaeea78d376388_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;于是，我们可以把图像看成一个带焦点的二维阵列的数据结构。其中二维阵列可以用带宽和高参数的一维向量来表示，再加上焦点坐标就得到了我们要的图像数据结构定义。如下所示：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-- | 用一维向量表示的图像二维阵列&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;biWidth&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;biHeight&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;biData&lt;/span&gt;   &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Functor&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- | 带焦点的图像数据结构&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;boxedImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cx&lt;/span&gt;         &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cy&lt;/span&gt;         &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Functor&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- | 带焦点的图像和一般图像的转换函数&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;biWidth&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;biHeight&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;otherwise&lt;/span&gt;                         &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;Can not focus on empty image&amp;#34;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;unfocus&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;unfocus&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;带焦点的图像数据结构FocusedImage  a 我们可以将其看成一个Comonad。其extract函数就是直接把焦点处的值取出来。duplicate函数就是把这个图像的二维阵列中的每一个点的值都扩展为一个以该点为焦点的带焦点的图像数据结构，这个新的图像数据结构的二维阵列和原来的是一样的，保持了相似性。extend函数的参数f 是个函数，这个函数f 将新的带焦点的图像数据结构reduce为一个图像的像素值。这里我们回顾一下 extend f = fmap f . duplicate。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;kr&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Comonad&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;extract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biData&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biWidth&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;duplicate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BoxedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quotRem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;w&lt;/span&gt;
          &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&amp;#39;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果extend函数的参数f 这个函数只关心图像中的焦点及其邻域的点的值（一般邻域是3 x 3，5 x 5），则extend f就是这个带焦点的图像数据结构的滤波处理函数，得到一个新的带焦点的图像数据结构，这个新的图像就是滤波处理后的图像。&lt;/p&gt;&lt;p&gt;例如一个常见的gauss模糊滤波的处理，其计算核大小是3 x 3的，如下所示：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-04c65e7f4c23a56df068596be4032f9d_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;171&quot; data-rawheight=&quot;95&quot; class=&quot;content_image&quot; width=&quot;171&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-04c65e7f4c23a56df068596be4032f9d_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;171&quot; data-rawheight=&quot;95&quot; class=&quot;content_image lazy&quot; width=&quot;171&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-04c65e7f4c23a56df068596be4032f9d_b.png&quot;/&gt;&lt;/figure&gt;&lt;p&gt;我们就可以定义如下的计算核函数，可以看到其只关心3 x 3 大小的邻域的点的值：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;blur&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;blur&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;{-# INLINE nbi #-}&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.!&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后定义如下的获取邻域点的值的函数，注意这个neighbour函数对超出图像边界的邻域点做了特殊处理，使用了回绕的处理方式，这是一种效果较好的处理方式：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;neighbour&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;neighbour&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biData&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biWidth&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biWidth&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;y&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;biHeight&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;{-# INLINE wrap #-}&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hi&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;-- 坐标回绕处理&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;-- 坐标回绕处理&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再定义一个取遍焦点的邻域的所有点的值的函数，把这几个函数组合起来，就得到了带焦点的图像数据结构的高斯滤波处理函数blurImage：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;filterImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;filterImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fimg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kernelSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;neighbour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nbx&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nby&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fimg&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbx&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;nby&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;{-# INLINE kernelSize #-}&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;kernelSize&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kernelW&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;{-# INLINE blurImage #-}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;blurImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;blurImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filterImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;blur&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在main函数中调用blurImage函数，就可以对图像进行高斯模糊处理了，这里的readImage读取jpg 文件并将其转换为灰度图的带焦点的图像数据结构FocusedImage  a，writePng则将带焦点的图像数据结构FocusedImage  a 写入到png 文件中。这两个函数用了JuicyPixels包中提供的readImage和writePng两个函数，JuicyPixels是非常优秀的加载、保存、转换图像的的Haskell实现。使用它，减少了自己写加载和保存图像的函数的麻烦。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;Hello, Haskell!&amp;#34;&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readImage&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;data/yingwuhua.jpg&amp;#34;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;-- writePng &amp;#34;output.png&amp;#34; . unfocus . (=&amp;gt;&amp;gt; ebossImage) . focus $ img&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;writePng&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;output.png&amp;#34;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unfocus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;blurImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文章的题图经过这个高斯模糊滤波处理后的灰度图效果如下：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e1dec3542cd5385eab0f8893c4b48154_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-e1dec3542cd5385eab0f8893c4b48154_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e1dec3542cd5385eab0f8893c4b48154_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-e1dec3542cd5385eab0f8893c4b48154_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-e1dec3542cd5385eab0f8893c4b48154_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;我们还可以定义其他滤波处理函数，比如浮雕效果的滤波处理。我们先定义计算核函数，计算核大小同样是3 x 3的：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;eboss&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;eboss&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;{-# INLINE nbi #-}&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;nbi&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.!&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重复利用前面定义的取遍焦点的邻域的所有点的函数，就得到了浮雕效果的滤波处理函数：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;cm&quot;&gt;{-# INLINE ebossImage #-}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;ebossImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;ebossImage&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filterImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eboss&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里由于Haskell的惰性计算特性，eboss计算核函数中的0 项不参与计算，计算速度比高斯模糊滤波处理快了60%左右，其灰度图的效果图如下：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f1bdaf85457cd55510345fb5cdf8b10b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic4.zhimg.com/v2-f1bdaf85457cd55510345fb5cdf8b10b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f1bdaf85457cd55510345fb5cdf8b10b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic4.zhimg.com/v2-f1bdaf85457cd55510345fb5cdf8b10b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-f1bdaf85457cd55510345fb5cdf8b10b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;Comonad的cokleisli函数是可以组合的，因此我们也可以把这些带焦点的图像的滤波处理函数组合起来，得到一个多种滤波组合的功能更丰富的滤波处理函数：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;reduceNoise&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FocusedImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;reduceNoise&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fimg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original&lt;/span&gt;   &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;extract&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fimg&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blurred&lt;/span&gt;    &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;blurImage&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fimg&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;edged&lt;/span&gt;       &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;original&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;blurred&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;threshold&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edged&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromIntegral&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;blurred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;threshold&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于上面的滤波处理函数的计算核是一样大小的，其组合起来所耗费的滤波处理时间比单个的滤波处理时间差别很小。&lt;/p&gt;&lt;p&gt;这是Comonad的一个很有意思的应用例子，大家可以在此基础上做些进一步的尝试。&lt;/p&gt;&lt;p&gt;参考和引用：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//jaspervdj.be/posts/2014-11-27-comonads-image-processing.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-ff1aac31e29b03c075ed47f827d9d298_180x120.jpg&quot; data-image-width=&quot;600&quot; data-image-height=&quot;400&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Image Processing with Comonads&lt;/a&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>parker liu</author>
<guid isPermaLink="false">2020-04-20-133460864</guid>
<pubDate>Mon, 20 Apr 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>南京大学静态程序分析课程《软件分析》上线啦！</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-04-15-110050716.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/110050716&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-64241b7d80e67f52cae789d4229ad4f5_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;南京大学静态程序分析课程《软件分析》号外！&lt;/p&gt;&lt;p&gt;自2020年2月末，南京大学计算机科学与技术系专业选修课程《软件分析》正式开课啦！受疫情影响，该课程将在线上授课，主讲教师为&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//yuelee.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;李樾&lt;/a&gt;和&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//silverbullettt.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我&lt;/a&gt;，该课程将系统讲解静态程序分析相关知识。&lt;/p&gt;&lt;p&gt;为了让南大的同学们可以回看上课视频，也为了让更多其它学校感兴趣的同学们可以学习静态分析，我们现在每周上课之后会上传直播的录像。目前计划持续更新课程录像直到疫情结束（每周四更新）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下是已更新的所有课程录像（目前更新到第七节 ~( ˘•ω•˘ )~）：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-66f1f089c70bb49a1daa222b8fabf49b_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程01（Introduction）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-403e1ed7d9b47bb6b0b340da59b53441_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程02（Intermediate Representation）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av95400721/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-223e3e9b744b9469542c392c4159df00_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程03（Data Flow Analysis I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av97277892/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-4974c7e82fec4758ad5bd0d73040a47e_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程04（Data Flow Analysis II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1A741117it/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-26b3ad921fb9cd0ec876b055dd2f1726_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程05（Data Flow Analysis - Foundations I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1964y1M7nL/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-ee20733f8d7305c3b9a1d9a47aa279df_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程06（Data Flow Analysis - Foundations II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1GQ4y1T7zm&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-86a5916e6f3d954f5aa99da481d6aa18_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程07（Interprocedural Analysis）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;p&gt;也可以直接进入课程频道观看所有录像：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//space.bilibili.com/2919428/channel/detail%3Fcid%3D106434&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;p&gt;欢迎对PL和静态程序分析感兴趣的小伙伴们前来围观╭(●｀∀´●)╯&lt;/p&gt;</description>
<author>甜品专家</author>
<guid isPermaLink="false">2020-04-15-110050716</guid>
<pubDate>Wed, 15 Apr 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>南京大学静态程序分析课程《软件分析》上线啦！</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-04-03-110050716.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/110050716&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-64241b7d80e67f52cae789d4229ad4f5_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;南京大学静态程序分析课程《软件分析》号外！&lt;/p&gt;&lt;p&gt;自2020年2月末，南京大学计算机科学与技术系专业选修课程《软件分析》正式开课啦！受疫情影响，该课程将在线上授课，主讲教师为&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//yuelee.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;李樾&lt;/a&gt;和&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//silverbullettt.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我&lt;/a&gt;，该课程将系统讲解静态程序分析相关知识。&lt;/p&gt;&lt;p&gt;为了让南大的同学们可以回看上课视频，也为了让更多其它学校感兴趣的同学们可以学习静态分析，我们现在每周上课之后会上传直播的录像。目前计划持续更新课程录像直到疫情结束（每周四更新）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下是已更新的所有课程录像（目前更新到第六节 ~( ˘•ω•˘ )~）：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-66f1f089c70bb49a1daa222b8fabf49b_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程01（Introduction）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-403e1ed7d9b47bb6b0b340da59b53441_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程02（Intermediate Representation）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av95400721/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-223e3e9b744b9469542c392c4159df00_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程03（Data Flow Analysis I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av97277892/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-4974c7e82fec4758ad5bd0d73040a47e_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程04（Data Flow Analysis II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1A741117it/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-26b3ad921fb9cd0ec876b055dd2f1726_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程05（Data Flow Analysis - Foundations I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1964y1M7nL/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-ee20733f8d7305c3b9a1d9a47aa279df_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程06（Data Flow Analysis - Foundations II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;p&gt;也可以直接进入课程频道观看所有录像：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//space.bilibili.com/2919428/channel/detail%3Fcid%3D106434&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;p&gt;欢迎对PL和静态程序分析感兴趣的小伙伴们前来围观╭(●｀∀´●)╯&lt;/p&gt;</description>
<author>甜品专家</author>
<guid isPermaLink="false">2020-04-03-110050716</guid>
<pubDate>Fri, 03 Apr 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>南京大学静态程序分析课程《软件分析》上线啦！</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-27-110050716.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/110050716&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-64241b7d80e67f52cae789d4229ad4f5_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;南京大学静态程序分析课程《软件分析》号外！&lt;/p&gt;&lt;p&gt;自2020年2月末，南京大学计算机科学与技术系专业选修课程《软件分析》正式开课啦！受疫情影响，该课程将在线上授课，主讲教师为&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//yuelee.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;李樾&lt;/a&gt;和&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//silverbullettt.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我&lt;/a&gt;，该课程将系统讲解静态程序分析相关知识。&lt;/p&gt;&lt;p&gt;为了让南大的同学们可以回看上课视频，也为了让更多其它学校感兴趣的同学们可以学习静态分析，我们现在每周上课之后会上传直播的录像。目前计划持续更新课程录像直到疫情结束（每周四更新）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下是已更新的所有课程录像（目前更新到第五节 ~( ˘•ω•˘ )~）：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-66f1f089c70bb49a1daa222b8fabf49b_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程01（Introduction）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-403e1ed7d9b47bb6b0b340da59b53441_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程02（Intermediate Representation）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av95400721/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-223e3e9b744b9469542c392c4159df00_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程03（Data Flow Analysis I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av97277892/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-4974c7e82fec4758ad5bd0d73040a47e_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程04（Data Flow Analysis II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1A741117it/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bilibili.com/video/BV1A&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;741117it/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;也可以直接进入课程频道观看所有录像：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//space.bilibili.com/2919428/channel/detail%3Fcid%3D106434&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;p&gt;欢迎对PL和静态程序分析感兴趣的小伙伴们前来围观╭(●｀∀´●)╯&lt;/p&gt;</description>
<author>甜品专家</author>
<guid isPermaLink="false">2020-03-27-110050716</guid>
<pubDate>Fri, 27 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>txmonad：一个玩具版的 xmonad</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-24-115914944.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/115914944&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e5a2a9858bfa0c0e317c6943a84edb5b_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;动机与介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/xmonad/xmonad&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;xmonad&lt;/a&gt; 是一个以 Haskell 书写的非常优秀的平铺式桌面管理系统，也是一个相当不错的 Haskell 工程代码入门项目，它有着非常优秀的类型设计、函数式的数据结构、工程代码的异常处理以及健壮性设计，当然最重要的是一种基于 monad 和 monad transformer 的编程范式。&lt;/p&gt;&lt;p&gt;但同时 xmonad 作为一个 Haskell 的入门项目也有一些问题，它和 X11 紧耦合，有非常复杂的与之相关的状态与事件处理逻辑，这些代码使得 xmonad 对于来自各个平台/系统的 Haskell 初学者来说，显得不够友好。另外如果想进行代码修改、理解架构的话，运行一个桌面管理系统也显得太过折腾。&lt;/p&gt;&lt;p&gt;所以我们开发并开源了 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/fragilelambda/txmonad&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;txmoand&lt;/a&gt; (a toy xmoand) 这一项目： &lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/fragilelambda/txmonad&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/fragilelambd&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;a/txmonad&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;txmonad 是一个命令行版本的 xmoand 模仿项目，它仿照了 xmonad 的架构设计以及类型设计，但是只能进行命令行交互。我们希望这一项目可以成为 Haskell 初学者的游乐场，更好地方便更多 Haskell 初学者上手体验，修改代码，从而了解一个工程级别的 Haskell 项目是怎样运作的。&lt;/p&gt;&lt;h2&gt;演示截图&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4e2c1537c713336d783030663e808c8a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1148&quot; data-rawheight=&quot;1546&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1148&quot; data-original=&quot;https://pic3.zhimg.com/v2-4e2c1537c713336d783030663e808c8a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4e2c1537c713336d783030663e808c8a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1148&quot; data-rawheight=&quot;1546&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1148&quot; data-original=&quot;https://pic3.zhimg.com/v2-4e2c1537c713336d783030663e808c8a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4e2c1537c713336d783030663e808c8a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt; 这里我们对 2 块屏幕，多个工作区的一个模拟展示。&lt;/p&gt;&lt;h2&gt;与 xmonad 的异同&lt;/h2&gt;&lt;h2&gt;相同之处&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;项目采用了相似的架构设计&lt;/li&gt;&lt;li&gt;项目采用了相似的函数式数据结构&lt;/li&gt;&lt;li&gt;基于类型的编程与类型设计&lt;/li&gt;&lt;li&gt;工程代码的代码设计与健壮性设计&lt;/li&gt;&lt;li&gt;基于 monad 的编程范式&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;不同之处&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;txmonad &lt;b&gt;不是&lt;/b&gt; 一个桌面管理系统，它无法助力进行任何有意义的实际工作，它只是一个代码教学项目&lt;/li&gt;&lt;li&gt;txmonad 不依赖于 X11&lt;/li&gt;&lt;li&gt;txmonad 对于事件处理以及消息传递机制的处理相比于 xmonad 有大幅简化（如果不是过分简化的话）&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;后续开发计划&lt;/h2&gt;&lt;p&gt;目前构思的一些开发计划以及在考虑尝试的点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;加入用户级别布局算法以及配置的支持 &lt;/li&gt;&lt;li&gt;对于 quick-check 的支持 &lt;/li&gt;&lt;li&gt;一系列对于初学者的教程或者上手文章  &lt;/li&gt;&lt;li&gt;更多基于新 GHC 特性的对于 txmonad 的改造，比如加入 lens，更多想法可见 reddit 上的&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.reddit.com/r/haskell/comments/5e8fmo/what_would_xmonad_with_modern_ghc_features_look/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;讨论&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;后记&lt;/h2&gt;&lt;p&gt;抱歉新的更新鸽了这么久，一方面有工作学习上的原因，一方面也是因为 Haskell 各方面知识的坑实在太深（之前较长时间都掉进了范畴论的深坑里无法自拔）。&lt;/p&gt;&lt;p&gt;这个工程项目的上手是我很早前就在规划的一个项目，希望能够通过这个项目适当地减缓 Haskell 初学者的上手难度曲线，目前项目本身还有许多不完善的地方欢迎大家多提 PR 和 issue。&lt;/p&gt;&lt;p&gt;另外关于专栏后续的更新我有一些方向，这里列出来和大家讨论：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;基于 txmonad 的更多工程实践，以及更详细的带逛上手教程&lt;/li&gt;&lt;li&gt;范畴论与 Haskell 的相关文章&lt;/li&gt;&lt;li&gt;基于类型编程的更多实践以及上手教程&lt;/li&gt;&lt;li&gt;函数式数据结构与算法相关文章&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;不知道大家更倾向于看哪些的文章，欢迎讨论，向我提出建议和留言！（当然我不保证一定能采纳大家的意见，甚至有可能会继续鸽 =w=）&lt;/p&gt;&lt;p&gt;最后，祝愿疫情早日结束，大家身体健康！&lt;/p&gt;&lt;p&gt;最后的最后，我们的范畴论电报群还在持续加人中，欢迎大家加入讨论哟~&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//t.me/wecattheory&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;t.me/wecattheory&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>禾木旁</author>
<guid isPermaLink="false">2020-03-24-115914944</guid>
<pubDate>Tue, 24 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>南京大学静态程序分析课程《软件分析》上线啦！</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-20-110050716.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/110050716&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-64241b7d80e67f52cae789d4229ad4f5_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;南京大学静态程序分析课程《软件分析》号外！&lt;/p&gt;&lt;p&gt;自2020年2月末，南京大学计算机科学与技术系专业选修课程《软件分析》正式开课啦！受疫情影响，该课程将在线上授课，主讲教师为&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//yuelee.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;李樾&lt;/a&gt;和&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//silverbullettt.bitbucket.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我&lt;/a&gt;，该课程将系统讲解静态程序分析相关知识。&lt;/p&gt;&lt;p&gt;为了让南大的同学们可以回看上课视频，也为了让更多其它学校感兴趣的同学们可以学习静态分析，我们现在每周上课之后会上传直播的录像。目前计划持续更新课程录像直到疫情结束（每周四更新）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下是已更新的所有课程录像（目前更新到第四节 ~( ˘•ω•˘ )~）：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic4.zhimg.com/v2-66f1f089c70bb49a1daa222b8fabf49b_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程01（Introduction）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-403e1ed7d9b47bb6b0b340da59b53441_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程02（Intermediate Representation）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av95400721/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-223e3e9b744b9469542c392c4159df00_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程03（Data Flow Analysis I）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av97277892/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-4974c7e82fec4758ad5bd0d73040a47e_180x120.jpg&quot; data-image-width=&quot;1280&quot; data-image-height=&quot;720&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;南京大学《软件分析》课程04（Data Flow Analysis II）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili&lt;/a&gt;&lt;p&gt;也可以直接进入课程频道观看所有录像：&lt;/p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//space.bilibili.com/2919428/channel/detail%3Fcid%3D106434&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;p&gt;欢迎对PL和静态程序分析感兴趣的小伙伴们前来围观╭(●｀∀´●)╯&lt;/p&gt;</description>
<author>甜品专家</author>
<guid isPermaLink="false">2020-03-20-110050716</guid>
<pubDate>Fri, 20 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>编译器资料3  关于编译器和静态分析的一些课程</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-17-111635473.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/111635473&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;陆陆续续收集了一些课程，主要是编译器和静态分析方面的，在这里分享给大家，也给自己做个资料存档。&lt;/p&gt;&lt;p&gt;国外的一些课程：&lt;/p&gt;&lt;p&gt;1、Stanford编译器课程系列&lt;/p&gt;&lt;p&gt;CS143：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//web.stanford.edu/class/archive/cs/cs143/cs143.1128/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS143: Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS243：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//suif.stanford.edu/~courses/cs243/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS243 - Advanced Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS343：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//web.stanford.edu/class/cs343/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS 343&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个系列课程，共有三门课。其中，CS143讲的是编译器的基础知识；CS142讲的是程序分析和优化技术，龙书的作者&lt;b&gt;Monica Lam&lt;/b&gt;是这门课的&lt;b&gt;Instructor&lt;/b&gt;；CS143则是聚焦近些年的编译器领域的最新研究成果，将课程的中心放到阅读和讨论相关论文上了。&lt;/p&gt;&lt;p&gt;另外，&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av18939632&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bilibili.com/video/av18&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;939632&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; 这个公开课据说是CS143课程的简化版本。&lt;/p&gt;&lt;p&gt;2、UPenn(宾西法尼亚大学)&lt;/p&gt;&lt;p&gt;CIS341 - &lt;i&gt;Compilers&lt;/i&gt; ：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.cis.upenn.edu/~cis341/current/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CIS 341 Spring 2020&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这属于基本编译器课程，主要分为：词法/语法分析、代码生成、语义分析、优化和运行时支持几个方面。&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//rightingcode.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Software Analysis and Testing&lt;/a&gt;&lt;/i&gt;&lt;/b&gt; Mayur Naik &lt;/p&gt;&lt;p&gt;3、Fernando先生的静态程序分析课程&lt;/p&gt;&lt;p&gt;DCC888：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//homepages.dcc.ufmg.br/~fernando/classes/dcc888/ementa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DCC888&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这门课程主要是针对静态程序分析，对静态程序分析以及对应的优化技术介绍的很全面，并且PPT内容很详细，引用资料也非常全。同时，该课程还有一部分LLVM相关的课程内容。&lt;/p&gt;&lt;p&gt;4、奥尔胡斯大学(丹麦)静态程序分析课程&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//cs.au.dk/~amoeller/spa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Static Program Analysis&lt;/a&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这门课程把对应的教材也放出来了，对于静态分析的基本内容也都覆盖了，很多内容还被DCC888课程选作参考。虽然覆盖内容不一定有DCC888全面，但是因为有教材，所以对于覆盖的内容，比较成体系。&lt;/p&gt;&lt;p&gt;5、莱斯大学的编译器构造课程&lt;/p&gt;&lt;p&gt;COMP412：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.clear.rice.edu/comp412/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;COMP412&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、萨克拉门托州大学&lt;/p&gt;&lt;p&gt;CSC 151: Compiler Construction：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av81692863&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSC 151: Compiler Construction&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、UIUC&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs426/fa2019/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS426&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS526：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs526/sp2020/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2020&lt;/a&gt; （未开）      历史课程：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//polaris.cs.uiuc.edu/~padua/cs526/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2011&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;/p&gt;&lt;p&gt;国内一些大学的课程：&lt;/p&gt;&lt;p&gt;1、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av59119931&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;国防科技大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89903205&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哈尔滨工业大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;3、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av17869142&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;东南大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;4、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33392713&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;西安交大《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;5、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33153096&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;中国科学技术大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/chyyuu/compiler_course_info&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;清华大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//xiongyingfei.github.io/SA/2019/main.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;北京大学《软件分析技术》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;8、南京大学《软件分析》（连载中）&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————————&lt;/p&gt;&lt;p&gt;业界的一些课程：&lt;/p&gt;&lt;p&gt;1、燧原科技的编译优化课程（连载中）：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88720239&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88807060&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89910858&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;03&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91744591&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;04&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93563697&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;05&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程是基于上面提到的DCC888课程开设的,多数时间讲解DCC888的PPT，核心也是程序分析和优化。&lt;/p&gt;&lt;p&gt;2、中科院软件所PLCT实验室和HelloGCC/HelloLLVM联合推出的编译技术入门与实战课程（连载中）&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av78503049&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;方舟·编译技术入门与实战(编译原理+开源项目)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程既包含理论部分，也包含了相当比重的实战部分，所以和大学里的编译课程不太相同。同时，在侧重点上也和大学编译原理课程不同，后端的比重要大一些。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;————————&lt;/p&gt;&lt;p&gt;备注：&lt;/p&gt;&lt;p&gt;1、感谢&lt;a href=&quot;https://www.zhihu.com/people/chenzhanghao&quot; class=&quot;internal&quot;&gt;陈张昊&lt;/a&gt; &lt;a href=&quot;https://www.zhihu.com/people/inkydragon&quot; class=&quot;internal&quot;&gt;woclass&lt;/a&gt; 推荐课程。&lt;/p&gt;&lt;p&gt;2、目前已经收集到了37门课，不断有相关资源上传，敬请关注：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/shining1984/PL-Compiler-Resource&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/shining1984/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;PL-Compiler-Resource&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————&lt;/p&gt;&lt;p&gt;20200317最新更新：课程数量已经超过40门，书籍数量超过10本，blog数量超过10个。欢迎大家关注，也欢迎大家推荐资源。&lt;/p&gt;</description>
<author>小乖他爹</author>
<guid isPermaLink="false">2020-03-17-111635473</guid>
<pubDate>Tue, 17 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>编译器资料3  关于编译器和静态分析的一些课程</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-15-111635473.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/111635473&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;陆陆续续收集了一些课程，主要是编译器和静态分析方面的，在这里分享给大家，也给自己做个资料存档。&lt;/p&gt;&lt;p&gt;国外的一些课程：&lt;/p&gt;&lt;p&gt;1、Stanford编译器课程系列&lt;/p&gt;&lt;p&gt;CS143：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//web.stanford.edu/class/archive/cs/cs143/cs143.1128/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS143: Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS243：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//suif.stanford.edu/~courses/cs243/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS243 - Advanced Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS343：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//web.stanford.edu/class/cs343/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS 343&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个系列课程，共有三门课。其中，CS143讲的是编译器的基础知识；CS142讲的是程序分析和优化技术，龙书的作者&lt;b&gt;Monica Lam&lt;/b&gt;是这门课的&lt;b&gt;Instructor&lt;/b&gt;；CS143则是聚焦近些年的编译器领域的最新研究成果，将课程的中心放到阅读和讨论相关论文上了。&lt;/p&gt;&lt;p&gt;另外，&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av18939632&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bilibili.com/video/av18&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;939632&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; 这个公开课据说是CS143课程的简化版本。&lt;/p&gt;&lt;p&gt;2、UPenn(宾西法尼亚大学)&lt;/p&gt;&lt;p&gt;CIS341 - &lt;i&gt;Compilers&lt;/i&gt; ：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.cis.upenn.edu/~cis341/current/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CIS 341 Spring 2020&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这属于基本编译器课程，主要分为：词法/语法分析、代码生成、语义分析、优化和运行时支持几个方面。&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//rightingcode.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Software Analysis and Testing&lt;/a&gt;&lt;/i&gt;&lt;/b&gt; Mayur Naik &lt;/p&gt;&lt;p&gt;3、Fernando先生的静态程序分析课程&lt;/p&gt;&lt;p&gt;DCC888：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//homepages.dcc.ufmg.br/~fernando/classes/dcc888/ementa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DCC888&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这门课程主要是针对静态程序分析，对静态程序分析以及对应的优化技术介绍的很全面，并且PPT内容很详细，引用资料也非常全。同时，该课程还有一部分LLVM相关的课程内容。&lt;/p&gt;&lt;p&gt;4、奥尔胡斯大学(丹麦)静态程序分析课程&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//cs.au.dk/~amoeller/spa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Static Program Analysis&lt;/a&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这门课程把对应的教材也放出来了，对于静态分析的基本内容也都覆盖了，很多内容还被DCC888课程选作参考。虽然覆盖内容不一定有DCC888全面，但是因为有教材，所以对于覆盖的内容，比较成体系。&lt;/p&gt;&lt;p&gt;5、莱斯大学的编译器构造课程&lt;/p&gt;&lt;p&gt;COMP412：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.clear.rice.edu/comp412/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;COMP412&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、萨克拉门托州大学&lt;/p&gt;&lt;p&gt;CSC 151: Compiler Construction：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av81692863&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSC 151: Compiler Construction&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、UIUC&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs426/fa2019/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS426&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS526：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs526/sp2020/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2020&lt;/a&gt; （未开）      历史课程：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//polaris.cs.uiuc.edu/~padua/cs526/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2011&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;/p&gt;&lt;p&gt;国内一些大学的课程：&lt;/p&gt;&lt;p&gt;1、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av59119931&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;国防科技大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89903205&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哈尔滨工业大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;3、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av17869142&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;东南大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;4、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33392713&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;西安交大《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;5、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33153096&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;中国科学技术大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/chyyuu/compiler_course_info&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;清华大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//xiongyingfei.github.io/SA/2019/main.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;北京大学《软件分析技术》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;8、南京大学《软件分析》（连载中）&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————————&lt;/p&gt;&lt;p&gt;业界的一些课程：&lt;/p&gt;&lt;p&gt;1、燧原科技的编译优化课程（连载中）：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88720239&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88807060&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89910858&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;03&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91744591&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;04&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93563697&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;05&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程是基于上面提到的DCC888课程开设的,多数时间讲解DCC888的PPT，核心也是程序分析和优化。&lt;/p&gt;&lt;p&gt;2、中科院软件所PLCT实验室和HelloGCC/HelloLLVM联合推出的编译技术入门与实战课程（连载中）&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av78503049&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;方舟·编译技术入门与实战(编译原理+开源项目)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程既包含理论部分，也包含了相当比重的实战部分，所以和大学里的编译课程不太相同。同时，在侧重点上也和大学编译原理课程不同，后端的比重要大一些。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;————————&lt;/p&gt;&lt;p&gt;备注：&lt;/p&gt;&lt;p&gt;1、感谢&lt;a href=&quot;https://www.zhihu.com/people/chenzhanghao&quot; class=&quot;internal&quot;&gt;陈张昊&lt;/a&gt; &lt;a href=&quot;https://www.zhihu.com/people/inkydragon&quot; class=&quot;internal&quot;&gt;woclass&lt;/a&gt; 推荐课程。&lt;/p&gt;&lt;p&gt;2、目前已经收集到了37门课，不断有相关资源上传，敬请关注：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/shining1984/PL-Compiler-Resource&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/shining1984/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;PL-Compiler-Resource&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>小乖他爹</author>
<guid isPermaLink="false">2020-03-15-111635473</guid>
<pubDate>Sun, 15 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>HOPL 4 (History of Programming Languages ) 预印本收集</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-14-113124925.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/113124925&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//hopl4.sigplan.org/track/hopl-4-papers%23List-of-Accepted-Papers&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;List of Accepted Papers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;找到的:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//erdani.com/hopl2020-draft.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Origins of the D Programming Language&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//fsharp.org/history/hopl-final/hopl-fsharp.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;The Early History of F#&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//zenodo.org/record/3707008&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript: The First 20 Years&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.iro.umontreal.ca/~monnier/hopl-4-emacs-lisp.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Evolution of Emacs Lisp&lt;/a&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;还没找到的:&lt;/p&gt;&lt;p&gt;APL Since 1978&lt;/p&gt;&lt;p&gt;Thriving in a crowded and changing world: C++ 2006-2020&lt;/p&gt;&lt;p&gt;A History of Clojure&lt;/p&gt;&lt;p&gt;History of Coarrays and SPMD Parallelism in Fortran&lt;/p&gt;&lt;p&gt;A history of the Groovy programming language&lt;/p&gt;&lt;p&gt;LabVIEW&lt;/p&gt;&lt;p&gt;History of Logo&lt;/p&gt;&lt;p&gt;Hygienic Macro Technology&lt;/p&gt;&lt;p&gt;A History of MATLAB&lt;/p&gt;&lt;p&gt;The Origins of Objective-C at PPI/Stepstone and its Evolution at NeXT&lt;/p&gt;&lt;p&gt;A history of the Oz multiparadigm language&lt;/p&gt;&lt;p&gt;S, R and Data Science&lt;/p&gt;&lt;p&gt;The Evolution of Smalltalk from Smalltalk-72 through Squeak&lt;/p&gt;&lt;p&gt;The History of Standard ML&lt;/p&gt;&lt;p&gt;Verilog HDL and its ancestors and descendants&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;私货:&lt;/p&gt;&lt;a href=&quot;https://www.zhihu.com/question/60379930/answer/179768042&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot;internal&quot;&gt;如何评价Conference &amp;lt;History of Programming Languages&amp;gt;?&lt;/a&gt;&lt;a href=&quot;https://www.zhihu.com/question/39932462/answer/187267082&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot;internal&quot;&gt;为什么我们需要了解编程的历史？&lt;/a&gt;&lt;a href=&quot;https://www.zhihu.com/question/20767007/answer/16147639&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot;internal&quot;&gt;有哪些介绍编程语言起源和历史的书值得推荐？&lt;/a&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>祖与占</author>
<guid isPermaLink="false">2020-03-14-113124925</guid>
<pubDate>Sat, 14 Mar 2020 00:00:00 +0800</pubDate>
</item>
<item>
<title>编译器资料3  关于编译器和静态分析的一些课程</title>
<link>https://henix.github.io/feeds/zhuanlan.marisa/2020-03-14-111635473.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/111635473&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;陆陆续续收集了一些课程，主要是编译器和静态分析方面的，在这里分享给大家，也给自己做个资料存档。&lt;/p&gt;&lt;p&gt;国外的一些课程：&lt;/p&gt;&lt;p&gt;1、Stanford编译器课程系列&lt;/p&gt;&lt;p&gt;CS143：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//web.stanford.edu/class/archive/cs/cs143/cs143.1128/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS143: Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS243：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//suif.stanford.edu/~courses/cs243/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS243 - Advanced Compilers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS343：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//web.stanford.edu/class/cs343/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS 343&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个系列课程，共有三门课。其中，CS143讲的是编译器的基础知识；CS142讲的是程序分析和优化技术，龙书的作者&lt;b&gt;Monica Lam&lt;/b&gt;是这门课的&lt;b&gt;Instructor&lt;/b&gt;；CS143则是聚焦近些年的编译器领域的最新研究成果，将课程的中心放到阅读和讨论相关论文上了。&lt;/p&gt;&lt;p&gt;另外，&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av18939632&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;bilibili.com/video/av18&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;939632&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt; 这个公开课据说是CS143课程的简化版本。&lt;/p&gt;&lt;p&gt;2、UPenn(宾西法尼亚大学)&lt;/p&gt;&lt;p&gt;CIS341 - &lt;i&gt;Compilers&lt;/i&gt; ：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.cis.upenn.edu/~cis341/current/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CIS 341 Spring 2020&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这属于基本编译器课程，主要分为：词法/语法分析、代码生成、语义分析、优化和运行时支持几个方面。&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//rightingcode.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Software Analysis and Testing&lt;/a&gt;&lt;/i&gt;&lt;/b&gt; Mayur Naik &lt;/p&gt;&lt;p&gt;3、Fernando先生的静态程序分析课程&lt;/p&gt;&lt;p&gt;DCC888：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//homepages.dcc.ufmg.br/~fernando/classes/dcc888/ementa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DCC888&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这门课程主要是针对静态程序分析，对静态程序分析以及对应的优化技术介绍的很全面，并且PPT内容很详细，引用资料也非常全。同时，该课程还有一部分LLVM相关的课程内容。&lt;/p&gt;&lt;p&gt;4、奥尔胡斯大学(丹麦)静态程序分析课程&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//cs.au.dk/~amoeller/spa/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Static Program Analysis&lt;/a&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这门课程把对应的教材也放出来了，对于静态分析的基本内容也都覆盖了，很多内容还被DCC888课程选作参考。虽然覆盖内容不一定有DCC888全面，但是因为有教材，所以对于覆盖的内容，比较成体系。&lt;/p&gt;&lt;p&gt;5、莱斯大学的编译器构造课程&lt;/p&gt;&lt;p&gt;COMP412：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.clear.rice.edu/comp412/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;COMP412&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、萨克拉门托州大学&lt;/p&gt;&lt;p&gt;CSC 151: Compiler Construction：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av81692863&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSC 151: Compiler Construction&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、UIUC&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs426/fa2019/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS426&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CS526：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//courses.engr.illinois.edu/cs526/sp2020/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2020&lt;/a&gt; （未开）      历史课程：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//polaris.cs.uiuc.edu/~padua/cs526/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2011&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;/p&gt;&lt;p&gt;国内一些大学的课程：&lt;/p&gt;&lt;p&gt;1、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av59119931&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;国防科技大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89903205&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哈尔滨工业大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;3、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av17869142&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;东南大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;4、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33392713&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;西安交大《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;5、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av33153096&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;中国科学技术大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/chyyuu/compiler_course_info&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;清华大学《编译原理》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;7、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//xiongyingfei.github.io/SA/2019/main.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;北京大学《软件分析技术》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;8、南京大学《软件分析》（连载中）&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91858985&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93643665&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————————&lt;/p&gt;&lt;p&gt;业界的一些课程：&lt;/p&gt;&lt;p&gt;1、燧原科技的编译优化课程（连载中）：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88720239&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;01&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av88807060&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;02&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av89910858&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;03&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av91744591&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;04&lt;/a&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av93563697&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;05&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程是基于上面提到的DCC888课程开设的,多数时间讲解DCC888的PPT，核心也是程序分析和优化。&lt;/p&gt;&lt;p&gt;2、中科院软件所PLCT实验室和HelloGCC/HelloLLVM联合推出的编译技术入门与实战课程（连载中）&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av78503049&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;方舟·编译技术入门与实战(编译原理+开源项目)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个课程既包含理论部分，也包含了相当比重的实战部分，所以和大学里的编译课程不太相同。同时，在侧重点上也和大学编译原理课程不同，后端的比重要大一些。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;————————&lt;/p&gt;&lt;p&gt;备注：&lt;/p&gt;&lt;p&gt;1、感谢&lt;a href=&quot;https://www.zhihu.com/people/chenzhanghao&quot; class=&quot;internal&quot;&gt;陈张昊&lt;/a&gt; &lt;a href=&quot;https://www.zhihu.com/people/inkydragon&quot; class=&quot;internal&quot;&gt;woclass&lt;/a&gt; 推荐课程。&lt;/p&gt;&lt;p&gt;2、后续相关课程的更新都放到了&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/shining1984/PL-Compiler-Course-Collection&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;repo&lt;/a&gt;里，欢迎大家star。&lt;/p&gt;</description>
<author>小乖他爹</author>
<guid isPermaLink="false">2020-03-14-111635473</guid>
<pubDate>Sat, 14 Mar 2020 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
